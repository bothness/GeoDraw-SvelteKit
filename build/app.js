import {respond} from "@sveltejs/kit/ssr";
import {create_ssr_component, validate_component, missing_component, escape, spread, compute_rest_props, each, add_classes, add_attribute, compute_slots, subscribe, globals, set_store_value, onMount as onMount$1, is_promise} from "svelte/internal";
import {setContext, afterUpdate, onMount, getContext, createEventDispatcher, tick, beforeUpdate} from "svelte";
import {writable, get as get$3, derived} from "svelte/store";
import "svelte/transition";
import "postcss";
import maplibregl from "maplibre-gl";
import {bboxToTile} from "@mapbox/tilebelt";
var root_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\n#svelte-announcer.svelte-1j55zn5{\n  position:absolute;\n  left:0;\n  top:0;\n  clip:rect(0 0 0 0);\n  -webkit-clip-path:inset(50%);\n          clip-path:inset(50%);\n  overflow:hidden;\n  white-space:nowrap;\n  width:1px;\n  height:1px\n}\n\n/* purgecss end ignore */";
const css$c = {
  code: "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}",
  map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n</script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}/>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\t{title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t#svelte-announcer {\\n\\t\\tposition: absolute;\\n\\t\\tleft: 0;\\n\\t\\ttop: 0;\\n\\t\\tclip: rect(0 0 0 0);\\n\\t\\tclip-path: inset(50%);\\n\\t\\toverflow: hidden;\\n\\t\\twhite-space: nowrap;\\n\\t\\twidth: 1px;\\n\\t\\theight: 1px;\\n\\t}\\n</style>"],"names":[],"mappings":"AAsDC,iBAAiB,eAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnB,SAAS,CAAE,MAAM,GAAG,CAAC,CACrB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACZ,CAAC"}`
};
const Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {stores} = $$props;
  let {page} = $$props;
  let {components} = $$props;
  let {props_0 = null} = $$props;
  let {props_1 = null} = $$props;
  let {props_2 = null} = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  let mounted = false;
  let navigated = false;
  let title = null;
  onMount(() => {
    const unsubscribe = stores.page.subscribe(() => {
      if (mounted) {
        navigated = true;
        title = document.title || "untitled page";
      }
    });
    mounted = true;
    return unsubscribe;
  });
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page !== void 0)
    $$bindings.page(page);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  $$result.css.add(css$c);
  {
    stores.page.set(page);
  }
  return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
      default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`
    })}` : ``}`
  })}

${mounted ? `<div id="${"svelte-announcer"}" aria-live="${"assertive"}" aria-atomic="${"true"}" class="${"svelte-1j55zn5"}">${navigated ? `${escape(title)}` : ``}</div>` : ``}`;
});
function set_paths(paths) {
}
function set_prerendering(value) {
}
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module"
});
const template = ({head, body}) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<link rel="icon" href="/favicon.ico" />\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\n		' + head + '\n	</head>\n	<body>\n		<div id="svelte">' + body + "</div>\n	</body>\n</html>\n";
let options = null;
function init(settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: "/./_app/start-4f672076.js",
      css: ["/./_app/assets/start-8077b9bf.css", "/./_app/assets/vendor-a8c7bf42.css"],
      js: ["/./_app/start-4f672076.js", "/./_app/chunks/vendor-718580ba.js"]
    },
    fetched: void 0,
    floc: true,
    get_component_path: (id) => "/./_app/" + entry_lookup[id],
    get_stack: (error2) => String(error2),
    handle_error: (error2) => {
      console.error(error2.stack);
      error2.stack = options.get_stack(error2);
    },
    hooks: get_hooks(user_hooks),
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    read: settings.read,
    root: Root,
    router: true,
    ssr: true,
    target: null,
    template,
    trailing_slash: "never"
  };
}
const d = decodeURIComponent;
const empty = () => ({});
const manifest = {
  assets: [{"file": "css/style-omt.json", "size": 32886, "type": "application/json"}, {"file": "favicon.ico", "size": 1150, "type": "image/vnd.microsoft.icon"}, {"file": "nest/robot.txt", "size": 67, "type": "text/plain"}, {"file": "robots.txt", "size": 67, "type": "text/plain"}],
  layout: "src/routes/__layout.svelte",
  error: ".svelte-kit/build/components/error.svelte",
  routes: [
    {
      type: "page",
      pattern: /^\/$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/cors_endpoint(?:\/(.*))?$/,
      params: (m) => ({tile: d(m[1] || "")}),
      load: () => Promise.resolve().then(function() {
        return ____tile_;
      })
    },
    {
      type: "page",
      pattern: /^\/pbf_viewer\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/pbf_viewer.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/test2\/([^/]+?)-([^/]+?)-([^/]+?)\.pbf$/,
      params: (m) => ({z: d(m[1]), x: d(m[2]), y: d(m[3])}),
      load: () => Promise.resolve().then(function() {
        return _z___x___y__pbf;
      })
    },
    {
      type: "page",
      pattern: /^\/draw\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/draw/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/draw\/mapstore\/?$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return mapstore;
      })
    },
    {
      type: "page",
      pattern: /^\/draw\/AreaMap\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/draw/AreaMap.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/draw\/MapDraw\/?$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return MapDraw;
      })
    },
    {
      type: "page",
      pattern: /^\/draw\/Toolbar\/ProgressButtons\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/draw/Toolbar/ProgressButtons.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/draw\/Toolbar\/PostcodeSearch\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/draw/Toolbar/PostcodeSearch.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/draw\/Toolbar\/ItemAccordion\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/draw/Toolbar/ItemAccordion.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/draw\/Toolbar\/DrawButtons\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/draw/Toolbar/DrawButtons.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/draw\/Toolbar\/EditButtons\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/draw/Toolbar/EditButtons.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/draw\/Toolbar\/InfoBox\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/draw/Toolbar/InfoBox.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/draw\/css\/mapbox-gl\/?$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return mapboxGl$1;
      })
    },
    {
      type: "endpoint",
      pattern: /^\/draw\/css\/normalize\/?$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return normalize$1;
      })
    },
    {
      type: "endpoint",
      pattern: /^\/test(?:\/(.*))?$/,
      params: (m) => ({path: d(m[1] || "")}),
      load: () => Promise.resolve().then(function() {
        return ____path_;
      })
    }
  ]
};
const get_hooks = (hooks) => ({
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({request, render: render2}) => render2(request))
});
const module_lookup = {
  "src/routes/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout;
  }),
  ".svelte-kit/build/components/error.svelte": () => Promise.resolve().then(function() {
    return error;
  }),
  "src/routes/index.svelte": () => Promise.resolve().then(function() {
    return index$1;
  }),
  "src/routes/pbf_viewer.svelte": () => Promise.resolve().then(function() {
    return pbf_viewer;
  }),
  "src/routes/draw/index.svelte": () => Promise.resolve().then(function() {
    return index;
  }),
  "src/routes/draw/AreaMap.svelte": () => Promise.resolve().then(function() {
    return AreaMap$1;
  }),
  "src/routes/draw/Toolbar/ProgressButtons.svelte": () => Promise.resolve().then(function() {
    return ProgressButtons$1;
  }),
  "src/routes/draw/Toolbar/PostcodeSearch.svelte": () => Promise.resolve().then(function() {
    return PostcodeSearch$1;
  }),
  "src/routes/draw/Toolbar/ItemAccordion.svelte": () => Promise.resolve().then(function() {
    return ItemAccordion$1;
  }),
  "src/routes/draw/Toolbar/DrawButtons.svelte": () => Promise.resolve().then(function() {
    return DrawButtons$1;
  }),
  "src/routes/draw/Toolbar/EditButtons.svelte": () => Promise.resolve().then(function() {
    return EditButtons$1;
  }),
  "src/routes/draw/Toolbar/InfoBox.svelte": () => Promise.resolve().then(function() {
    return InfoBox$1;
  })
};
const metadata_lookup = {"src/routes/__layout.svelte": {"entry": "/./_app/pages/__layout.svelte-5d3e5391.js", "css": ["/./_app/assets/pages/__layout.svelte-1975d51c.css", "/./_app/assets/g10-4f8977ce.css", "/./_app/assets/vendor-a8c7bf42.css"], "js": ["/./_app/pages/__layout.svelte-5d3e5391.js", "/./_app/chunks/vendor-718580ba.js"], "styles": null}, ".svelte-kit/build/components/error.svelte": {"entry": "/./_app/error.svelte-88201dd1.js", "css": ["/./_app/assets/vendor-a8c7bf42.css"], "js": ["/./_app/error.svelte-88201dd1.js", "/./_app/chunks/vendor-718580ba.js"], "styles": null}, "src/routes/index.svelte": {"entry": "/./_app/pages/index.svelte-79c7cd6a.js", "css": ["/./_app/assets/vendor-a8c7bf42.css"], "js": ["/./_app/pages/index.svelte-79c7cd6a.js", "/./_app/chunks/vendor-718580ba.js"], "styles": null}, "src/routes/pbf_viewer.svelte": {"entry": "/./_app/pages/pbf_viewer.svelte-b7ae42cf.js", "css": ["/./_app/assets/pages/pbf_viewer.svelte-ee45b86b.css", "/./_app/assets/vendor-a8c7bf42.css"], "js": ["/./_app/pages/pbf_viewer.svelte-b7ae42cf.js", "/./_app/chunks/vendor-718580ba.js"], "styles": null}, "src/routes/draw/index.svelte": {"entry": "/./_app/pages/draw/index.svelte-c766a812.js", "css": ["/./_app/assets/pages/draw/index.svelte-395a9ae6.css", "/./_app/assets/g10-4f8977ce.css", "/./_app/assets/vendor-a8c7bf42.css", "/./_app/assets/pages/draw/Toolbar/DrawButtons.svelte-103c4406.css", "/./_app/assets/pages/draw/Toolbar/InfoBox.svelte-e78a4d50.css", "/./_app/assets/pages/draw/Toolbar/ItemAccordion.svelte-599b20c1.css", "/./_app/assets/AreaMap-074a9db7.css"], "js": ["/./_app/pages/draw/index.svelte-c766a812.js", "/./_app/chunks/vendor-718580ba.js", "/./_app/pages/draw/Toolbar/DrawButtons.svelte-46cc93ae.js", "/./_app/chunks/mapstore-48813ed6.js", "/./_app/pages/draw/Toolbar/EditButtons.svelte-f9c48a9e.js", "/./_app/pages/draw/Toolbar/ProgressButtons.svelte-0ba6bc3e.js", "/./_app/pages/draw/Toolbar/InfoBox.svelte-3efea2c1.js", "/./_app/pages/draw/Toolbar/PostcodeSearch.svelte-86de8a69.js", "/./_app/pages/draw/Toolbar/ItemAccordion.svelte-9a0c73ad.js", "/./_app/chunks/AreaMap-1372633a.js"], "styles": null}, "src/routes/draw/AreaMap.svelte": {"entry": "/./_app/pages/draw/AreaMap.svelte-ee2e1826.js", "css": ["/./_app/assets/vendor-a8c7bf42.css", "/./_app/assets/AreaMap-074a9db7.css"], "js": ["/./_app/pages/draw/AreaMap.svelte-ee2e1826.js", "/./_app/chunks/vendor-718580ba.js", "/./_app/chunks/AreaMap-1372633a.js", "/./_app/chunks/mapstore-48813ed6.js"], "styles": null}, "src/routes/draw/Toolbar/ProgressButtons.svelte": {"entry": "/./_app/pages/draw/Toolbar/ProgressButtons.svelte-0ba6bc3e.js", "css": ["/./_app/assets/vendor-a8c7bf42.css"], "js": ["/./_app/pages/draw/Toolbar/ProgressButtons.svelte-0ba6bc3e.js", "/./_app/chunks/vendor-718580ba.js", "/./_app/chunks/mapstore-48813ed6.js"], "styles": null}, "src/routes/draw/Toolbar/PostcodeSearch.svelte": {"entry": "/./_app/pages/draw/Toolbar/PostcodeSearch.svelte-86de8a69.js", "css": ["/./_app/assets/vendor-a8c7bf42.css"], "js": ["/./_app/pages/draw/Toolbar/PostcodeSearch.svelte-86de8a69.js", "/./_app/chunks/vendor-718580ba.js", "/./_app/chunks/mapstore-48813ed6.js"], "styles": null}, "src/routes/draw/Toolbar/ItemAccordion.svelte": {"entry": "/./_app/pages/draw/Toolbar/ItemAccordion.svelte-9a0c73ad.js", "css": ["/./_app/assets/pages/draw/Toolbar/ItemAccordion.svelte-599b20c1.css", "/./_app/assets/vendor-a8c7bf42.css"], "js": ["/./_app/pages/draw/Toolbar/ItemAccordion.svelte-9a0c73ad.js", "/./_app/chunks/vendor-718580ba.js"], "styles": null}, "src/routes/draw/Toolbar/DrawButtons.svelte": {"entry": "/./_app/pages/draw/Toolbar/DrawButtons.svelte-46cc93ae.js", "css": ["/./_app/assets/pages/draw/Toolbar/DrawButtons.svelte-103c4406.css", "/./_app/assets/vendor-a8c7bf42.css"], "js": ["/./_app/pages/draw/Toolbar/DrawButtons.svelte-46cc93ae.js", "/./_app/chunks/vendor-718580ba.js", "/./_app/chunks/mapstore-48813ed6.js"], "styles": null}, "src/routes/draw/Toolbar/EditButtons.svelte": {"entry": "/./_app/pages/draw/Toolbar/EditButtons.svelte-f9c48a9e.js", "css": ["/./_app/assets/vendor-a8c7bf42.css"], "js": ["/./_app/pages/draw/Toolbar/EditButtons.svelte-f9c48a9e.js", "/./_app/chunks/vendor-718580ba.js", "/./_app/chunks/mapstore-48813ed6.js"], "styles": null}, "src/routes/draw/Toolbar/InfoBox.svelte": {"entry": "/./_app/pages/draw/Toolbar/InfoBox.svelte-3efea2c1.js", "css": ["/./_app/assets/pages/draw/Toolbar/InfoBox.svelte-e78a4d50.css", "/./_app/assets/vendor-a8c7bf42.css"], "js": ["/./_app/pages/draw/Toolbar/InfoBox.svelte-3efea2c1.js", "/./_app/chunks/vendor-718580ba.js"], "styles": null}};
async function load_component(file) {
  return {
    module: await module_lookup[file](),
    ...metadata_lookup[file]
  };
}
init({paths: {"base": "", "assets": "/."}});
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({...request, host}, options, {prerender});
}
async function get$2({params}) {
  const {tile} = params;
  const externalhost = `https://wolfiex.github.io/ONS_Maptiles/LSOA/`;
  console.error("eh", externalhost, tile);
  const res = await fetch(`${externalhost}${tile}`);
  const data2 = await res;
  console.error("rt", data2.statusText, data2);
  return JSON.parse(data2.body);
}
var ____tile_ = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$2
});
async function get$1({params}) {
  const {path} = params;
  console.error("testing2", path);
  return {body: [params], status: 200};
}
var _z___x___y__pbf = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get: get$1
});
const draw_type = writable(void 0);
const selected = writable([{oa: new Set(), lat: [], lng: []}]);
const mapsource = writable({});
const maplayer = writable([]);
const mapfunctions = writable([]);
const mapobject = writable(void 0);
let add_mode = writable(true);
let draw_enabled = writable(false);
let query = writable({error: false});
const radiusInKm = writable(5);
const store1 = writable({});
const store2 = writable({});
const store3 = writable({});
let minzoom = 4;
let maxzoom = 14;
let drawtools = true;
let location = {
  bounds: [
    [-5.816, 49.864],
    [1.863, 55.872]
  ]
};
let maxbounds = null;
const mapstyle = `/css/style-omt.json`;
function c2bbox(lat, lng) {
  var min_coords = [
    Math.min.apply(null, lng),
    Math.min.apply(null, lat)
  ];
  var max_coords = [
    Math.max.apply(null, lng),
    Math.max.apply(null, lat)
  ];
  return [min_coords, max_coords];
}
var mapstore = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  draw_type,
  selected,
  mapsource,
  maplayer,
  mapfunctions,
  mapobject,
  add_mode,
  draw_enabled,
  query,
  radiusInKm,
  store1,
  store2,
  store3,
  minzoom,
  maxzoom,
  drawtools,
  location,
  maxbounds,
  mapstyle,
  c2bbox
});
function extent(values, valueof) {
  let min;
  let max;
  if (valueof === void 0) {
    for (const value of values) {
      if (value != null) {
        if (min === void 0) {
          if (value >= value)
            min = max = value;
        } else {
          if (min > value)
            min = value;
          if (max < value)
            max = value;
        }
      }
    }
  } else {
    let index2 = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index2, values)) != null) {
        if (min === void 0) {
          if (value >= value)
            min = max = value;
        } else {
          if (min > value)
            min = value;
          if (max < value)
            max = value;
        }
      }
    }
  }
  return [min, max];
}
var simplify = {};
let coordinates = [];
async function init_draw() {
  get$3(mapobject).addSource("drawsrc", {
    type: "geojson",
    data: {
      type: "Feature",
      geometry: {
        type: "Polygon",
        coordinates: []
      }
    }
  });
  get$3(mapobject).addLayer({
    id: "draw_layer",
    type: "line",
    source: "drawsrc",
    paint: {
      "line-color": "#222",
      "line-width": 5,
      "line-dasharray": [2, 1]
    }
  });
  get$3(mapobject).addLayer({
    id: "circle_layer",
    type: "circle",
    source: "drawsrc",
    paint: {
      "circle-radius": {
        base: 2,
        stops: [[0, 0], [22, 180]]
      },
      "circle-color": "coral",
      "circle-opacity": 0.5
    }
  });
  draw_type.subscribe(() => {
    coordinates = [];
    circle_paint(clear = get$3(draw_type) != "radius");
  });
  draw_type.set("radius");
  radiusInKm.subscribe(circle_paint);
  get$3(mapobject).on("click", "bounds", function boundclick(e) {
    console.log(e.lngLat, get$3(draw_type));
    switch (get$3(draw_type)) {
      case "radius":
        draw_radius(e.lngLat);
        break;
      case "poly":
        draw_polygon(e.lngLat);
        break;
      case "click":
        draw_point(e);
        break;
    }
  });
  get$3(mapobject).on("zoomend", function() {
    draw_enabled.set(get$3(mapobject).getZoom() < 10);
  });
  get$3(mapobject).on("mousemove", "bounds", function move(e) {
    switch (get$3(draw_type)) {
      case "radius":
        circle_fast(e.lngLat);
        break;
      case "poly":
        polygon_fast(e.lngLat);
        break;
    }
  });
}
function clear() {
  change_data("drawsrc", {
    type: "Feature",
    geometry: {
      type: "Polygon",
      coordinates: []
    }
  });
}
function change_data(layer, data2) {
  get$3(mapobject).getSource(layer).setData(data2);
}
function update(coordinates2) {
  const bbox = getbbox(coordinates2);
  const features = get$3(mapobject).queryRenderedFeatures(bbox.map((d2) => get$3(mapobject).project(d2)), {layers: ["centroids"]});
  const oa = features.filter((i) => inPolygon(coordinates2, i.geometry.coordinates)).map((d2) => d2.properties.id);
  var current = get$3(selected);
  var last = current[current.length - 1];
  bbox.map((d2) => {
    last.lat.push(d2[1]);
    last.lng.push(d2[0]);
  });
  if (get$3(add_mode)) {
    current.push({
      oa: new Set([...last.oa, ...oa]),
      lng: extent(last.lng),
      lat: extent(last.lat)
    });
  } else {
    current.push({
      oa: new Set([...last.oa].filter((x) => !new Set(oa).has(x))),
      lng: extent(last.lng),
      lat: extent(last.lat)
    });
  }
  selected.set(current);
  console.warn("updated---", get$3(selected), get$3(add_mode));
}
function draw_point(e) {
  const oalist = new Set(e.features.map((d2) => d2.properties.oa));
  const current = get$3(selected);
  var last = Object.assign({}, current[current.length - 1]);
  last.lat.push(e.lngLat.lat);
  last.lng.push(e.lngLat.lng);
  last = {
    oa: new Set(last.oa),
    lat: extent(last.lat),
    lng: extent(last.lng)
  };
  [...oalist].forEach((oa) => last.oa.has(oa) ? last.oa.delete(oa) : last.oa.add(oa));
  current.push(last);
  selected.set(current);
}
function inPolygon(polygon, point) {
  if (!polygon.length)
    return false;
  var n = polygon.length, p = polygon[n - 1], [x, y] = point, [x0, y0] = p, x1, y1, inside = false;
  for (var i = 0; i < n; ++i) {
    p = polygon[i], x1 = p[0], y1 = p[1];
    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)
      inside = !inside;
    x0 = x1, y0 = y1;
  }
  return inside;
}
function geomean(c1, c2, thresh = 30) {
  c1 = get$3(mapobject).project(c1);
  c2 = get$3(mapobject).project(c2);
  return Math.sqrt((c1.x - c2.x) ** 2 + (c1.y - c2.y) ** 2) < thresh;
}
function getbbox(coords) {
  var lat = coords.map((p) => p[1]);
  var lng = coords.map((p) => p[0]);
  var min_coords = [Math.min.apply(null, lng), Math.min.apply(null, lat)];
  var max_coords = [Math.max.apply(null, lng), Math.max.apply(null, lat)];
  return [min_coords, max_coords];
}
function draw_radius(center, points = 20) {
  var coords = {
    latitude: center.lat,
    longitude: center.lng
  };
  var km = get$3(radiusInKm) / 2;
  var coordinates2 = [];
  var distanceX = km / (111.32 * Math.cos(coords.latitude * Math.PI / 180));
  var distanceY = km / 110.574;
  var theta, x, y;
  for (var i = 0; i < points; i++) {
    theta = i / points * (2 * Math.PI);
    x = distanceX * Math.cos(theta);
    y = distanceY * Math.sin(theta);
    coordinates2.push([coords.longitude + x, coords.latitude + y]);
  }
  coordinates2.push(coordinates2[0]);
  update(coordinates2);
}
function circle_fast(center) {
  var geo = {
    type: "Feature",
    geometry: {
      type: "Point",
      coordinates: [center.lng, center.lat]
    }
  };
  change_data("drawsrc", geo);
  return geo;
}
function circle_paint(clear2 = false) {
  console.warn("-circle", clear2);
  if (mapobject) {
    if (clear2 == true) {
      return get$3(mapobject).setPaintProperty("circle_layer", "circle-radius", 5);
    }
    const m2p = (meters, latitude) => meters / 0.075 / Math.cos(latitude * Math.PI / 180);
    get$3(mapobject).setPaintProperty("circle_layer", "circle-radius", {
      base: 2,
      stops: [
        [0, 0],
        [22, m2p(get$3(radiusInKm) * 2e3, get$3(mapobject).getCenter().lat)]
      ]
    });
  }
}
function draw_polygon(e) {
  if (coordinates.length) {
    if (geomean(coordinates[0], [e.lng, e.lat])) {
      coordinates.push(coordinates[0]);
      update(coordinates);
      console.log("--saving polygon", get$3(selected));
      coordinates = [];
      clear();
      return 1;
    }
  }
  coordinates.push([e.lng, e.lat]);
  var geo = {
    type: "Feature",
    geometry: {
      type: "Polygon",
      coordinates: [coordinates]
    }
  };
  console.error(geo);
  change_data("drawsrc", geo);
}
function polygon_fast(e) {
  var temp = [...coordinates, [e.lng, e.lat]];
  var geo = {
    type: "Feature",
    geometry: {
      type: "Polygon",
      coordinates: [temp]
    }
  };
  change_data("drawsrc", geo);
}
async function simplify_query() {
  const last = get$3(selected)[get$3(selected).length - 1];
  const bbox = [last.lng[0], last.lat[0], last.lng[1], last.lat[1]];
  const [x, y, z] = bboxToTile(bbox);
  if (z === 28)
    return null;
  var tile = `${z}/${x}/${y}`;
  if (z < 7)
    return {
      error_title: "Total area selected exceeds allowed limit. Please use the undo button to reduce area size.",
      error: `Parent Data Tile ${tile}`
    };
  if (simplify[tile]) {
    var simple = simplify[tile];
  } else {
    var simple = await fetch(`http://localhost:7113/encoding/${tile}.json`).then((d2) => d2.json());
    simple.lsoa = simple.lsoa.map((d2) => {
      d2[1] = new Set(d2[1]);
      return d2;
    });
    simple.msoa = simple.msoa.map((d2) => {
      d2[1] = new Set(d2[1]);
      return d2;
    });
    simplify[tile] = simple;
  }
  var rm = [];
  var oa = last.oa;
  var lsoa = simple.lsoa.filter((d2) => ![...d2[1]].filter((x2) => !oa.has(x2)).length);
  lsoa = new Set(lsoa.map((e) => {
    rm.push([...e[1]]);
    return e[0];
  }));
  var msoa = simple.msoa.filter((d2) => ![...d2[1]].filter((x2) => !lsoa.has(x2)).length);
  rm = new Set(rm.flat());
  var rmlsoa = new Set(msoa.map((d2) => d2[1]).flat());
  oa = [...oa].filter((e) => !rm.has(e));
  lsoa = [...lsoa].filter((e) => !rmlsoa.has(e));
  msoa = msoa.map((d2) => d2[0]);
  return {tile, msoa, oa, lsoa, original: [...last.oa].length};
}
var MapDraw = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get coordinates() {
    return coordinates;
  },
  init_draw,
  change_data,
  simplify_query
});
var mapboxGl = `/* purgecss start ignore */

.mapboxgl-map{
  font:12px/20px Helvetica Neue,Arial,Helvetica,sans-serif;
  overflow:hidden;
  position:relative;
  -webkit-tap-highlight-color:rgba(0,0,0,0)
}

.mapboxgl-canvas{
  position:absolute;
  left:0;
  top:0
}

.mapboxgl-map:-webkit-full-screen{
  width:100%;
  height:100%
}

.mapboxgl-canary{
  background-color:salmon
}

.mapboxgl-canvas-container.mapboxgl-interactive,.mapboxgl-ctrl-group button.mapboxgl-ctrl-compass{
  cursor:-webkit-grab;
  cursor:grab;
  -moz-user-select:none;
  -webkit-user-select:none;
  -ms-user-select:none;
  user-select:none
}

.mapboxgl-canvas-container.mapboxgl-interactive.mapboxgl-track-pointer{
  cursor:pointer
}

.mapboxgl-canvas-container.mapboxgl-interactive:active,.mapboxgl-ctrl-group button.mapboxgl-ctrl-compass:active{
  cursor:-webkit-grabbing;
  cursor:grabbing
}

.mapboxgl-canvas-container.mapboxgl-touch-zoom-rotate,.mapboxgl-canvas-container.mapboxgl-touch-zoom-rotate .mapboxgl-canvas{
  touch-action:pan-x pan-y
}

.mapboxgl-canvas-container.mapboxgl-touch-drag-pan,.mapboxgl-canvas-container.mapboxgl-touch-drag-pan .mapboxgl-canvas{
  touch-action:pinch-zoom
}

.mapboxgl-canvas-container.mapboxgl-touch-zoom-rotate.mapboxgl-touch-drag-pan,.mapboxgl-canvas-container.mapboxgl-touch-zoom-rotate.mapboxgl-touch-drag-pan .mapboxgl-canvas{
  touch-action:none
}

.mapboxgl-ctrl-bottom-left,.mapboxgl-ctrl-bottom-right,.mapboxgl-ctrl-top-left,.mapboxgl-ctrl-top-right{
  position:absolute;
  pointer-events:none;
  z-index:2
}

.mapboxgl-ctrl-top-left{
  top:0;
  left:0
}

.mapboxgl-ctrl-top-right{
  top:0;
  right:0
}

.mapboxgl-ctrl-bottom-left{
  bottom:0;
  left:0
}

.mapboxgl-ctrl-bottom-right{
  right:0;
  bottom:0
}

.mapboxgl-ctrl{
  clear:both;
  pointer-events:auto;
  transform:translate(0)
}

.mapboxgl-ctrl-top-left .mapboxgl-ctrl{
  margin:10px 0 0 10px;
  float:left
}

.mapboxgl-ctrl-top-right .mapboxgl-ctrl{
  margin:10px 10px 0 0;
  float:right
}

.mapboxgl-ctrl-bottom-left .mapboxgl-ctrl{
  margin:0 0 10px 10px;
  float:left
}

.mapboxgl-ctrl-bottom-right .mapboxgl-ctrl{
  margin:0 10px 10px 0;
  float:right
}

.mapboxgl-ctrl-group{
  border-radius:4px;
  background:#fff
}

.mapboxgl-ctrl-group:not(:empty){
  box-shadow:0 0 0 2px rgba(0,0,0,.1)
}

@media (-ms-high-contrast:active){
  .mapboxgl-ctrl-group:not(:empty){
    box-shadow:0 0 0 2px ButtonText
  }
}

.mapboxgl-ctrl-group button{
  width:29px;
  height:29px;
  display:block;
  padding:0;
  outline:none;
  border:0;
  box-sizing:border-box;
  background-color:transparent;
  cursor:pointer
}

.mapboxgl-ctrl-group button+button{
  border-top:1px solid #ddd
}

.mapboxgl-ctrl button .mapboxgl-ctrl-icon{
  display:block;
  width:100%;
  height:100%;
  background-repeat:no-repeat;
  background-position:50%
}

@media (-ms-high-contrast:active){
  .mapboxgl-ctrl-icon{
    background-color:transparent
  }

  .mapboxgl-ctrl-group button+button{
    border-top:1px solid ButtonText
  }
}

.mapboxgl-ctrl button::-moz-focus-inner{
  border:0;
  padding:0
}

.mapboxgl-ctrl-attrib-button:focus,.mapboxgl-ctrl-group button:focus{
  box-shadow:0 0 2px 2px #0096ff
}

.mapboxgl-ctrl button:disabled{
  cursor:not-allowed
}

.mapboxgl-ctrl button:disabled .mapboxgl-ctrl-icon{
  opacity:.25
}

.mapboxgl-ctrl button:not(:disabled):hover{
  background-color:rgba(0,0,0,.05)
}

.mapboxgl-ctrl-group button:focus:focus-visible{
  box-shadow:0 0 2px 2px #0096ff
}

.mapboxgl-ctrl-group button:focus:not(:focus-visible){
  box-shadow:none
}

.mapboxgl-ctrl-group button:focus:first-child{
  border-radius:4px 4px 0 0
}

.mapboxgl-ctrl-group button:focus:last-child{
  border-radius:0 0 4px 4px
}

.mapboxgl-ctrl-group button:focus:only-child{
  border-radius:inherit
}

.mapboxgl-ctrl button.mapboxgl-ctrl-zoom-out .mapboxgl-ctrl-icon{
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg' fill='%23333'%3E%3Cpath d='M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z'/%3E%3C/svg%3E")
}

.mapboxgl-ctrl button.mapboxgl-ctrl-zoom-in .mapboxgl-ctrl-icon{
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg' fill='%23333'%3E%3Cpath d='M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z'/%3E%3C/svg%3E")
}

@media (-ms-high-contrast:active){
  .mapboxgl-ctrl button.mapboxgl-ctrl-zoom-out .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg' fill='%23fff'%3E%3Cpath d='M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z'/%3E%3C/svg%3E")
  }

  .mapboxgl-ctrl button.mapboxgl-ctrl-zoom-in .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg' fill='%23fff'%3E%3Cpath d='M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z'/%3E%3C/svg%3E")
  }
}

@media (-ms-high-contrast:black-on-white){
  .mapboxgl-ctrl button.mapboxgl-ctrl-zoom-out .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z'/%3E%3C/svg%3E")
  }

  .mapboxgl-ctrl button.mapboxgl-ctrl-zoom-in .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z'/%3E%3C/svg%3E")
  }
}

.mapboxgl-ctrl button.mapboxgl-ctrl-fullscreen .mapboxgl-ctrl-icon{
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg' fill='%23333'%3E%3Cpath d='M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z'/%3E%3C/svg%3E")
}

.mapboxgl-ctrl button.mapboxgl-ctrl-shrink .mapboxgl-ctrl-icon{
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z'/%3E%3C/svg%3E")
}

@media (-ms-high-contrast:active){
  .mapboxgl-ctrl button.mapboxgl-ctrl-fullscreen .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg' fill='%23fff'%3E%3Cpath d='M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z'/%3E%3C/svg%3E")
  }

  .mapboxgl-ctrl button.mapboxgl-ctrl-shrink .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg' fill='%23fff'%3E%3Cpath d='M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z'/%3E%3C/svg%3E")
  }
}

@media (-ms-high-contrast:black-on-white){
  .mapboxgl-ctrl button.mapboxgl-ctrl-fullscreen .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z'/%3E%3C/svg%3E")
  }

  .mapboxgl-ctrl button.mapboxgl-ctrl-shrink .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z'/%3E%3C/svg%3E")
  }
}

.mapboxgl-ctrl button.mapboxgl-ctrl-compass .mapboxgl-ctrl-icon{
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg' fill='%23333'%3E%3Cpath d='M10.5 14l4-8 4 8h-8z'/%3E%3Cpath d='M10.5 16l4 8 4-8h-8z' fill='%23ccc'/%3E%3C/svg%3E")
}

@media (-ms-high-contrast:active){
  .mapboxgl-ctrl button.mapboxgl-ctrl-compass .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg' fill='%23fff'%3E%3Cpath d='M10.5 14l4-8 4 8h-8z'/%3E%3Cpath d='M10.5 16l4 8 4-8h-8z' fill='%23999'/%3E%3C/svg%3E")
  }
}

@media (-ms-high-contrast:black-on-white){
  .mapboxgl-ctrl button.mapboxgl-ctrl-compass .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M10.5 14l4-8 4 8h-8z'/%3E%3Cpath d='M10.5 16l4 8 4-8h-8z' fill='%23ccc'/%3E%3C/svg%3E")
  }
}

.mapboxgl-ctrl button.mapboxgl-ctrl-geolocate .mapboxgl-ctrl-icon{
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%23333'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3C/svg%3E")
}

.mapboxgl-ctrl button.mapboxgl-ctrl-geolocate:disabled .mapboxgl-ctrl-icon{
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%23aaa'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3Cpath d='M14 5l1 1-9 9-1-1 9-9z' fill='red'/%3E%3C/svg%3E")
}

.mapboxgl-ctrl button.mapboxgl-ctrl-geolocate.mapboxgl-ctrl-geolocate-active .mapboxgl-ctrl-icon{
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%2333b5e5'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3C/svg%3E")
}

.mapboxgl-ctrl button.mapboxgl-ctrl-geolocate.mapboxgl-ctrl-geolocate-active-error .mapboxgl-ctrl-icon{
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%23e58978'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3C/svg%3E")
}

.mapboxgl-ctrl button.mapboxgl-ctrl-geolocate.mapboxgl-ctrl-geolocate-background .mapboxgl-ctrl-icon{
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%2333b5e5'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3C/svg%3E")
}

.mapboxgl-ctrl button.mapboxgl-ctrl-geolocate.mapboxgl-ctrl-geolocate-background-error .mapboxgl-ctrl-icon{
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%23e54e33'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3C/svg%3E")
}

.mapboxgl-ctrl button.mapboxgl-ctrl-geolocate.mapboxgl-ctrl-geolocate-waiting .mapboxgl-ctrl-icon{
  -webkit-animation:mapboxgl-spin 2s linear infinite;
  animation:mapboxgl-spin 2s linear infinite
}

@media (-ms-high-contrast:active){
  .mapboxgl-ctrl button.mapboxgl-ctrl-geolocate .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%23fff'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3C/svg%3E")
  }

  .mapboxgl-ctrl button.mapboxgl-ctrl-geolocate:disabled .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%23999'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3Cpath d='M14 5l1 1-9 9-1-1 9-9z' fill='red'/%3E%3C/svg%3E")
  }

  .mapboxgl-ctrl button.mapboxgl-ctrl-geolocate.mapboxgl-ctrl-geolocate-active .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%2333b5e5'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3C/svg%3E")
  }

  .mapboxgl-ctrl button.mapboxgl-ctrl-geolocate.mapboxgl-ctrl-geolocate-active-error .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%23e58978'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3C/svg%3E")
  }

  .mapboxgl-ctrl button.mapboxgl-ctrl-geolocate.mapboxgl-ctrl-geolocate-background .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%2333b5e5'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3C/svg%3E")
  }

  .mapboxgl-ctrl button.mapboxgl-ctrl-geolocate.mapboxgl-ctrl-geolocate-background-error .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%23e54e33'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3C/svg%3E")
  }
}

@media (-ms-high-contrast:black-on-white){
  .mapboxgl-ctrl button.mapboxgl-ctrl-geolocate .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3C/svg%3E")
  }

  .mapboxgl-ctrl button.mapboxgl-ctrl-geolocate:disabled .mapboxgl-ctrl-icon{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill='%23666'%3E%3Cpath d='M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z'/%3E%3Ccircle cx='10' cy='10' r='2'/%3E%3Cpath d='M14 5l1 1-9 9-1-1 9-9z' fill='red'/%3E%3C/svg%3E")
  }
}

@-webkit-keyframes mapboxgl-spin{
  0%{
    -webkit-transform:rotate(0deg)
  }

  to{
    -webkit-transform:rotate(1turn)
  }
}

@keyframes mapboxgl-spin{
  0%{
    transform:rotate(0deg)
  }

  to{
    transform:rotate(1turn)
  }
}

a.mapboxgl-ctrl-logo{
  width:88px;
  height:23px;
  margin:0 0 -4px -4px;
  display:block;
  background-repeat:no-repeat;
  cursor:pointer;
  overflow:hidden;
  background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='88' height='23' viewBox='0 0 88 23' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' fill-rule='evenodd'%3E%3Cdefs%3E%3Cpath id='a' d='M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z'/%3E%3Cpath id='b' d='M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z'/%3E%3C/defs%3E%3Cmask id='c'%3E%3Crect width='100%25' height='100%25' fill='%23fff'/%3E%3Cuse xlink:href='%23a'/%3E%3Cuse xlink:href='%23b'/%3E%3C/mask%3E%3Cg opacity='.3' stroke='%23000' stroke-width='3'%3E%3Ccircle mask='url(%23c)' cx='11.5' cy='11.5' r='9.25'/%3E%3Cuse xlink:href='%23b' mask='url(%23c)'/%3E%3C/g%3E%3Cg opacity='.9' fill='%23fff'%3E%3Cuse xlink:href='%23a'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3C/svg%3E")
}

a.mapboxgl-ctrl-logo.mapboxgl-compact{
  width:23px
}

@media (-ms-high-contrast:active){
  a.mapboxgl-ctrl-logo{
    background-color:transparent;
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='88' height='23' viewBox='0 0 88 23' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' fill-rule='evenodd'%3E%3Cdefs%3E%3Cpath id='a' d='M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z'/%3E%3Cpath id='b' d='M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z'/%3E%3C/defs%3E%3Cmask id='c'%3E%3Crect width='100%25' height='100%25' fill='%23fff'/%3E%3Cuse xlink:href='%23a'/%3E%3Cuse xlink:href='%23b'/%3E%3C/mask%3E%3Cg stroke='%23000' stroke-width='3'%3E%3Ccircle mask='url(%23c)' cx='11.5' cy='11.5' r='9.25'/%3E%3Cuse xlink:href='%23b' mask='url(%23c)'/%3E%3C/g%3E%3Cg fill='%23fff'%3E%3Cuse xlink:href='%23a'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3C/svg%3E")
  }
}

@media (-ms-high-contrast:black-on-white){
  a.mapboxgl-ctrl-logo{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='88' height='23' viewBox='0 0 88 23' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' fill-rule='evenodd'%3E%3Cdefs%3E%3Cpath id='a' d='M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z'/%3E%3Cpath id='b' d='M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z'/%3E%3C/defs%3E%3Cmask id='c'%3E%3Crect width='100%25' height='100%25' fill='%23fff'/%3E%3Cuse xlink:href='%23a'/%3E%3Cuse xlink:href='%23b'/%3E%3C/mask%3E%3Cg stroke='%23fff' stroke-width='3' fill='%23fff'%3E%3Ccircle mask='url(%23c)' cx='11.5' cy='11.5' r='9.25'/%3E%3Cuse xlink:href='%23b' mask='url(%23c)'/%3E%3C/g%3E%3Cuse xlink:href='%23a'/%3E%3Cuse xlink:href='%23b'/%3E%3C/svg%3E")
  }
}

.mapboxgl-ctrl.mapboxgl-ctrl-attrib{
  padding:0 5px;
  background-color:hsla(0,0%,100%,.5);
  margin:0
}

@media screen{
  .mapboxgl-ctrl-attrib.mapboxgl-compact{
    min-height:20px;
    padding:2px 24px 2px 0;
    margin:10px;
    position:relative;
    background-color:#fff;
    border-radius:12px
  }

  .mapboxgl-ctrl-attrib.mapboxgl-compact-show{
    padding:2px 28px 2px 8px;
    visibility:visible
  }

  .mapboxgl-ctrl-bottom-left>.mapboxgl-ctrl-attrib.mapboxgl-compact-show,.mapboxgl-ctrl-top-left>.mapboxgl-ctrl-attrib.mapboxgl-compact-show{
    padding:2px 8px 2px 28px;
    border-radius:12px
  }

  .mapboxgl-ctrl-attrib.mapboxgl-compact .mapboxgl-ctrl-attrib-inner{
    display:none
  }

  .mapboxgl-ctrl-attrib-button{
    display:none;
    cursor:pointer;
    position:absolute;
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='24' height='24' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd'%3E%3Cpath d='M4 10a6 6 0 1012 0 6 6 0 10-12 0m5-3a1 1 0 102 0 1 1 0 10-2 0m0 3a1 1 0 112 0v3a1 1 0 11-2 0'/%3E%3C/svg%3E");
    background-color:hsla(0,0%,100%,.5);
    width:24px;
    height:24px;
    box-sizing:border-box;
    border-radius:12px;
    outline:none;
    top:0;
    right:0;
    border:0
  }

  .mapboxgl-ctrl-bottom-left .mapboxgl-ctrl-attrib-button,.mapboxgl-ctrl-top-left .mapboxgl-ctrl-attrib-button{
    left:0
  }

  .mapboxgl-ctrl-attrib.mapboxgl-compact-show .mapboxgl-ctrl-attrib-inner,.mapboxgl-ctrl-attrib.mapboxgl-compact .mapboxgl-ctrl-attrib-button{
    display:block
  }

  .mapboxgl-ctrl-attrib.mapboxgl-compact-show .mapboxgl-ctrl-attrib-button{
    background-color:rgba(0,0,0,.05)
  }

  .mapboxgl-ctrl-bottom-right>.mapboxgl-ctrl-attrib.mapboxgl-compact:after{
    bottom:0;
    right:0
  }

  .mapboxgl-ctrl-top-right>.mapboxgl-ctrl-attrib.mapboxgl-compact:after{
    top:0;
    right:0
  }

  .mapboxgl-ctrl-top-left>.mapboxgl-ctrl-attrib.mapboxgl-compact:after{
    top:0;
    left:0
  }

  .mapboxgl-ctrl-bottom-left>.mapboxgl-ctrl-attrib.mapboxgl-compact:after{
    bottom:0;
    left:0
  }
}

@media screen and (-ms-high-contrast:active){
  .mapboxgl-ctrl-attrib.mapboxgl-compact:after{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='24' height='24' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' fill='%23fff'%3E%3Cpath d='M4 10a6 6 0 1012 0 6 6 0 10-12 0m5-3a1 1 0 102 0 1 1 0 10-2 0m0 3a1 1 0 112 0v3a1 1 0 11-2 0'/%3E%3C/svg%3E")
  }
}

@media screen and (-ms-high-contrast:black-on-white){
  .mapboxgl-ctrl-attrib.mapboxgl-compact:after{
    background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg width='24' height='24' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd'%3E%3Cpath d='M4 10a6 6 0 1012 0 6 6 0 10-12 0m5-3a1 1 0 102 0 1 1 0 10-2 0m0 3a1 1 0 112 0v3a1 1 0 11-2 0'/%3E%3C/svg%3E")
  }
}

.mapboxgl-ctrl-attrib a{
  color:rgba(0,0,0,.75);
  text-decoration:none
}

.mapboxgl-ctrl-attrib a:hover{
  color:inherit;
  text-decoration:underline
}

.mapboxgl-ctrl-attrib .mapbox-improve-map{
  font-weight:700;
  margin-left:2px
}

.mapboxgl-attrib-empty{
  display:none
}

.mapboxgl-ctrl-scale{
  background-color:hsla(0,0%,100%,.75);
  font-size:10px;
  border:2px solid #333;
  border-top:#333;
  padding:0 5px;
  color:#333;
  box-sizing:border-box
}

.mapboxgl-popup{
  position:absolute;
  top:0;
  left:0;
  display:flex;
  will-change:transform;
  pointer-events:none
}

.mapboxgl-popup-anchor-top,.mapboxgl-popup-anchor-top-left,.mapboxgl-popup-anchor-top-right{
  flex-direction:column
}

.mapboxgl-popup-anchor-bottom,.mapboxgl-popup-anchor-bottom-left,.mapboxgl-popup-anchor-bottom-right{
  flex-direction:column-reverse
}

.mapboxgl-popup-anchor-left{
  flex-direction:row
}

.mapboxgl-popup-anchor-right{
  flex-direction:row-reverse
}

.mapboxgl-popup-tip{
  width:0;
  height:0;
  border:10px solid transparent;
  z-index:1
}

.mapboxgl-popup-anchor-top .mapboxgl-popup-tip{
  align-self:center;
  border-top:none;
  border-bottom-color:#fff
}

.mapboxgl-popup-anchor-top-left .mapboxgl-popup-tip{
  align-self:flex-start;
  border-top:none;
  border-left:none;
  border-bottom-color:#fff
}

.mapboxgl-popup-anchor-top-right .mapboxgl-popup-tip{
  align-self:flex-end;
  border-top:none;
  border-right:none;
  border-bottom-color:#fff
}

.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip{
  align-self:center;
  border-bottom:none;
  border-top-color:#fff
}

.mapboxgl-popup-anchor-bottom-left .mapboxgl-popup-tip{
  align-self:flex-start;
  border-bottom:none;
  border-left:none;
  border-top-color:#fff
}

.mapboxgl-popup-anchor-bottom-right .mapboxgl-popup-tip{
  align-self:flex-end;
  border-bottom:none;
  border-right:none;
  border-top-color:#fff
}

.mapboxgl-popup-anchor-left .mapboxgl-popup-tip{
  align-self:center;
  border-left:none;
  border-right-color:#fff
}

.mapboxgl-popup-anchor-right .mapboxgl-popup-tip{
  align-self:center;
  border-right:none;
  border-left-color:#fff
}

.mapboxgl-popup-close-button{
  position:absolute;
  right:0;
  top:0;
  border:0;
  border-radius:0 3px 0 0;
  cursor:pointer;
  background-color:transparent
}

.mapboxgl-popup-close-button:hover{
  background-color:rgba(0,0,0,.05)
}

.mapboxgl-popup-content{
  position:relative;
  background:#fff;
  border-radius:3px;
  box-shadow:0 1px 2px rgba(0,0,0,.1);
  padding:10px 10px 15px;
  pointer-events:auto
}

.mapboxgl-popup-anchor-top-left .mapboxgl-popup-content{
  border-top-left-radius:0
}

.mapboxgl-popup-anchor-top-right .mapboxgl-popup-content{
  border-top-right-radius:0
}

.mapboxgl-popup-anchor-bottom-left .mapboxgl-popup-content{
  border-bottom-left-radius:0
}

.mapboxgl-popup-anchor-bottom-right .mapboxgl-popup-content{
  border-bottom-right-radius:0
}

.mapboxgl-popup-track-pointer{
  display:none
}

.mapboxgl-popup-track-pointer *{
  pointer-events:none;
  -webkit-user-select:none;
     -moz-user-select:none;
      -ms-user-select:none;
          user-select:none
}

.mapboxgl-map:hover .mapboxgl-popup-track-pointer{
  display:flex
}

.mapboxgl-map:active .mapboxgl-popup-track-pointer{
  display:none
}

.mapboxgl-marker{
  position:absolute;
  top:0;
  left:0;
  will-change:transform
}

.mapboxgl-user-location-dot,.mapboxgl-user-location-dot:before{
  background-color:#1da1f2;
  width:15px;
  height:15px;
  border-radius:50%
}

.mapboxgl-user-location-dot:before{
  content:"";
  position:absolute;
  -webkit-animation:mapboxgl-user-location-dot-pulse 2s infinite;
  animation:mapboxgl-user-location-dot-pulse 2s infinite
}

.mapboxgl-user-location-dot:after{
  border-radius:50%;
  border:2px solid #fff;
  content:"";
  height:19px;
  left:-2px;
  position:absolute;
  top:-2px;
  width:19px;
  box-sizing:border-box;
  box-shadow:0 0 3px rgba(0,0,0,.35)
}

@-webkit-keyframes mapboxgl-user-location-dot-pulse{
  0%{
    -webkit-transform:scale(1);
    opacity:1
  }

  70%{
    -webkit-transform:scale(3);
    opacity:0
  }

  to{
    -webkit-transform:scale(1);
    opacity:0
  }
}

@keyframes mapboxgl-user-location-dot-pulse{
  0%{
    transform:scale(1);
    opacity:1
  }

  70%{
    transform:scale(3);
    opacity:0
  }

  to{
    transform:scale(1);
    opacity:0
  }
}

.mapboxgl-user-location-dot-stale{
  background-color:#aaa
}

.mapboxgl-user-location-dot-stale:after{
  display:none
}

.mapboxgl-user-location-accuracy-circle{
  background-color:rgba(29,161,242,.2);
  width:1px;
  height:1px;
  border-radius:100%
}

.mapboxgl-crosshair,.mapboxgl-crosshair .mapboxgl-interactive,.mapboxgl-crosshair .mapboxgl-interactive:active{
  cursor:crosshair
}

.mapboxgl-boxzoom{
  position:absolute;
  top:0;
  left:0;
  width:0;
  height:0;
  background:#fff;
  border:2px dotted #202020;
  opacity:.5
}

@media print{
  .mapbox-improve-map{
    display:none
  }
}

/* purgecss end ignore */`;
var mapboxGl$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": mapboxGl
});
var normalize = '/*purgecss start ignore */\n\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n\n/*purgecss end ignore */\n';
var normalize$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": normalize
});
async function get({params}) {
  const {path} = params;
  console.error("testing", path, await fetch(`http://localhost:7113/4/7/4.pbf`));
  return {body: ["helloa", path], status: 200};
}
var ____path_ = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get
});
var style = "/*! tailwindcss v2.2.19 | MIT License | https://tailwindcss.com */\n\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n/*\nDocument\n========\n*/\n\n/**\nUse a better box model (opinionated).\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box;\n}\n\n/**\nUse a more readable tab size (opinionated).\n*/\n\nhtml {\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n     tab-size: 4;\n}\n\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/*\nSections\n========\n*/\n\n/**\nRemove the margin in all browsers.\n*/\n\nbody {\n  margin: 0;\n}\n\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\n\nbody {\n  font-family:\n		system-ui,\n		-apple-system, /* Firefox supports this but not yet `system-ui` */\n		'Segoe UI',\n		Roboto,\n		Helvetica,\n		Arial,\n		sans-serif,\n		'Apple Color Emoji',\n		'Segoe UI Emoji';\n}\n\n/*\nGrouping content\n================\n*/\n\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\n\nhr {\n  height: 0; /* 1 */\n  color: inherit; /* 2 */\n}\n\n/*\nText-level semantics\n====================\n*/\n\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr[title] {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/**\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family:\n		ui-monospace,\n		SFMono-Regular,\n		Consolas,\n		'Liberation Mono',\n		Menlo,\n		monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\nTabular data\n============\n*/\n\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n}\n\n/*\nForms\n=====\n*/\n\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\n\nbutton,\n[type='button'],\n[type='reset'] {\n  -webkit-appearance: button;\n}\n\n/**\nRemove the inner border and padding in Firefox.\n*/\n\n::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\nRestore the focus styles unset by the previous rule.\n*/\n\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\n\nlegend {\n  padding: 0;\n}\n\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/*\nInteractive\n===========\n*/\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n\n/**\n * Removes the default spacing and border for appropriate elements.\n */\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/**\n * Tailwind custom reset styles\n */\n\n/**\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n *    to override it to ensure consistency even when using the default theme.\n */\n\nhtml {\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n\n/**\n * Inherit font-family and line-height from `html` so users can set them as\n * a class directly on the `html` element.\n */\n\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it's border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: currentColor; /* 2 */\n}\n\n/*\n * Ensure horizontal rules are visible by default\n */\n\nhr {\n  border-top-width: 1px;\n}\n\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\n\nimg {\n  border-style: solid;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\ninput:-ms-input-placeholder, textarea:-ms-input-placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\nbutton {\n  cursor: pointer;\n}\n\n/**\n * Override legacy focus reset from Normalize with modern Firefox focus styles.\n *\n * This is actually an improvement over the new defaults in Firefox in our testing,\n * as it triggers the better focus styles even for links, which still use a dotted\n * outline in Firefox by default.\n */\n\ntable {\n  border-collapse: collapse;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n\n/**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n}\n\n/**\n * 1. Make replaced elements `display: block` by default as that's\n *    the behavior you want almost all of the time. Inspired by\n *    CSS Remedy, with `svg` added as well.\n *\n *    https://github.com/mozdevs/cssremedy/issues/14\n * \n * 2. Add `vertical-align: middle` to align replaced elements more\n *    sensibly by default when overriding `display` by adding a\n *    utility like `inline`.\n *\n *    This can trigger a poorly considered linting error in some\n *    tools but is included by design.\n * \n *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210\n */\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/**\n * Constrain images and videos to the parent width and preserve\n * their intrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/**\n * Ensure the default browser behavior of the `hidden` attribute.\n */\n\n*, ::before, ::after {\n  --tw-border-opacity: 1;\n  border-color: rgba(229, 231, 235, var(--tw-border-opacity));\n}\n\n.container {\n  width: 100%;\n}\n\n@media (min-width: 640px) {\n  .container {\n    max-width: 640px;\n  }\n}\n\n@media (min-width: 768px) {\n  .container {\n    max-width: 768px;\n  }\n}\n\n@media (min-width: 1024px) {\n  .container {\n    max-width: 1024px;\n  }\n}\n\n@media (min-width: 1280px) {\n  .container {\n    max-width: 1280px;\n  }\n}\n\n@media (min-width: 1536px) {\n  .container {\n    max-width: 1536px;\n  }\n}\n\n.flex {\n  display: flex;\n}\n\n.table {\n  display: table;\n}\n\n.min-h-screen {\n  min-height: 100vh;\n}\n\n.w-screen {\n  width: 100vw;\n}\n\n.flex-grow {\n  flex-grow: 1;\n}\n\n@-webkit-keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@-webkit-keyframes ping {\n  75%, 100% {\n    transform: scale(2);\n    opacity: 0;\n  }\n}\n\n@keyframes ping {\n  75%, 100% {\n    transform: scale(2);\n    opacity: 0;\n  }\n}\n\n@-webkit-keyframes pulse {\n  50% {\n    opacity: .5;\n  }\n}\n\n@keyframes pulse {\n  50% {\n    opacity: .5;\n  }\n}\n\n@-webkit-keyframes bounce {\n  0%, 100% {\n    transform: translateY(-25%);\n    -webkit-animation-timing-function: cubic-bezier(0.8,0,1,1);\n            animation-timing-function: cubic-bezier(0.8,0,1,1);\n  }\n\n  50% {\n    transform: none;\n    -webkit-animation-timing-function: cubic-bezier(0,0,0.2,1);\n            animation-timing-function: cubic-bezier(0,0,0.2,1);\n  }\n}\n\n@keyframes bounce {\n  0%, 100% {\n    transform: translateY(-25%);\n    -webkit-animation-timing-function: cubic-bezier(0.8,0,1,1);\n            animation-timing-function: cubic-bezier(0.8,0,1,1);\n  }\n\n  50% {\n    transform: none;\n    -webkit-animation-timing-function: cubic-bezier(0,0,0.2,1);\n            animation-timing-function: cubic-bezier(0,0,0.2,1);\n  }\n}\n\n.flex-col {\n  flex-direction: column;\n}\n\n.border {\n  border-width: 1px;\n}\n\n.py-4 {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-3xl {\n  font-size: 1.875rem;\n  line-height: 2.25rem;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.text-black {\n  --tw-text-opacity: 1;\n  color: rgba(0, 0, 0, var(--tw-text-opacity));\n}\n\n*, ::before, ::after {\n  --tw-shadow: 0 0 #0000;\n}\n\n*, ::before, ::after {\n  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgba(59, 130, 246, 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n}\n\n.filter {\n  --tw-blur: var(--tw-empty,/*!*/ /*!*/);\n  --tw-brightness: var(--tw-empty,/*!*/ /*!*/);\n  --tw-contrast: var(--tw-empty,/*!*/ /*!*/);\n  --tw-grayscale: var(--tw-empty,/*!*/ /*!*/);\n  --tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);\n  --tw-invert: var(--tw-empty,/*!*/ /*!*/);\n  --tw-saturate: var(--tw-empty,/*!*/ /*!*/);\n  --tw-sepia: var(--tw-empty,/*!*/ /*!*/);\n  --tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);\n  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\n}\n\n@media (min-width: 640px) {\n}\n\n@media (min-width: 768px) {\n}\n\n@media (min-width: 1024px) {\n}\n\n@media (min-width: 1280px) {\n}\n\n@media (min-width: 1536px) {\n}";
var g10 = `/*purgecss start ignore*/

html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{
  padding:0;
  border:0;
  margin:0;
  font:inherit;
  font-size:100%;
  vertical-align:baseline
}

button,select,input,textarea{
  border-radius:0;
  font-family:inherit
}

input[type=text]::-ms-clear{
  display:none
}

article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{
  display:block
}

body{
  line-height:1
}

sup{
  vertical-align:super
}

sub{
  vertical-align:sub
}

ol,ul{
  list-style:none
}

blockquote,q{
  quotes:none
}

blockquote::before,blockquote::after,q::before,q::after{
  content:""
}

table{
  border-collapse:collapse;
  border-spacing:0
}

*{
  box-sizing:border-box
}

button{
  margin:0
}

html{
  font-size:100%
}

body{
  font-weight:400;
  font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;
  -moz-osx-font-smoothing:grayscale;
  -webkit-font-smoothing:antialiased;
  text-rendering:optimizeLegibility
}

code{
  font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace
}

strong{
  font-weight:600
}

@media screen and (-ms-high-contrast: active){
  svg{
    fill:ButtonText
  }
}

h1{
  font-size:2.625rem;
  font-weight:300;
  line-height:1.199;
  letter-spacing:0
}

h2{
  font-size:2rem;
  font-weight:400;
  line-height:1.25;
  letter-spacing:0
}

h3{
  font-size:1.75rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:0
}

h4{
  font-size:1.25rem;
  font-weight:400;
  line-height:1.4;
  letter-spacing:0
}

h5{
  font-size:1rem;
  font-weight:600;
  line-height:1.375;
  letter-spacing:0
}

h6{
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px
}

p{
  font-size:1rem;
  font-weight:400;
  line-height:1.5;
  letter-spacing:0
}

a{
  color:#0f62fe
}

em{
  font-style:italic
}

@-webkit-keyframes skeleton{
  0%{
    opacity:.3;
    transform:scaleX(0);
    transform-origin:left
  }

  20%{
    opacity:1;
    transform:scaleX(1);
    transform-origin:left
  }

  28%{
    transform:scaleX(1);
    transform-origin:right
  }

  51%{
    transform:scaleX(0);
    transform-origin:right
  }

  58%{
    transform:scaleX(0);
    transform-origin:right
  }

  82%{
    transform:scaleX(1);
    transform-origin:right
  }

  83%{
    transform:scaleX(1);
    transform-origin:left
  }

  96%{
    transform:scaleX(0);
    transform-origin:left
  }

  100%{
    opacity:.3;
    transform:scaleX(0);
    transform-origin:left
  }
}

@keyframes skeleton{
  0%{
    opacity:.3;
    transform:scaleX(0);
    transform-origin:left
  }

  20%{
    opacity:1;
    transform:scaleX(1);
    transform-origin:left
  }

  28%{
    transform:scaleX(1);
    transform-origin:right
  }

  51%{
    transform:scaleX(0);
    transform-origin:right
  }

  58%{
    transform:scaleX(0);
    transform-origin:right
  }

  82%{
    transform:scaleX(1);
    transform-origin:right
  }

  83%{
    transform:scaleX(1);
    transform-origin:left
  }

  96%{
    transform:scaleX(0);
    transform-origin:left
  }

  100%{
    opacity:.3;
    transform:scaleX(0);
    transform-origin:left
  }
}

.bx--tag{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  background-color:#e0e0e0;
  color:#393939;
  display:inline-flex;
  min-width:2rem;
  max-width:100%;
  min-height:1.5rem;
  align-items:center;
  justify-content:center;
  padding:.25rem .5rem;
  margin:.25rem;
  border-radius:.9375rem;
  cursor:default;
  vertical-align:middle;
  word-break:break-word
}

.bx--tag::-moz-focus-inner{
  border:0
}

.bx--tag.bx--tag--interactive:hover,.bx--tag .bx--tag__close-icon:hover{
  background-color:#c6c6c6
}

.bx--tag:not(:first-child){
  margin-left:0
}

.bx--tag--red{
  background-color:#ffd7d9;
  color:#750e13
}

.bx--tag--red.bx--tag--interactive:hover,.bx--tag--red .bx--tag__close-icon:hover{
  background-color:#ffb3b8
}

.bx--tag--magenta{
  background-color:#ffd6e8;
  color:#740937
}

.bx--tag--magenta.bx--tag--interactive:hover,.bx--tag--magenta .bx--tag__close-icon:hover{
  background-color:#ffafd2
}

.bx--tag--purple{
  background-color:#e8daff;
  color:#491d8b
}

.bx--tag--purple.bx--tag--interactive:hover,.bx--tag--purple .bx--tag__close-icon:hover{
  background-color:#d4bbff
}

.bx--tag--blue{
  background-color:#d0e2ff;
  color:#002d9c
}

.bx--tag--blue.bx--tag--interactive:hover,.bx--tag--blue .bx--tag__close-icon:hover{
  background-color:#a6c8ff
}

.bx--tag--cyan{
  background-color:#bae6ff;
  color:#003a6d
}

.bx--tag--cyan.bx--tag--interactive:hover,.bx--tag--cyan .bx--tag__close-icon:hover{
  background-color:#82cfff
}

.bx--tag--teal{
  background-color:#9ef0f0;
  color:#004144
}

.bx--tag--teal.bx--tag--interactive:hover,.bx--tag--teal .bx--tag__close-icon:hover{
  background-color:#3ddbd9
}

.bx--tag--green{
  background-color:#a7f0ba;
  color:#044317
}

.bx--tag--green.bx--tag--interactive:hover,.bx--tag--green .bx--tag__close-icon:hover{
  background-color:#6fdc8c
}

.bx--tag--gray{
  background-color:#e0e0e0;
  color:#393939
}

.bx--tag--gray.bx--tag--interactive:hover,.bx--tag--gray .bx--tag__close-icon:hover{
  background-color:#c6c6c6
}

.bx--tag--cool-gray{
  background-color:#dde1e6;
  color:#343a3f
}

.bx--tag--cool-gray.bx--tag--interactive:hover,.bx--tag--cool-gray .bx--tag__close-icon:hover{
  background-color:#c1c7cd
}

.bx--tag--warm-gray{
  background-color:#e5e0df;
  color:#3c3838
}

.bx--tag--warm-gray.bx--tag--interactive:hover,.bx--tag--warm-gray .bx--tag__close-icon:hover{
  background-color:#cac5c4
}

.bx--tag--high-contrast{
  background-color:#393939;
  color:#fff
}

.bx--tag--high-contrast.bx--tag--interactive:hover,.bx--tag--high-contrast .bx--tag__close-icon:hover{
  background-color:#4c4c4c
}

.bx--tag--outline{
  background-color:#f4f4f4;
  color:#161616;
  box-shadow:inset 0 0 0 1px #393939
}

.bx--tag--outline.bx--tag--interactive:hover,.bx--tag--outline .bx--tag__close-icon:hover{
  background-color:#e5e5e5
}

.bx--tag--disabled,.bx--tag--filter.bx--tag--disabled,.bx--tag--interactive.bx--tag--disabled{
  background-color:#fff;
  color:#c6c6c6
}

.bx--tag--disabled.bx--tag--interactive:hover,.bx--tag--disabled .bx--tag__close-icon:hover,.bx--tag--filter.bx--tag--disabled.bx--tag--interactive:hover,.bx--tag--filter.bx--tag--disabled .bx--tag__close-icon:hover,.bx--tag--interactive.bx--tag--disabled.bx--tag--interactive:hover,.bx--tag--interactive.bx--tag--disabled .bx--tag__close-icon:hover{
  background-color:#fff
}

.bx--tag--disabled:hover,.bx--tag--filter.bx--tag--disabled:hover,.bx--tag--interactive.bx--tag--disabled:hover{
  cursor:not-allowed
}

.bx--tag__label{
  overflow:hidden;
  max-width:100%;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--tag--interactive:focus{
  box-shadow:inset 0 0 0 1px #0f62fe;
  outline:none
}

.bx--tag--interactive:hover{
  cursor:pointer
}

.bx--tag--filter{
  padding-top:0;
  padding-right:0;
  padding-bottom:0;
  cursor:pointer
}

.bx--tag--filter:hover{
  outline:none
}

.bx--tag--interactive{
  transition:background-color 70ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--tag__close-icon{
  display:flex;
  width:1.5rem;
  height:1.5rem;
  flex-shrink:0;
  align-items:center;
  justify-content:center;
  padding:0;
  border:0;
  margin:0 0 0 .125rem;
  background-color:transparent;
  border-radius:50%;
  color:currentColor;
  cursor:pointer;
  transition:background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),box-shadow 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tag__close-icon svg{
  fill:currentColor
}

.bx--tag__custom-icon{
  width:1rem;
  height:1rem;
  flex-shrink:0;
  padding:0;
  border:0;
  margin-right:.25rem;
  background-color:transparent;
  color:currentColor;
  outline:none
}

.bx--tag__custom-icon svg{
  fill:currentColor
}

.bx--tag--disabled .bx--tag__close-icon{
  cursor:not-allowed
}

.bx--tag__close-icon:focus{
  border-radius:50%;
  box-shadow:inset 0 0 0 1px #0f62fe;
  outline:none
}

.bx--tag--high-contrast .bx--tag__close-icon:focus{
  box-shadow:inset 0 0 0 1px #fff
}

.bx--tag--filter.bx--tag--disabled .bx--tag__close-icon:hover{
  background-color:transparent
}

.bx--tag--filter.bx--tag--disabled svg{
  fill:#c6c6c6
}

.bx--tag--sm{
  min-height:1.125rem;
  padding:0 .5rem
}

.bx--tag--sm.bx--tag--filter{
  padding-right:0
}

.bx--tag--sm .bx--tag__close-icon{
  width:1.125rem;
  height:1.125rem;
  margin-left:.3125rem
}

.bx--tag.bx--skeleton{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  background-color:#e5e5e5;
  color:#161616;
  overflow:hidden;
  width:3.75rem
}

.bx--tag.bx--skeleton:hover,.bx--tag.bx--skeleton:focus,.bx--tag.bx--skeleton:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--tag.bx--skeleton::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--tag.bx--skeleton::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--tag.bx--skeleton.bx--tag--interactive:hover,.bx--tag.bx--skeleton .bx--tag__close-icon:hover{
  background-color:#e5e5e5
}

@media not all and (-webkit-min-device-pixel-ratio: 0), not all and (min-resolution: 0.001dpcm){
  @supports(-webkit-appearance: none) and (stroke-color: transparent){
    .bx--tag.bx--skeleton{
      transform:translateZ(0)
    }
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--tag{
    outline:1px solid transparent
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--tag__close-icon svg,.bx--tag__custom-icon svg{
    fill:ButtonText
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--tag__close-icon:focus{
    color:Highlight;
    outline:1px solid Highlight
  }
}

.bx--text-truncate--end{
  display:inline-block;
  overflow:hidden;
  width:100%;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--text-truncate--front{
  display:inline-block;
  overflow:hidden;
  width:100%;
  direction:rtl;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--inline-notification{
  position:relative;
  display:flex;
  width:100%;
  min-width:18rem;
  max-width:18rem;
  height:auto;
  min-height:3rem;
  flex-wrap:wrap;
  margin-top:1rem;
  margin-bottom:1rem;
  color:#fff
}

@media(min-width: 42rem){
  .bx--inline-notification{
    max-width:38rem;
    flex-wrap:nowrap
  }
}

@media(min-width: 66rem){
  .bx--inline-notification{
    max-width:46rem
  }
}

@media(min-width: 99rem){
  .bx--inline-notification{
    max-width:52rem
  }
}

.bx--inline-notification:not(.bx--inline-notification--low-contrast) a{
  color:#78a9ff
}

.bx--inline-notification a{
  text-decoration:none
}

.bx--inline-notification a:hover{
  text-decoration:underline
}

.bx--inline-notification a:focus{
  outline:1px solid #78a9ff
}

.bx--inline-notification.bx--inline-notification--low-contrast a:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--inline-notification.bx--inline-notification--low-contrast a:focus{
    outline-style:dotted
  }
}

.bx--inline-notification--low-contrast{
  color:#161616
}

.bx--inline-notification--low-contrast::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  box-sizing:border-box;
  border-width:1px 1px 1px 0;
  border-style:solid;
  content:"";
  filter:opacity(0.4);
  pointer-events:none
}

.bx--inline-notification--error{
  border-left:3px solid #fa4d56;
  background:#393939
}

.bx--inline-notification--error .bx--inline-notification__icon,.bx--inline-notification--error .bx--toast-notification__icon,.bx--inline-notification--error .bx--actionable-notification__icon{
  fill:#fa4d56
}

.bx--inline-notification--low-contrast.bx--inline-notification--error{
  border-left:3px solid #da1e28;
  background:#fff1f1
}

.bx--inline-notification--low-contrast.bx--inline-notification--error .bx--inline-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--error .bx--toast-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--error .bx--actionable-notification__icon{
  fill:#da1e28
}

.bx--inline-notification--low-contrast.bx--inline-notification--error::before{
  border-color:#da1e28
}

.bx--inline-notification--success{
  border-left:3px solid #42be65;
  background:#393939
}

.bx--inline-notification--success .bx--inline-notification__icon,.bx--inline-notification--success .bx--toast-notification__icon,.bx--inline-notification--success .bx--actionable-notification__icon{
  fill:#42be65
}

.bx--inline-notification--low-contrast.bx--inline-notification--success{
  border-left:3px solid #198038;
  background:#defbe6
}

.bx--inline-notification--low-contrast.bx--inline-notification--success .bx--inline-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--success .bx--toast-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--success .bx--actionable-notification__icon{
  fill:#198038
}

.bx--inline-notification--low-contrast.bx--inline-notification--success::before{
  border-color:#198038
}

.bx--inline-notification--info,.bx--inline-notification--info-square{
  border-left:3px solid #4589ff;
  background:#393939
}

.bx--inline-notification--info .bx--inline-notification__icon,.bx--inline-notification--info .bx--toast-notification__icon,.bx--inline-notification--info .bx--actionable-notification__icon,.bx--inline-notification--info-square .bx--inline-notification__icon,.bx--inline-notification--info-square .bx--toast-notification__icon,.bx--inline-notification--info-square .bx--actionable-notification__icon{
  fill:#4589ff
}

.bx--inline-notification--low-contrast.bx--inline-notification--info,.bx--inline-notification--low-contrast.bx--inline-notification--info-square{
  border-left:3px solid #0043ce;
  background:#edf5ff
}

.bx--inline-notification--low-contrast.bx--inline-notification--info .bx--inline-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--info .bx--toast-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--info .bx--actionable-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--info-square .bx--inline-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--info-square .bx--toast-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--info-square .bx--actionable-notification__icon{
  fill:#0043ce
}

.bx--inline-notification--low-contrast.bx--inline-notification--info::before,.bx--inline-notification--low-contrast.bx--inline-notification--info-square::before{
  border-color:#0043ce
}

.bx--inline-notification--warning,.bx--inline-notification--warning-alt{
  border-left:3px solid #f1c21b;
  background:#393939
}

.bx--inline-notification--warning .bx--inline-notification__icon,.bx--inline-notification--warning .bx--toast-notification__icon,.bx--inline-notification--warning .bx--actionable-notification__icon,.bx--inline-notification--warning-alt .bx--inline-notification__icon,.bx--inline-notification--warning-alt .bx--toast-notification__icon,.bx--inline-notification--warning-alt .bx--actionable-notification__icon{
  fill:#f1c21b
}

.bx--inline-notification--low-contrast.bx--inline-notification--warning,.bx--inline-notification--low-contrast.bx--inline-notification--warning-alt{
  border-left:3px solid #f1c21b;
  background:#fdf6dd
}

.bx--inline-notification--low-contrast.bx--inline-notification--warning .bx--inline-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--warning .bx--toast-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--warning .bx--actionable-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--warning-alt .bx--inline-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--warning-alt .bx--toast-notification__icon,.bx--inline-notification--low-contrast.bx--inline-notification--warning-alt .bx--actionable-notification__icon{
  fill:#f1c21b
}

.bx--inline-notification--low-contrast.bx--inline-notification--warning::before,.bx--inline-notification--low-contrast.bx--inline-notification--warning-alt::before{
  border-color:#f1c21b
}

.bx--inline-notification--warning .bx--inline-notification__icon path[opacity="0"]{
  fill:#000;
  opacity:1
}

.bx--inline-notification__details{
  display:flex;
  flex-grow:1;
  margin:0 3rem 0 1rem
}

@media(min-width: 42rem){
  .bx--inline-notification__details{
    margin:0 1rem
  }
}

.bx--inline-notification__icon{
  flex-shrink:0;
  margin-top:.875rem;
  margin-right:1rem
}

.bx--inline-notification__text-wrapper{
  display:flex;
  flex-wrap:wrap;
  padding:.9375rem 0
}

.bx--inline-notification__title{
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  margin:0 .25rem 0 0
}

.bx--inline-notification__subtitle{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  word-break:break-word
}

.bx--inline-notification__action-button.bx--btn--ghost{
  height:2rem;
  margin-bottom:.5rem;
  margin-left:2.5rem
}

@media(min-width: 42rem){
  .bx--inline-notification__action-button.bx--btn--ghost{
    margin:.5rem 0
  }
}

.bx--inline-notification:not(.bx--inline-notification--low-contrast) .bx--inline-notification__action-button.bx--btn--ghost{
  color:#78a9ff
}

.bx--inline-notification__action-button.bx--btn--ghost:active,.bx--inline-notification__action-button.bx--btn--ghost:hover{
  background-color:#4c4c4c
}

.bx--inline-notification--low-contrast .bx--inline-notification__action-button.bx--btn--ghost:active,.bx--inline-notification--low-contrast .bx--inline-notification__action-button.bx--btn--ghost:hover{
  background-color:#fff
}

.bx--inline-notification__action-button.bx--btn--ghost:focus{
  border-color:transparent;
  box-shadow:none;
  outline:2px solid #fff;
  outline-offset:-2px
}

.bx--inline-notification--low-contrast .bx--inline-notification__action-button.bx--btn--ghost:focus{
  outline-color:#0f62fe
}

.bx--inline-notification--hide-close-button .bx--inline-notification__action-button.bx--btn--ghost{
  margin-right:.5rem
}

.bx--inline-notification__close-button{
  outline:2px solid transparent;
  outline-offset:-2px;
  position:absolute;
  top:0;
  right:0;
  display:flex;
  width:3rem;
  min-width:3rem;
  max-width:3rem;
  height:3rem;
  flex-direction:column;
  align-items:center;
  justify-content:center;
  padding:0;
  border:none;
  background:transparent;
  cursor:pointer;
  transition:outline 110ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--inline-notification__close-button:focus{
  outline:2px solid #fff;
  outline-offset:-2px
}

.bx--inline-notification__close-button .bx--inline-notification__close-icon{
  fill:#fff
}

@media(min-width: 42rem){
  .bx--inline-notification__close-button{
    position:static
  }
}

.bx--inline-notification--low-contrast .bx--inline-notification__close-button:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--inline-notification--low-contrast .bx--inline-notification__close-button:focus{
    outline-style:dotted
  }
}

.bx--inline-notification--low-contrast .bx--inline-notification__close-button .bx--inline-notification__close-icon{
  fill:#161616
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--inline-notification{
    outline:1px solid transparent
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--inline-notification__close-button:focus,.bx--btn.bx--btn--ghost.bx--inline-notification__action-button:focus{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--inline-notification__icon{
    fill:ButtonText
  }
}

.bx--toast-notification{
  display:flex;
  width:18rem;
  height:auto;
  padding-left:1rem;
  margin-top:.5rem;
  margin-right:1rem;
  margin-bottom:.5rem;
  box-shadow:0 2px 6px 0 rgba(0,0,0,.2);
  color:#fff
}

.bx--toast-notification:first-child{
  margin-top:1rem
}

@media(min-width: 99rem){
  .bx--toast-notification{
    width:22rem
  }
}

.bx--toast-notification:not(.bx--toast-notification--low-contrast) a{
  color:#78a9ff
}

.bx--toast-notification a{
  text-decoration:none
}

.bx--toast-notification a:hover{
  text-decoration:underline
}

.bx--toast-notification a:focus{
  outline:1px solid #78a9ff
}

.bx--toast-notification.bx--toast-notification--low-contrast a:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--toast-notification.bx--toast-notification--low-contrast a:focus{
    outline-style:dotted
  }
}

.bx--toast-notification--low-contrast{
  color:#161616
}

.bx--toast-notification--error{
  border-left:3px solid #fa4d56;
  background:#393939
}

.bx--toast-notification--error .bx--inline-notification__icon,.bx--toast-notification--error .bx--toast-notification__icon,.bx--toast-notification--error .bx--actionable-notification__icon{
  fill:#fa4d56
}

.bx--toast-notification--low-contrast.bx--toast-notification--error{
  border-left:3px solid #da1e28;
  background:#fff1f1
}

.bx--toast-notification--low-contrast.bx--toast-notification--error .bx--inline-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--error .bx--toast-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--error .bx--actionable-notification__icon{
  fill:#da1e28
}

.bx--toast-notification--success{
  border-left:3px solid #42be65;
  background:#393939
}

.bx--toast-notification--success .bx--inline-notification__icon,.bx--toast-notification--success .bx--toast-notification__icon,.bx--toast-notification--success .bx--actionable-notification__icon{
  fill:#42be65
}

.bx--toast-notification--low-contrast.bx--toast-notification--success{
  border-left:3px solid #198038;
  background:#defbe6
}

.bx--toast-notification--low-contrast.bx--toast-notification--success .bx--inline-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--success .bx--toast-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--success .bx--actionable-notification__icon{
  fill:#198038
}

.bx--toast-notification--info,.bx--toast-notification--info-square{
  border-left:3px solid #4589ff;
  background:#393939
}

.bx--toast-notification--info .bx--inline-notification__icon,.bx--toast-notification--info .bx--toast-notification__icon,.bx--toast-notification--info .bx--actionable-notification__icon,.bx--toast-notification--info-square .bx--inline-notification__icon,.bx--toast-notification--info-square .bx--toast-notification__icon,.bx--toast-notification--info-square .bx--actionable-notification__icon{
  fill:#4589ff
}

.bx--toast-notification--low-contrast.bx--toast-notification--info,.bx--toast-notification--low-contrast.bx--toast-notification--info-square{
  border-left:3px solid #0043ce;
  background:#edf5ff
}

.bx--toast-notification--low-contrast.bx--toast-notification--info .bx--inline-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--info .bx--toast-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--info .bx--actionable-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--info-square .bx--inline-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--info-square .bx--toast-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--info-square .bx--actionable-notification__icon{
  fill:#0043ce
}

.bx--toast-notification--warning,.bx--toast-notification--warning-alt{
  border-left:3px solid #f1c21b;
  background:#393939
}

.bx--toast-notification--warning .bx--inline-notification__icon,.bx--toast-notification--warning .bx--toast-notification__icon,.bx--toast-notification--warning .bx--actionable-notification__icon,.bx--toast-notification--warning-alt .bx--inline-notification__icon,.bx--toast-notification--warning-alt .bx--toast-notification__icon,.bx--toast-notification--warning-alt .bx--actionable-notification__icon{
  fill:#f1c21b
}

.bx--toast-notification--low-contrast.bx--toast-notification--warning,.bx--toast-notification--low-contrast.bx--toast-notification--warning-alt{
  border-left:3px solid #f1c21b;
  background:#fdf6dd
}

.bx--toast-notification--low-contrast.bx--toast-notification--warning .bx--inline-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--warning .bx--toast-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--warning .bx--actionable-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--warning-alt .bx--inline-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--warning-alt .bx--toast-notification__icon,.bx--toast-notification--low-contrast.bx--toast-notification--warning-alt .bx--actionable-notification__icon{
  fill:#f1c21b
}

.bx--toast-notification--warning .bx--toast-notification__icon path[opacity="0"]{
  fill:#000;
  opacity:1
}

.bx--toast-notification__icon{
  flex-shrink:0;
  margin-top:1rem;
  margin-right:1rem
}

.bx--toast-notification__details{
  margin-right:1rem
}

.bx--toast-notification__close-button{
  outline:2px solid transparent;
  outline-offset:-2px;
  display:flex;
  width:3rem;
  min-width:3rem;
  height:3rem;
  min-height:3rem;
  flex-direction:column;
  align-items:center;
  justify-content:center;
  padding:0;
  border:none;
  margin-left:auto;
  background-color:transparent;
  cursor:pointer;
  transition:outline 110ms,background-color 110ms
}

.bx--toast-notification__close-button:focus{
  outline:2px solid #fff;
  outline-offset:-2px
}

.bx--toast-notification__close-button .bx--toast-notification__close-icon{
  fill:#fff
}

.bx--toast-notification--low-contrast .bx--toast-notification__close-button:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--toast-notification--low-contrast .bx--toast-notification__close-button:focus{
    outline-style:dotted
  }
}

.bx--toast-notification--low-contrast .bx--toast-notification__close-button .bx--toast-notification__close-icon{
  fill:#161616
}

.bx--toast-notification__title{
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  margin-top:1rem;
  font-weight:600;
  word-break:break-word
}

.bx--toast-notification__subtitle{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  margin-top:0;
  margin-bottom:1rem;
  color:#fff;
  word-break:break-word
}

.bx--toast-notification--low-contrast .bx--toast-notification__subtitle{
  color:#161616
}

.bx--toast-notification__caption{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  padding-top:.5rem;
  margin-bottom:1rem;
  color:#fff
}

.bx--toast-notification--low-contrast .bx--toast-notification__caption{
  color:#161616
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--toast-notification{
    outline:1px solid transparent
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--toast-notification__close-button:focus{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--toast-notification__icon{
    fill:ButtonText
  }
}

.bx--popover{
  --cds-popover-offset: 0rem;
  --cds-popover-caret-offset: 1rem;
  position:absolute;
  z-index:6000;
  display:none
}

.bx--popover::before{
  position:absolute;
  display:block;
  content:""
}

.bx--popover--open{
  display:block
}

.bx--popover-contents{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  position:relative;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  max-width:23rem;
  background-color:#fff;
  border-radius:2px;
  color:#161616
}

.bx--popover--light .bx--popover-contents{
  background-color:#f4f4f4
}

.bx--popover--high-contrast .bx--popover-contents{
  background-color:#393939;
  color:#fff
}

.bx--popover--caret{
  --cds-popover-offset: 0.5rem
}

.bx--popover--caret .bx--popover-contents::before,.bx--popover--caret .bx--popover-contents::after{
  position:absolute;
  display:inline-block;
  width:.5rem;
  height:.5rem;
  background-color:inherit;
  content:""
}

.bx--popover--caret .bx--popover-contents::before{
  z-index:-1;
  box-shadow:2px 2px 6px 0 rgba(0,0,0,.2)
}

.bx--popover--bottom{
  bottom:0;
  left:50%;
  transform:translate(-50%, calc(100% + var(--cds-popover-offset)))
}

.bx--popover--caret.bx--popover--bottom .bx--popover-contents::before,.bx--popover--caret.bx--popover--bottom .bx--popover-contents::after{
  top:0;
  left:50%;
  transform:translate(-50%, -50%) rotate(45deg)
}

.bx--popover--bottom-left{
  bottom:0;
  left:0;
  transform:translateY(calc(100% + var(--cds-popover-offset)))
}

.bx--popover--caret.bx--popover--bottom-left .bx--popover-contents::before,.bx--popover--caret.bx--popover--bottom-left .bx--popover-contents::after{
  top:0;
  left:0;
  transform:translate(var(--cds-popover-caret-offset), -50%) rotate(45deg)
}

.bx--popover--bottom-right{
  right:0;
  bottom:0;
  transform:translateY(calc(100% + var(--cds-popover-offset)))
}

.bx--popover--caret.bx--popover--bottom-right .bx--popover-contents::before,.bx--popover--caret.bx--popover--bottom-right .bx--popover-contents::after{
  top:0;
  right:0;
  transform:translate(calc(-1 * var(--cds-popover-caret-offset)), -50%) rotate(45deg)
}

.bx--popover--bottom.bx--popover::before,.bx--popover--bottom-left.bx--popover::before,.bx--popover--bottom-right.bx--popover::before{
  top:0;
  right:0;
  left:0;
  height:var(--cds-popover-offset);
  transform:translateY(-100%)
}

.bx--popover--top{
  bottom:100%;
  left:50%;
  transform:translate(-50%, calc(-1 * var(--cds-popover-offset)))
}

.bx--popover--caret.bx--popover--top .bx--popover-contents::before,.bx--popover--caret.bx--popover--top .bx--popover-contents::after{
  bottom:0;
  left:50%;
  transform:translate(-50%, 50%) rotate(45deg)
}

.bx--popover--top-left{
  bottom:100%;
  left:0;
  transform:translateY(calc(-1 * var(--cds-popover-offset)))
}

.bx--popover--caret.bx--popover--top-left .bx--popover-contents::before,.bx--popover--caret.bx--popover--top-left .bx--popover-contents::after{
  bottom:0;
  left:0;
  transform:translate(var(--cds-popover-caret-offset), 50%) rotate(45deg)
}

.bx--popover--top-right{
  right:0;
  bottom:100%;
  transform:translateY(calc(-1 * var(--cds-popover-offset)))
}

.bx--popover--caret.bx--popover--top-right .bx--popover-contents::before,.bx--popover--caret.bx--popover--top-right .bx--popover-contents::after{
  right:0;
  bottom:0;
  transform:translate(calc(-1 * var(--cds-popover-caret-offset)), 50%) rotate(45deg)
}

.bx--popover--top.bx--popover::before,.bx--popover--top-left.bx--popover::before,.bx--popover--top-right.bx--popover::before{
  right:0;
  bottom:0;
  left:0;
  height:var(--cds-popover-offset);
  transform:translateY(100%)
}

.bx--popover--right{
  top:50%;
  left:100%;
  transform:translate(var(--cds-popover-offset), -50%)
}

.bx--popover--caret.bx--popover--right .bx--popover-contents::before,.bx--popover--caret.bx--popover--right .bx--popover-contents::after{
  top:50%;
  left:0;
  transform:translate(-50%, -50%) rotate(45deg)
}

.bx--popover--right-top{
  top:0;
  left:100%;
  transform:translateX(8px)
}

.bx--popover--caret.bx--popover--right-top .bx--popover-contents::before,.bx--popover--caret.bx--popover--right-top .bx--popover-contents::after{
  top:0;
  left:0;
  transform:translate(-50%, var(--cds-popover-caret-offset)) rotate(45deg)
}

.bx--popover--right-bottom{
  bottom:0;
  left:100%;
  transform:translateX(var(--cds-popover-offset))
}

.bx--popover--caret.bx--popover--right-bottom .bx--popover-contents::before,.bx--popover--caret.bx--popover--right-bottom .bx--popover-contents::after{
  bottom:0;
  left:0;
  transform:translate(-50%, calc(-1 * var(--cds-popover-caret-offset))) rotate(45deg)
}

.bx--popover--right.bx--popover::before,.bx--popover--right-top.bx--popover::before,.bx--popover--right-bottom.bx--popover::before{
  top:0;
  bottom:0;
  left:0;
  width:var(--cds-popover-offset);
  transform:translateX(-100%)
}

.bx--popover--left{
  top:50%;
  right:100%;
  transform:translate(calc(-1 * var(--cds-popover-offset)), -50%)
}

.bx--popover--caret.bx--popover--left .bx--popover-contents::before,.bx--popover--caret.bx--popover--left .bx--popover-contents::after{
  top:50%;
  right:0;
  transform:translate(50%, -50%) rotate(45deg)
}

.bx--popover--left-top{
  top:0;
  right:100%;
  transform:translateX(calc(-1 * var(--cds-popover-offset)))
}

.bx--popover--caret.bx--popover--left-top .bx--popover-contents::before,.bx--popover--caret.bx--popover--left-top .bx--popover-contents::after{
  top:0;
  right:0;
  transform:translate(50%, var(--cds-popover-caret-offset)) rotate(45deg)
}

.bx--popover--left-bottom{
  right:100%;
  bottom:0;
  transform:translateX(calc(-1 * var(--cds-popover-offset)))
}

.bx--popover--caret.bx--popover--left-bottom .bx--popover-contents::before,.bx--popover--caret.bx--popover--left-bottom .bx--popover-contents::after{
  right:0;
  bottom:0;
  transform:translate(50%, calc(-1 * var(--cds-popover-caret-offset))) rotate(45deg)
}

.bx--popover--left.bx--popover::before,.bx--popover--left-top.bx--popover::before,.bx--popover--left-bottom.bx--popover::before{
  top:0;
  right:0;
  bottom:0;
  width:var(--cds-popover-offset);
  transform:translateX(100%)
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Mono Light Italic"),local("IBMPlexMono-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1gMoW.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Mono Italic"),local("IBMPlexMono-Italic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa1Xdm.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold Italic"),local("IBMPlexMono-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1gMoW.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Mono Light"),local("IBMPlexMono-Light"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwlBFhA.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Mono"),local("IBMPlexMono"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1i8q0Q.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold"),local("IBMPlexMono-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwlBFhA.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Mono Light Italic"),local("IBMPlexMono-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1jcoQPttoz6Pz.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Mono Light Italic"),local("IBMPlexMono-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1hMoQPttoz6Pz.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Mono Light Italic"),local("IBMPlexMono-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1j8oQPttoz6Pz.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Mono Light Italic"),local("IBMPlexMono-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1jsoQPttoz6Pz.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Mono Light Italic"),local("IBMPlexMono-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1gMoQPttozw.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Mono Italic"),local("IBMPlexMono-Italic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa2HdgregdFOFh.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Mono Italic"),local("IBMPlexMono-Italic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa0XdgregdFOFh.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Mono Italic"),local("IBMPlexMono-Italic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa2ndgregdFOFh.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Mono Italic"),local("IBMPlexMono-Italic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa23dgregdFOFh.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Mono Italic"),local("IBMPlexMono-Italic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa1XdgregdFA.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold Italic"),local("IBMPlexMono-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1jcoQPttoz6Pz.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold Italic"),local("IBMPlexMono-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1hMoQPttoz6Pz.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold Italic"),local("IBMPlexMono-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1j8oQPttoz6Pz.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold Italic"),local("IBMPlexMono-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1jsoQPttoz6Pz.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold Italic"),local("IBMPlexMono-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1gMoQPttozw.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Mono Light"),local("IBMPlexMono-Light"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwl1FgsAXHNlYzg.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Mono Light"),local("IBMPlexMono-Light"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwlRFgsAXHNlYzg.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Mono Light"),local("IBMPlexMono-Light"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwl9FgsAXHNlYzg.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Mono Light"),local("IBMPlexMono-Light"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwl5FgsAXHNlYzg.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Mono Light"),local("IBMPlexMono-Light"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwlBFgsAXHNk.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Mono"),local("IBMPlexMono"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1iIq131nj-otFQ.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Mono"),local("IBMPlexMono"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1isq131nj-otFQ.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Mono"),local("IBMPlexMono"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1iAq131nj-otFQ.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Mono"),local("IBMPlexMono"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1iEq131nj-otFQ.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Mono"),local("IBMPlexMono"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1i8q131nj-o.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold"),local("IBMPlexMono-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwl1FgsAXHNlYzg.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold"),local("IBMPlexMono-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwlRFgsAXHNlYzg.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold"),local("IBMPlexMono-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwl9FgsAXHNlYzg.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold"),local("IBMPlexMono-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwl5FgsAXHNlYzg.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Mono";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Mono SemiBold"),local("IBMPlexMono-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwlBFgsAXHNk.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Sans Light Italic"),local("IBMPlexSans-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcdvfo.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Sans Italic"),local("IBMPlexSans-Italic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuF6ZP.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold Italic"),local("IBMPlexSans-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcdvfo.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Sans Light"),local("IBMPlexSans-Light"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIFscg.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Sans"),local("IBMPlexSans"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdHeEw.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold"),local("IBMPlexSans-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIFscg.woff) format("woff")
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Sans Light Italic"),local("IBMPlexSans-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRce_fuJGl18QRY.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Sans Light Italic"),local("IBMPlexSans-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRccvfuJGl18QRY.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Sans Light Italic"),local("IBMPlexSans-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcdffuJGl18QRY.woff2) format("woff2");

  unicode-range:U+0370-03FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Sans Light Italic"),local("IBMPlexSans-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRceffuJGl18QRY.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Sans Light Italic"),local("IBMPlexSans-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcePfuJGl18QRY.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:300;

  src:local("IBM Plex Sans Light Italic"),local("IBMPlexSans-LightItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcdvfuJGl18Q.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Sans Italic"),local("IBMPlexSans-Italic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuGqZJW9XjDlN8.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Sans Italic"),local("IBMPlexSans-Italic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuE6ZJW9XjDlN8.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Sans Italic"),local("IBMPlexSans-Italic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuFKZJW9XjDlN8.woff2) format("woff2");

  unicode-range:U+0370-03FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Sans Italic"),local("IBMPlexSans-Italic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuGKZJW9XjDlN8.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Sans Italic"),local("IBMPlexSans-Italic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuGaZJW9XjDlN8.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:400;

  src:local("IBM Plex Sans Italic"),local("IBMPlexSans-Italic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuF6ZJW9XjDg.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold Italic"),local("IBMPlexSans-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJce_fuJGl18QRY.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold Italic"),local("IBMPlexSans-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJccvfuJGl18QRY.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold Italic"),local("IBMPlexSans-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcdffuJGl18QRY.woff2) format("woff2");

  unicode-range:U+0370-03FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold Italic"),local("IBMPlexSans-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJceffuJGl18QRY.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold Italic"),local("IBMPlexSans-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcePfuJGl18QRY.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:italic;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold Italic"),local("IBMPlexSans-SemiBoldItalic"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcdvfuJGl18Q.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Sans Light"),local("IBMPlexSans-Light"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIxsdP3pBmtF8A.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Sans Light"),local("IBMPlexSans-Light"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIVsdP3pBmtF8A.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Sans Light"),local("IBMPlexSans-Light"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIJsdP3pBmtF8A.woff2) format("woff2");

  unicode-range:U+0370-03FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Sans Light"),local("IBMPlexSans-Light"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AI5sdP3pBmtF8A.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Sans Light"),local("IBMPlexSans-Light"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AI9sdP3pBmtF8A.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:300;

  src:local("IBM Plex Sans Light"),local("IBMPlexSans-Light"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIFsdP3pBms.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Sans"),local("IBMPlexSans"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdzeFaxOedfTDw.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Sans"),local("IBMPlexSans"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdXeFaxOedfTDw.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Sans"),local("IBMPlexSans"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdLeFaxOedfTDw.woff2) format("woff2");

  unicode-range:U+0370-03FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Sans"),local("IBMPlexSans"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhd7eFaxOedfTDw.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Sans"),local("IBMPlexSans"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhd_eFaxOedfTDw.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:400;

  src:local("IBM Plex Sans"),local("IBMPlexSans"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdHeFaxOedc.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold"),local("IBMPlexSans-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIxsdP3pBmtF8A.woff2) format("woff2");

  unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold"),local("IBMPlexSans-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIVsdP3pBmtF8A.woff2) format("woff2");

  unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold"),local("IBMPlexSans-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIJsdP3pBmtF8A.woff2) format("woff2");

  unicode-range:U+0370-03FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold"),local("IBMPlexSans-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AI5sdP3pBmtF8A.woff2) format("woff2");

  unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold"),local("IBMPlexSans-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AI9sdP3pBmtF8A.woff2) format("woff2");

  unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF
}

@font-face{
  font-display:auto;

  font-family:"IBM Plex Sans";

  font-style:normal;

  font-weight:600;

  src:local("IBM Plex Sans SemiBold"),local("IBMPlexSans-SemiBold"),url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIFsdP3pBms.woff2) format("woff2");

  unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD
}

.bx--assistive-text,.bx--visually-hidden{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap
}

.bx--body{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  background-color:#f4f4f4;
  color:#161616;
  line-height:1
}

body{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  background-color:#f4f4f4;
  color:#161616;
  line-height:1
}

.bx--grid{
  margin-right:auto;
  margin-left:auto;
  max-width:99rem;
  padding-right:1rem;
  padding-left:1rem
}

@media(min-width: 42rem){
  .bx--grid{
    padding-right:2rem;
    padding-left:2rem
  }
}

@media(min-width: 99rem){
  .bx--grid{
    padding-right:2.5rem;
    padding-left:2.5rem
  }
}

@media(min-width: 99rem){
  .bx--grid--full-width{
    max-width:100%
  }
}

.bx--row{
  display:flex;
  flex-wrap:wrap;
  margin-right:-1rem;
  margin-left:-1rem
}

.bx--row-padding [class*=bx--col],.bx--col-padding{
  padding-top:1rem;
  padding-bottom:1rem
}

.bx--grid--condensed [class*=bx--col]{
  padding-top:.03125rem;
  padding-bottom:.03125rem
}

.bx--col{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col,.bx--grid--condensed .bx--col{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col,.bx--grid--narrow .bx--col{
  padding-right:1rem;
  padding-left:0
}

.bx--col-sm-0{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-sm-0,.bx--grid--condensed .bx--col-sm-0{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-sm-0,.bx--grid--narrow .bx--col-sm-0{
  padding-right:1rem;
  padding-left:0
}

.bx--col-sm-1{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-sm-1,.bx--grid--condensed .bx--col-sm-1{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-sm-1,.bx--grid--narrow .bx--col-sm-1{
  padding-right:1rem;
  padding-left:0
}

.bx--col-sm-2{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-sm-2,.bx--grid--condensed .bx--col-sm-2{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-sm-2,.bx--grid--narrow .bx--col-sm-2{
  padding-right:1rem;
  padding-left:0
}

.bx--col-sm-3{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-sm-3,.bx--grid--condensed .bx--col-sm-3{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-sm-3,.bx--grid--narrow .bx--col-sm-3{
  padding-right:1rem;
  padding-left:0
}

.bx--col-sm-4{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-sm-4,.bx--grid--condensed .bx--col-sm-4{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-sm-4,.bx--grid--narrow .bx--col-sm-4{
  padding-right:1rem;
  padding-left:0
}

.bx--col-sm,.bx--col-sm--auto{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-sm,.bx--grid--condensed .bx--col-sm,.bx--row--condensed .bx--col-sm--auto,.bx--grid--condensed .bx--col-sm--auto{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-sm,.bx--grid--narrow .bx--col-sm,.bx--row--narrow .bx--col-sm--auto,.bx--grid--narrow .bx--col-sm--auto{
  padding-right:1rem;
  padding-left:0
}

.bx--col,.bx--col-sm{
  max-width:100%;
  flex-basis:0;
  flex-grow:1
}

.bx--col--auto,.bx--col-sm--auto{
  width:auto;
  max-width:100%;
  flex:1 0 0%
}

.bx--col-sm-0{
  display:none
}

.bx--col-sm-1{
  display:block;
  max-width:25%;
  flex:0 0 25%
}

.bx--col-sm-2{
  display:block;
  max-width:50%;
  flex:0 0 50%
}

.bx--col-sm-3{
  display:block;
  max-width:75%;
  flex:0 0 75%
}

.bx--col-sm-4{
  display:block;
  max-width:100%;
  flex:0 0 100%
}

.bx--offset-sm-0{
  margin-left:0
}

.bx--offset-sm-1{
  margin-left:25%
}

.bx--offset-sm-2{
  margin-left:50%
}

.bx--offset-sm-3{
  margin-left:75%
}

.bx--col-md-0{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-md-0,.bx--grid--condensed .bx--col-md-0{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-md-0,.bx--grid--narrow .bx--col-md-0{
  padding-right:1rem;
  padding-left:0
}

.bx--col-md-1{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-md-1,.bx--grid--condensed .bx--col-md-1{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-md-1,.bx--grid--narrow .bx--col-md-1{
  padding-right:1rem;
  padding-left:0
}

.bx--col-md-2{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-md-2,.bx--grid--condensed .bx--col-md-2{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-md-2,.bx--grid--narrow .bx--col-md-2{
  padding-right:1rem;
  padding-left:0
}

.bx--col-md-3{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-md-3,.bx--grid--condensed .bx--col-md-3{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-md-3,.bx--grid--narrow .bx--col-md-3{
  padding-right:1rem;
  padding-left:0
}

.bx--col-md-4{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-md-4,.bx--grid--condensed .bx--col-md-4{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-md-4,.bx--grid--narrow .bx--col-md-4{
  padding-right:1rem;
  padding-left:0
}

.bx--col-md-5{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-md-5,.bx--grid--condensed .bx--col-md-5{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-md-5,.bx--grid--narrow .bx--col-md-5{
  padding-right:1rem;
  padding-left:0
}

.bx--col-md-6{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-md-6,.bx--grid--condensed .bx--col-md-6{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-md-6,.bx--grid--narrow .bx--col-md-6{
  padding-right:1rem;
  padding-left:0
}

.bx--col-md-7{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-md-7,.bx--grid--condensed .bx--col-md-7{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-md-7,.bx--grid--narrow .bx--col-md-7{
  padding-right:1rem;
  padding-left:0
}

.bx--col-md-8{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-md-8,.bx--grid--condensed .bx--col-md-8{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-md-8,.bx--grid--narrow .bx--col-md-8{
  padding-right:1rem;
  padding-left:0
}

.bx--col-md,.bx--col-md--auto{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-md,.bx--grid--condensed .bx--col-md,.bx--row--condensed .bx--col-md--auto,.bx--grid--condensed .bx--col-md--auto{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-md,.bx--grid--narrow .bx--col-md,.bx--row--narrow .bx--col-md--auto,.bx--grid--narrow .bx--col-md--auto{
  padding-right:1rem;
  padding-left:0
}

@media(min-width: 42rem){
  .bx--col,.bx--col-md{
    max-width:100%;
    flex-basis:0;
    flex-grow:1
  }

  .bx--col--auto,.bx--col-md--auto{
    width:auto;
    max-width:100%;
    flex:1 0 0%
  }

  .bx--col-md-0{
    display:none
  }

  .bx--col-md-1{
    display:block;
    max-width:12.5%;
    flex:0 0 12.5%
  }

  .bx--col-md-2{
    display:block;
    max-width:25%;
    flex:0 0 25%
  }

  .bx--col-md-3{
    display:block;
    max-width:37.5%;
    flex:0 0 37.5%
  }

  .bx--col-md-4{
    display:block;
    max-width:50%;
    flex:0 0 50%
  }

  .bx--col-md-5{
    display:block;
    max-width:62.5%;
    flex:0 0 62.5%
  }

  .bx--col-md-6{
    display:block;
    max-width:75%;
    flex:0 0 75%
  }

  .bx--col-md-7{
    display:block;
    max-width:87.5%;
    flex:0 0 87.5%
  }

  .bx--col-md-8{
    display:block;
    max-width:100%;
    flex:0 0 100%
  }

  .bx--offset-md-0{
    margin-left:0
  }

  .bx--offset-md-1{
    margin-left:12.5%
  }

  .bx--offset-md-2{
    margin-left:25%
  }

  .bx--offset-md-3{
    margin-left:37.5%
  }

  .bx--offset-md-4{
    margin-left:50%
  }

  .bx--offset-md-5{
    margin-left:62.5%
  }

  .bx--offset-md-6{
    margin-left:75%
  }

  .bx--offset-md-7{
    margin-left:87.5%
  }
}

.bx--col-lg-0{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-0,.bx--grid--condensed .bx--col-lg-0{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-0,.bx--grid--narrow .bx--col-lg-0{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-1{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-1,.bx--grid--condensed .bx--col-lg-1{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-1,.bx--grid--narrow .bx--col-lg-1{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-2{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-2,.bx--grid--condensed .bx--col-lg-2{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-2,.bx--grid--narrow .bx--col-lg-2{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-3{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-3,.bx--grid--condensed .bx--col-lg-3{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-3,.bx--grid--narrow .bx--col-lg-3{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-4{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-4,.bx--grid--condensed .bx--col-lg-4{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-4,.bx--grid--narrow .bx--col-lg-4{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-5{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-5,.bx--grid--condensed .bx--col-lg-5{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-5,.bx--grid--narrow .bx--col-lg-5{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-6{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-6,.bx--grid--condensed .bx--col-lg-6{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-6,.bx--grid--narrow .bx--col-lg-6{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-7{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-7,.bx--grid--condensed .bx--col-lg-7{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-7,.bx--grid--narrow .bx--col-lg-7{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-8{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-8,.bx--grid--condensed .bx--col-lg-8{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-8,.bx--grid--narrow .bx--col-lg-8{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-9{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-9,.bx--grid--condensed .bx--col-lg-9{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-9,.bx--grid--narrow .bx--col-lg-9{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-10{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-10,.bx--grid--condensed .bx--col-lg-10{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-10,.bx--grid--narrow .bx--col-lg-10{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-11{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-11,.bx--grid--condensed .bx--col-lg-11{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-11,.bx--grid--narrow .bx--col-lg-11{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-12{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-12,.bx--grid--condensed .bx--col-lg-12{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-12,.bx--grid--narrow .bx--col-lg-12{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-13{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-13,.bx--grid--condensed .bx--col-lg-13{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-13,.bx--grid--narrow .bx--col-lg-13{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-14{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-14,.bx--grid--condensed .bx--col-lg-14{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-14,.bx--grid--narrow .bx--col-lg-14{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-15{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-15,.bx--grid--condensed .bx--col-lg-15{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-15,.bx--grid--narrow .bx--col-lg-15{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg-16{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg-16,.bx--grid--condensed .bx--col-lg-16{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg-16,.bx--grid--narrow .bx--col-lg-16{
  padding-right:1rem;
  padding-left:0
}

.bx--col-lg,.bx--col-lg--auto{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-lg,.bx--grid--condensed .bx--col-lg,.bx--row--condensed .bx--col-lg--auto,.bx--grid--condensed .bx--col-lg--auto{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-lg,.bx--grid--narrow .bx--col-lg,.bx--row--narrow .bx--col-lg--auto,.bx--grid--narrow .bx--col-lg--auto{
  padding-right:1rem;
  padding-left:0
}

@media(min-width: 66rem){
  .bx--col,.bx--col-lg{
    max-width:100%;
    flex-basis:0;
    flex-grow:1
  }

  .bx--col--auto,.bx--col-lg--auto{
    width:auto;
    max-width:100%;
    flex:1 0 0%
  }

  .bx--col-lg-0{
    display:none
  }

  .bx--col-lg-1{
    display:block;
    max-width:6.25%;
    flex:0 0 6.25%
  }

  .bx--col-lg-2{
    display:block;
    max-width:12.5%;
    flex:0 0 12.5%
  }

  .bx--col-lg-3{
    display:block;
    max-width:18.75%;
    flex:0 0 18.75%
  }

  .bx--col-lg-4{
    display:block;
    max-width:25%;
    flex:0 0 25%
  }

  .bx--col-lg-5{
    display:block;
    max-width:31.25%;
    flex:0 0 31.25%
  }

  .bx--col-lg-6{
    display:block;
    max-width:37.5%;
    flex:0 0 37.5%
  }

  .bx--col-lg-7{
    display:block;
    max-width:43.75%;
    flex:0 0 43.75%
  }

  .bx--col-lg-8{
    display:block;
    max-width:50%;
    flex:0 0 50%
  }

  .bx--col-lg-9{
    display:block;
    max-width:56.25%;
    flex:0 0 56.25%
  }

  .bx--col-lg-10{
    display:block;
    max-width:62.5%;
    flex:0 0 62.5%
  }

  .bx--col-lg-11{
    display:block;
    max-width:68.75%;
    flex:0 0 68.75%
  }

  .bx--col-lg-12{
    display:block;
    max-width:75%;
    flex:0 0 75%
  }

  .bx--col-lg-13{
    display:block;
    max-width:81.25%;
    flex:0 0 81.25%
  }

  .bx--col-lg-14{
    display:block;
    max-width:87.5%;
    flex:0 0 87.5%
  }

  .bx--col-lg-15{
    display:block;
    max-width:93.75%;
    flex:0 0 93.75%
  }

  .bx--col-lg-16{
    display:block;
    max-width:100%;
    flex:0 0 100%
  }

  .bx--offset-lg-0{
    margin-left:0
  }

  .bx--offset-lg-1{
    margin-left:6.25%
  }

  .bx--offset-lg-2{
    margin-left:12.5%
  }

  .bx--offset-lg-3{
    margin-left:18.75%
  }

  .bx--offset-lg-4{
    margin-left:25%
  }

  .bx--offset-lg-5{
    margin-left:31.25%
  }

  .bx--offset-lg-6{
    margin-left:37.5%
  }

  .bx--offset-lg-7{
    margin-left:43.75%
  }

  .bx--offset-lg-8{
    margin-left:50%
  }

  .bx--offset-lg-9{
    margin-left:56.25%
  }

  .bx--offset-lg-10{
    margin-left:62.5%
  }

  .bx--offset-lg-11{
    margin-left:68.75%
  }

  .bx--offset-lg-12{
    margin-left:75%
  }

  .bx--offset-lg-13{
    margin-left:81.25%
  }

  .bx--offset-lg-14{
    margin-left:87.5%
  }

  .bx--offset-lg-15{
    margin-left:93.75%
  }
}

.bx--col-xlg-0{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-0,.bx--grid--condensed .bx--col-xlg-0{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-0,.bx--grid--narrow .bx--col-xlg-0{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-1{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-1,.bx--grid--condensed .bx--col-xlg-1{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-1,.bx--grid--narrow .bx--col-xlg-1{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-2{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-2,.bx--grid--condensed .bx--col-xlg-2{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-2,.bx--grid--narrow .bx--col-xlg-2{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-3{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-3,.bx--grid--condensed .bx--col-xlg-3{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-3,.bx--grid--narrow .bx--col-xlg-3{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-4{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-4,.bx--grid--condensed .bx--col-xlg-4{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-4,.bx--grid--narrow .bx--col-xlg-4{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-5{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-5,.bx--grid--condensed .bx--col-xlg-5{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-5,.bx--grid--narrow .bx--col-xlg-5{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-6{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-6,.bx--grid--condensed .bx--col-xlg-6{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-6,.bx--grid--narrow .bx--col-xlg-6{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-7{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-7,.bx--grid--condensed .bx--col-xlg-7{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-7,.bx--grid--narrow .bx--col-xlg-7{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-8{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-8,.bx--grid--condensed .bx--col-xlg-8{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-8,.bx--grid--narrow .bx--col-xlg-8{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-9{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-9,.bx--grid--condensed .bx--col-xlg-9{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-9,.bx--grid--narrow .bx--col-xlg-9{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-10{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-10,.bx--grid--condensed .bx--col-xlg-10{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-10,.bx--grid--narrow .bx--col-xlg-10{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-11{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-11,.bx--grid--condensed .bx--col-xlg-11{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-11,.bx--grid--narrow .bx--col-xlg-11{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-12{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-12,.bx--grid--condensed .bx--col-xlg-12{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-12,.bx--grid--narrow .bx--col-xlg-12{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-13{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-13,.bx--grid--condensed .bx--col-xlg-13{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-13,.bx--grid--narrow .bx--col-xlg-13{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-14{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-14,.bx--grid--condensed .bx--col-xlg-14{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-14,.bx--grid--narrow .bx--col-xlg-14{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-15{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-15,.bx--grid--condensed .bx--col-xlg-15{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-15,.bx--grid--narrow .bx--col-xlg-15{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg-16{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg-16,.bx--grid--condensed .bx--col-xlg-16{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg-16,.bx--grid--narrow .bx--col-xlg-16{
  padding-right:1rem;
  padding-left:0
}

.bx--col-xlg,.bx--col-xlg--auto{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-xlg,.bx--grid--condensed .bx--col-xlg,.bx--row--condensed .bx--col-xlg--auto,.bx--grid--condensed .bx--col-xlg--auto{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-xlg,.bx--grid--narrow .bx--col-xlg,.bx--row--narrow .bx--col-xlg--auto,.bx--grid--narrow .bx--col-xlg--auto{
  padding-right:1rem;
  padding-left:0
}

@media(min-width: 82rem){
  .bx--col,.bx--col-xlg{
    max-width:100%;
    flex-basis:0;
    flex-grow:1
  }

  .bx--col--auto,.bx--col-xlg--auto{
    width:auto;
    max-width:100%;
    flex:1 0 0%
  }

  .bx--col-xlg-0{
    display:none
  }

  .bx--col-xlg-1{
    display:block;
    max-width:6.25%;
    flex:0 0 6.25%
  }

  .bx--col-xlg-2{
    display:block;
    max-width:12.5%;
    flex:0 0 12.5%
  }

  .bx--col-xlg-3{
    display:block;
    max-width:18.75%;
    flex:0 0 18.75%
  }

  .bx--col-xlg-4{
    display:block;
    max-width:25%;
    flex:0 0 25%
  }

  .bx--col-xlg-5{
    display:block;
    max-width:31.25%;
    flex:0 0 31.25%
  }

  .bx--col-xlg-6{
    display:block;
    max-width:37.5%;
    flex:0 0 37.5%
  }

  .bx--col-xlg-7{
    display:block;
    max-width:43.75%;
    flex:0 0 43.75%
  }

  .bx--col-xlg-8{
    display:block;
    max-width:50%;
    flex:0 0 50%
  }

  .bx--col-xlg-9{
    display:block;
    max-width:56.25%;
    flex:0 0 56.25%
  }

  .bx--col-xlg-10{
    display:block;
    max-width:62.5%;
    flex:0 0 62.5%
  }

  .bx--col-xlg-11{
    display:block;
    max-width:68.75%;
    flex:0 0 68.75%
  }

  .bx--col-xlg-12{
    display:block;
    max-width:75%;
    flex:0 0 75%
  }

  .bx--col-xlg-13{
    display:block;
    max-width:81.25%;
    flex:0 0 81.25%
  }

  .bx--col-xlg-14{
    display:block;
    max-width:87.5%;
    flex:0 0 87.5%
  }

  .bx--col-xlg-15{
    display:block;
    max-width:93.75%;
    flex:0 0 93.75%
  }

  .bx--col-xlg-16{
    display:block;
    max-width:100%;
    flex:0 0 100%
  }

  .bx--offset-xlg-0{
    margin-left:0
  }

  .bx--offset-xlg-1{
    margin-left:6.25%
  }

  .bx--offset-xlg-2{
    margin-left:12.5%
  }

  .bx--offset-xlg-3{
    margin-left:18.75%
  }

  .bx--offset-xlg-4{
    margin-left:25%
  }

  .bx--offset-xlg-5{
    margin-left:31.25%
  }

  .bx--offset-xlg-6{
    margin-left:37.5%
  }

  .bx--offset-xlg-7{
    margin-left:43.75%
  }

  .bx--offset-xlg-8{
    margin-left:50%
  }

  .bx--offset-xlg-9{
    margin-left:56.25%
  }

  .bx--offset-xlg-10{
    margin-left:62.5%
  }

  .bx--offset-xlg-11{
    margin-left:68.75%
  }

  .bx--offset-xlg-12{
    margin-left:75%
  }

  .bx--offset-xlg-13{
    margin-left:81.25%
  }

  .bx--offset-xlg-14{
    margin-left:87.5%
  }

  .bx--offset-xlg-15{
    margin-left:93.75%
  }
}

.bx--col-max-0{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-0,.bx--grid--condensed .bx--col-max-0{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-0,.bx--grid--narrow .bx--col-max-0{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-1{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-1,.bx--grid--condensed .bx--col-max-1{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-1,.bx--grid--narrow .bx--col-max-1{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-2{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-2,.bx--grid--condensed .bx--col-max-2{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-2,.bx--grid--narrow .bx--col-max-2{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-3{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-3,.bx--grid--condensed .bx--col-max-3{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-3,.bx--grid--narrow .bx--col-max-3{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-4{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-4,.bx--grid--condensed .bx--col-max-4{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-4,.bx--grid--narrow .bx--col-max-4{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-5{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-5,.bx--grid--condensed .bx--col-max-5{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-5,.bx--grid--narrow .bx--col-max-5{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-6{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-6,.bx--grid--condensed .bx--col-max-6{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-6,.bx--grid--narrow .bx--col-max-6{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-7{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-7,.bx--grid--condensed .bx--col-max-7{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-7,.bx--grid--narrow .bx--col-max-7{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-8{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-8,.bx--grid--condensed .bx--col-max-8{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-8,.bx--grid--narrow .bx--col-max-8{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-9{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-9,.bx--grid--condensed .bx--col-max-9{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-9,.bx--grid--narrow .bx--col-max-9{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-10{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-10,.bx--grid--condensed .bx--col-max-10{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-10,.bx--grid--narrow .bx--col-max-10{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-11{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-11,.bx--grid--condensed .bx--col-max-11{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-11,.bx--grid--narrow .bx--col-max-11{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-12{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-12,.bx--grid--condensed .bx--col-max-12{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-12,.bx--grid--narrow .bx--col-max-12{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-13{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-13,.bx--grid--condensed .bx--col-max-13{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-13,.bx--grid--narrow .bx--col-max-13{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-14{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-14,.bx--grid--condensed .bx--col-max-14{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-14,.bx--grid--narrow .bx--col-max-14{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-15{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-15,.bx--grid--condensed .bx--col-max-15{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-15,.bx--grid--narrow .bx--col-max-15{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max-16{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max-16,.bx--grid--condensed .bx--col-max-16{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max-16,.bx--grid--narrow .bx--col-max-16{
  padding-right:1rem;
  padding-left:0
}

.bx--col-max,.bx--col-max--auto{
  width:100%;
  padding-right:1rem;
  padding-left:1rem
}

.bx--row--condensed .bx--col-max,.bx--grid--condensed .bx--col-max,.bx--row--condensed .bx--col-max--auto,.bx--grid--condensed .bx--col-max--auto{
  padding-right:.03125rem;
  padding-left:.03125rem
}

.bx--row--narrow .bx--col-max,.bx--grid--narrow .bx--col-max,.bx--row--narrow .bx--col-max--auto,.bx--grid--narrow .bx--col-max--auto{
  padding-right:1rem;
  padding-left:0
}

@media(min-width: 99rem){
  .bx--col,.bx--col-max{
    max-width:100%;
    flex-basis:0;
    flex-grow:1
  }

  .bx--col--auto,.bx--col-max--auto{
    width:auto;
    max-width:100%;
    flex:1 0 0%
  }

  .bx--col-max-0{
    display:none
  }

  .bx--col-max-1{
    display:block;
    max-width:6.25%;
    flex:0 0 6.25%
  }

  .bx--col-max-2{
    display:block;
    max-width:12.5%;
    flex:0 0 12.5%
  }

  .bx--col-max-3{
    display:block;
    max-width:18.75%;
    flex:0 0 18.75%
  }

  .bx--col-max-4{
    display:block;
    max-width:25%;
    flex:0 0 25%
  }

  .bx--col-max-5{
    display:block;
    max-width:31.25%;
    flex:0 0 31.25%
  }

  .bx--col-max-6{
    display:block;
    max-width:37.5%;
    flex:0 0 37.5%
  }

  .bx--col-max-7{
    display:block;
    max-width:43.75%;
    flex:0 0 43.75%
  }

  .bx--col-max-8{
    display:block;
    max-width:50%;
    flex:0 0 50%
  }

  .bx--col-max-9{
    display:block;
    max-width:56.25%;
    flex:0 0 56.25%
  }

  .bx--col-max-10{
    display:block;
    max-width:62.5%;
    flex:0 0 62.5%
  }

  .bx--col-max-11{
    display:block;
    max-width:68.75%;
    flex:0 0 68.75%
  }

  .bx--col-max-12{
    display:block;
    max-width:75%;
    flex:0 0 75%
  }

  .bx--col-max-13{
    display:block;
    max-width:81.25%;
    flex:0 0 81.25%
  }

  .bx--col-max-14{
    display:block;
    max-width:87.5%;
    flex:0 0 87.5%
  }

  .bx--col-max-15{
    display:block;
    max-width:93.75%;
    flex:0 0 93.75%
  }

  .bx--col-max-16{
    display:block;
    max-width:100%;
    flex:0 0 100%
  }

  .bx--offset-max-0{
    margin-left:0
  }

  .bx--offset-max-1{
    margin-left:6.25%
  }

  .bx--offset-max-2{
    margin-left:12.5%
  }

  .bx--offset-max-3{
    margin-left:18.75%
  }

  .bx--offset-max-4{
    margin-left:25%
  }

  .bx--offset-max-5{
    margin-left:31.25%
  }

  .bx--offset-max-6{
    margin-left:37.5%
  }

  .bx--offset-max-7{
    margin-left:43.75%
  }

  .bx--offset-max-8{
    margin-left:50%
  }

  .bx--offset-max-9{
    margin-left:56.25%
  }

  .bx--offset-max-10{
    margin-left:62.5%
  }

  .bx--offset-max-11{
    margin-left:68.75%
  }

  .bx--offset-max-12{
    margin-left:75%
  }

  .bx--offset-max-13{
    margin-left:81.25%
  }

  .bx--offset-max-14{
    margin-left:87.5%
  }

  .bx--offset-max-15{
    margin-left:93.75%
  }
}

.bx--no-gutter,.bx--row.bx--no-gutter [class*=bx--col]{
  padding-right:0;
  padding-left:0
}

.bx--no-gutter--start,.bx--row.bx--no-gutter--start [class*=bx--col]{
  padding-left:0
}

.bx--no-gutter--end,.bx--row.bx--no-gutter--end [class*=bx--col]{
  padding-right:0
}

.bx--no-gutter--left,.bx--row.bx--no-gutter--left [class*=bx--col]{
  padding-left:0
}

.bx--no-gutter--right,.bx--row.bx--no-gutter--right [class*=bx--col]{
  padding-right:0
}

.bx--hang--start{
  padding-left:1rem
}

.bx--hang--end{
  padding-right:1rem
}

.bx--hang--left{
  padding-left:1rem
}

.bx--hang--right{
  padding-right:1rem
}

.bx--aspect-ratio{
  position:relative
}

.bx--aspect-ratio::before{
  width:1px;
  height:0;
  margin-left:-1px;
  content:"";
  float:left
}

.bx--aspect-ratio::after{
  display:table;
  clear:both;
  content:""
}

.bx--aspect-ratio--16x9::before{
  padding-top:56.25%
}

.bx--aspect-ratio--9x16::before{
  padding-top:177.7777777778%
}

.bx--aspect-ratio--2x1::before{
  padding-top:50%
}

.bx--aspect-ratio--1x2::before{
  padding-top:200%
}

.bx--aspect-ratio--4x3::before{
  padding-top:75%
}

.bx--aspect-ratio--3x4::before{
  padding-top:133.3333333333%
}

.bx--aspect-ratio--3x2::before{
  padding-top:66.6666666667%
}

.bx--aspect-ratio--2x3::before{
  padding-top:150%
}

.bx--aspect-ratio--1x1::before{
  padding-top:100%
}

.bx--aspect-ratio--object{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%
}

@-webkit-keyframes collapse-accordion{
  0%{
    height:100%;
    opacity:1;
    visibility:inherit
  }

  100%{
    height:0;
    opacity:0;
    visibility:hidden
  }
}

@keyframes collapse-accordion{
  0%{
    height:100%;
    opacity:1;
    visibility:inherit
  }

  100%{
    height:0;
    opacity:0;
    visibility:hidden
  }
}

@-webkit-keyframes expand-accordion{
  0%{
    height:0;
    opacity:0;
    visibility:hidden
  }

  100%{
    height:100%;
    opacity:1;
    visibility:inherit
  }
}

@keyframes expand-accordion{
  0%{
    height:0;
    opacity:0;
    visibility:hidden
  }

  100%{
    height:100%;
    opacity:1;
    visibility:inherit
  }
}

.bx--accordion{
  width:100%;
  list-style:none
}

.bx--accordion__item{
  overflow:visible;
  border-top:1px solid #e0e0e0;
  transition:all 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--accordion__item:last-child{
  border-bottom:1px solid #e0e0e0
}

.bx--accordion__heading{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  position:relative;
  display:flex;
  width:100%;
  min-height:2.5rem;
  flex-direction:row-reverse;
  align-items:flex-start;
  justify-content:flex-start;
  padding:.625rem 0;
  margin:0;
  color:#161616;
  cursor:pointer;
  transition:background-color cubic-bezier(0.2, 0, 0.38, 0.9) 110ms
}

.bx--accordion__heading::-moz-focus-inner{
  border:0
}

.bx--accordion__heading:hover::before,.bx--accordion__heading:focus::before{
  position:absolute;
  top:-1px;
  left:0;
  width:100%;
  height:calc(100% + 2px);
  content:""
}

.bx--accordion__heading:hover::before{
  background-color:#e5e5e5
}

.bx--accordion__heading:focus{
  outline:none
}

.bx--accordion__heading:focus::before{
  box-sizing:border-box;
  border:2px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--accordion__heading:focus::before{
    border-style:dotted
  }
}

.bx--accordion--xl .bx--accordion__heading,.bx--accordion--lg .bx--accordion__heading{
  min-height:3rem
}

.bx--accordion--sm .bx--accordion__heading{
  min-height:2rem;
  padding:.3125rem 0
}

.bx--accordion__heading[disabled]{
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--accordion__heading[disabled] .bx--accordion__arrow{
  fill:#c6c6c6
}

.bx--accordion__heading[disabled]:hover::before{
  background-color:transparent
}

.bx--accordion__item--disabled,.bx--accordion__item--disabled+.bx--accordion__item{
  border-top:1px solid #fff
}

li.bx--accordion__item--disabled:last-of-type{
  border-bottom:1px solid #fff
}

.bx--accordion__arrow{
  outline:2px solid transparent;
  outline-offset:-2px;
  width:1rem;
  height:1rem;
  flex:0 0 1rem;
  margin:2px 1rem 0 0;
  fill:#161616;
  transform:rotate(-270deg) /*rtl:ignore*/;
  transition:all 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--accordion__title{
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px;
  z-index:1;
  width:100%;
  margin:0 0 0 1rem;
  text-align:left
}

.bx--accordion__content{
  display:none;
  padding-right:1rem;
  padding-left:1rem;
  transition:padding cubic-bezier(0.2, 0, 0.38, 0.9) 110ms
}

@media(min-width: 480px){
  .bx--accordion__content{
    padding-right:3rem
  }
}

@media(min-width: 640px){
  .bx--accordion__content{
    padding-right:25%
  }
}

.bx--accordion__content>p{
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px
}

.bx--accordion--start .bx--accordion__heading{
  flex-direction:row
}

.bx--accordion--start .bx--accordion__arrow{
  margin:2px 0 0 1rem
}

.bx--accordion--start .bx--accordion__title{
  margin-right:1rem
}

.bx--accordion--start .bx--accordion__content{
  margin-left:2rem
}

.bx--accordion__item--collapsing .bx--accordion__content,.bx--accordion__item--expanding .bx--accordion__content{
  display:block
}

.bx--accordion__item--collapsing .bx--accordion__content{
  -webkit-animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) collapse-accordion;
  animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) collapse-accordion
}

.bx--accordion__item--expanding .bx--accordion__content{
  -webkit-animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) expand-accordion;
  animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) expand-accordion
}

.bx--accordion__item--active{
  overflow:visible
}

.bx--accordion__item--active .bx--accordion__content{
  display:block;
  padding-top:.5rem;
  padding-bottom:1.5rem;
  transition:padding-top cubic-bezier(0, 0, 0.38, 0.9) 110ms,padding-bottom cubic-bezier(0, 0, 0.38, 0.9) 110ms
}

.bx--accordion__item--active .bx--accordion__arrow{
  fill:#161616;
  transform:rotate(-90deg) /*rtl:ignore*/
}

.bx--accordion.bx--skeleton .bx--accordion__heading,.bx--accordion.bx--skeleton .bx--accordion__button{
  cursor:default
}

.bx--accordion.bx--skeleton .bx--accordion__arrow{
  cursor:default;
  fill:#161616;
  pointer-events:none
}

.bx--accordion.bx--skeleton .bx--accordion__arrow:hover,.bx--accordion.bx--skeleton .bx--accordion__arrow:focus,.bx--accordion.bx--skeleton .bx--accordion__arrow:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--accordion.bx--skeleton .bx--accordion__heading:hover::before{
  background-color:transparent
}

.bx--accordion--end.bx--skeleton .bx--accordion__arrow{
  margin-left:1rem
}

.bx--skeleton .bx--accordion__heading:focus .bx--accordion__arrow{
  border:none;
  cursor:default;
  outline:none
}

.bx--accordion__title.bx--skeleton__text{
  margin-bottom:0
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--accordion__arrow,.bx--accordion__item--active .bx--accordion__arrow{
    fill:ButtonText
  }
}

.bx--link{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:inline-flex;
  color:#0f62fe;
  outline:none;
  text-decoration:none;
  transition:color 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--link:hover{
  color:#0043ce;
  text-decoration:underline
}

.bx--link:active,.bx--link:active:visited,.bx--link:active:visited:hover{
  color:#161616;
  text-decoration:underline
}

.bx--link:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--link:focus{
    outline-style:dotted
  }
}

.bx--link:visited{
  color:#0f62fe
}

.bx--link:visited:hover{
  color:#0043ce
}

.bx--link--disabled,.bx--link--disabled:hover{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  color:#c6c6c6;
  cursor:not-allowed;
  font-weight:400;
  text-decoration:none
}

.bx--link.bx--link--visited:visited{
  color:#8a3ffc
}

.bx--link.bx--link--visited:visited:hover{
  color:#0043ce
}

.bx--link.bx--link--inline{
  text-decoration:underline
}

.bx--link.bx--link--inline:focus,.bx--link.bx--link--inline:visited{
  text-decoration:none
}

.bx--link--disabled.bx--link--inline{
  text-decoration:underline
}

.bx--link--sm{
  font-size:.75rem;
  line-height:1.33333;
  letter-spacing:.32px
}

.bx--link--lg{
  font-size:1rem;
  font-weight:400;
  line-height:1.375;
  letter-spacing:0
}

.bx--link__icon{
  display:inline-flex;
  align-self:center;
  margin-left:.5rem
}

.bx--breadcrumb{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:inline
}

@media(min-width: 42rem){
  .bx--breadcrumb{
    display:flex;
    flex-wrap:wrap
  }
}

.bx--breadcrumb-item{
  position:relative;
  display:flex;
  align-items:center;
  margin-right:.5rem
}

.bx--breadcrumb-item .bx--link:visited{
  color:#0f62fe
}

.bx--breadcrumb-item .bx--link:visited:hover{
  color:#0043ce
}

.bx--breadcrumb-item::after{
  margin-left:.5rem;
  color:#161616;
  content:"/"
}

.bx--breadcrumb--no-trailing-slash .bx--breadcrumb-item:last-child::after{
  content:""
}

.bx--breadcrumb-item:last-child,.bx--breadcrumb-item:last-child::after{
  margin-right:0
}

.bx--breadcrumb .bx--link{
  white-space:nowrap
}

.bx--breadcrumb-item [aria-current=page],.bx--breadcrumb-item.bx--breadcrumb-item--current .bx--link{
  color:#161616;
  cursor:auto
}

.bx--breadcrumb-item [aria-current=page]:hover,.bx--breadcrumb-item.bx--breadcrumb-item--current .bx--link:hover{
  text-decoration:none
}

.bx--breadcrumb-item .bx--overflow-menu{
  position:relative;
  width:1.25rem;
  height:1.125rem
}

.bx--breadcrumb-item .bx--overflow-menu:focus{
  outline:1px solid #0f62fe
}

.bx--breadcrumb-item .bx--overflow-menu:hover{
  background:transparent
}

.bx--breadcrumb-item .bx--overflow-menu::after{
  position:absolute;
  bottom:2px;
  width:.75rem;
  height:1px;
  background:#0043ce;
  content:"";
  opacity:0;
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--breadcrumb-item .bx--overflow-menu:hover::after{
  opacity:1
}

.bx--breadcrumb-item .bx--overflow-menu.bx--overflow-menu--open{
  background:transparent;
  box-shadow:none
}

.bx--breadcrumb-item .bx--overflow-menu__icon{
  position:relative;
  fill:#0f62fe;
  transform:translateY(4px)
}

.bx--breadcrumb-item .bx--overflow-menu:hover .bx--overflow-menu__icon{
  fill:#0043ce
}

.bx--breadcrumb-menu-options:focus{
  outline:none
}

.bx--breadcrumb-menu-options.bx--overflow-menu-options[data-floating-menu-direction=bottom]::after{
  top:-0.4375rem;
  left:.875rem;
  width:0;
  height:0;
  border-right:.4375rem solid transparent;
  border-bottom:.4375rem solid #fff;
  border-left:.4375rem solid transparent;
  margin:0 auto;
  background:transparent
}

.bx--breadcrumb.bx--skeleton .bx--link{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:6.25rem;
  height:1rem
}

.bx--breadcrumb.bx--skeleton .bx--link:hover,.bx--breadcrumb.bx--skeleton .bx--link:focus,.bx--breadcrumb.bx--skeleton .bx--link:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--breadcrumb.bx--skeleton .bx--link::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--breadcrumb.bx--skeleton .bx--link::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--btn{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  position:relative;
  display:inline-flex;
  max-width:20rem;
  min-height:3rem;
  flex-shrink:0;
  align-items:center;
  justify-content:space-between;
  padding:calc(.875rem - 3px) 63px calc(.875rem - 3px) 15px;
  margin:0;
  border-radius:0;
  cursor:pointer;
  outline:none;
  text-align:left;
  text-decoration:none;
  transition:background 70ms cubic-bezier(0, 0, 0.38, 0.9),box-shadow 70ms cubic-bezier(0, 0, 0.38, 0.9),border-color 70ms cubic-bezier(0, 0, 0.38, 0.9),outline 70ms cubic-bezier(0, 0, 0.38, 0.9);
  vertical-align:top
}

.bx--btn:disabled,.bx--btn:hover:disabled,.bx--btn:focus:disabled,.bx--btn.bx--btn--disabled,.bx--btn.bx--btn--disabled:hover,.bx--btn.bx--btn--disabled:focus{
  border-color:#c6c6c6;
  background:#c6c6c6;
  box-shadow:none;
  color:#8d8d8d;
  cursor:not-allowed
}

.bx--btn .bx--btn__icon{
  position:absolute;
  right:1rem;
  width:1rem;
  height:1rem;
  flex-shrink:0
}

.bx--btn::-moz-focus-inner{
  padding:0;
  border:0
}

.bx--btn--primary{
  border-width:1px;
  border-style:solid;
  border-color:transparent;
  background-color:#0f62fe;
  color:#fff
}

.bx--btn--primary:hover{
  background-color:#0353e9
}

.bx--btn--primary:focus{
  border-color:#0f62fe;
  box-shadow:inset 0 0 0 1px #0f62fe,inset 0 0 0 2px #f4f4f4
}

.bx--btn--primary:active{
  background-color:#002d9c
}

.bx--btn--primary .bx--btn__icon,.bx--btn--primary .bx--btn__icon path:not([data-icon-path]):not([fill=none]){
  fill:currentColor
}

.bx--btn--primary:hover{
  color:#fff
}

.bx--btn--secondary{
  border-width:1px;
  border-style:solid;
  border-color:transparent;
  background-color:#393939;
  color:#fff
}

.bx--btn--secondary:hover{
  background-color:#4c4c4c
}

.bx--btn--secondary:focus{
  border-color:#0f62fe;
  box-shadow:inset 0 0 0 1px #0f62fe,inset 0 0 0 2px #f4f4f4
}

.bx--btn--secondary:active{
  background-color:#6f6f6f
}

.bx--btn--secondary .bx--btn__icon,.bx--btn--secondary .bx--btn__icon path:not([data-icon-path]):not([fill=none]){
  fill:currentColor
}

.bx--btn--secondary:hover,.bx--btn--secondary:focus{
  color:#fff
}

.bx--btn--tertiary{
  border-width:1px;
  border-style:solid;
  border-color:#0f62fe;
  background-color:transparent;
  color:#0f62fe
}

.bx--btn--tertiary:hover{
  background-color:#0353e9
}

.bx--btn--tertiary:focus{
  border-color:#0f62fe;
  box-shadow:inset 0 0 0 1px #0f62fe,inset 0 0 0 2px #f4f4f4
}

.bx--btn--tertiary:active{
  background-color:#002d9c
}

.bx--btn--tertiary .bx--btn__icon,.bx--btn--tertiary .bx--btn__icon path:not([data-icon-path]):not([fill=none]){
  fill:currentColor
}

.bx--btn--tertiary:hover{
  color:#fff
}

.bx--btn--tertiary:focus{
  background-color:#0f62fe;
  color:#fff
}

.bx--btn--tertiary:active{
  border-color:transparent;
  background-color:#002d9c;
  color:#fff
}

.bx--btn--tertiary:disabled,.bx--btn--tertiary:hover:disabled,.bx--btn--tertiary:focus:disabled,.bx--btn--tertiary.bx--btn--disabled,.bx--btn--tertiary.bx--btn--disabled:hover,.bx--btn--tertiary.bx--btn--disabled:focus{
  background:transparent;
  color:#8d8d8d;
  outline:none
}

.bx--btn--ghost{
  border-width:1px;
  border-style:solid;
  border-color:transparent;
  background-color:transparent;
  color:#0f62fe;
  padding:calc(.875rem - 3px) 16px
}

.bx--btn--ghost:hover{
  background-color:#e5e5e5
}

.bx--btn--ghost:focus{
  border-color:#0f62fe;
  box-shadow:inset 0 0 0 1px #0f62fe,inset 0 0 0 2px #f4f4f4
}

.bx--btn--ghost:active{
  background-color:#c6c6c6
}

.bx--btn--ghost .bx--btn__icon,.bx--btn--ghost .bx--btn__icon path:not([data-icon-path]):not([fill=none]){
  fill:currentColor
}

.bx--btn--ghost .bx--btn__icon{
  position:static;
  margin-left:.5rem
}

.bx--btn--ghost:hover,.bx--btn--ghost:active{
  color:#0043ce
}

.bx--btn--ghost:active{
  background-color:#c6c6c6
}

.bx--btn--ghost:disabled,.bx--btn--ghost:hover:disabled,.bx--btn--ghost:focus:disabled,.bx--btn--ghost.bx--btn--disabled,.bx--btn--ghost.bx--btn--disabled:hover,.bx--btn--ghost.bx--btn--disabled:focus{
  border-color:transparent;
  background:transparent;
  color:#8d8d8d;
  outline:none
}

.bx--btn--ghost.bx--btn--sm{
  padding:calc(.375rem - 3px) 16px
}

.bx--btn--ghost.bx--btn--field,.bx--btn--ghost.bx--btn--md{
  padding:calc(.675rem - 3px) 16px
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:pointer
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus{
    outline-style:dotted
  }
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus{
  outline:1px solid transparent
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus svg{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus svg{
    outline-style:dotted
  }
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger::before,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger::after,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--btn.bx--btn--icon-only.bx--tooltip__trigger::before,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger::after,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger+.bx--assistive-text{
    display:inline-block
  }
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger::before,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--a11y::before,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--a11y::after{
  transition:none
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger::after,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--btn.bx--btn--icon-only.bx--tooltip__trigger::after,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--btn.bx--btn--icon-only.bx--tooltip__trigger::after,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--btn.bx--btn--icon-only.bx--tooltip__trigger::after,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--btn.bx--btn--icon-only.bx--tooltip__trigger::after,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger::after{
  content:attr(aria-label)
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--a11y::after{
  content:none
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--visible::before,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--visible::after,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:hover::before,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:hover::after,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus::before,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus::after{
  opacity:1
}

@-webkit-keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--visible .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--visible+.bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:hover .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:hover+.bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--visible .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--visible+.bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:hover .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:hover+.bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:hover.bx--tooltip--a11y::before,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus+.bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--hidden .bx--assistive-text,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger svg,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:hover svg,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus svg{
  fill:currentColor
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--btn--disabled.bx--tooltip--a11y::before,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--btn--disabled.bx--tooltip--a11y::after,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger.bx--btn--disabled .bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  opacity:0
}

.bx--btn.bx--btn--icon-only:not(.bx--tooltip--hidden) .bx--assistive-text{
  pointer-events:all
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus{
  border-color:#0f62fe
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:active:not([disabled]){
  border-color:transparent
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger:focus svg{
  outline-color:transparent
}

.bx--btn.bx--btn--icon-only.bx--tooltip__trigger[disabled]:hover,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger[disabled]:focus,.bx--btn.bx--btn--icon-only.bx--tooltip__trigger[disabled]:active{
  cursor:not-allowed;
  fill:#8d8d8d
}

.bx--tooltip__trigger.bx--btn--icon-only--top{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:pointer
}

.bx--tooltip__trigger.bx--btn--icon-only--top:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--top:focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--top:focus{
  outline:1px solid transparent
}

.bx--tooltip__trigger.bx--btn--icon-only--top:focus svg{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--top:focus svg{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--top::before,.bx--tooltip__trigger.bx--btn--icon-only--top::after,.bx--tooltip__trigger.bx--btn--icon-only--top .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--btn--icon-only--top::before,.bx--tooltip__trigger.bx--btn--icon-only--top::after,.bx--tooltip__trigger.bx--btn--icon-only--top .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top+.bx--assistive-text{
    display:inline-block
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--top::before,.bx--tooltip__trigger.bx--btn--icon-only--top::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--a11y::after{
  transition:none
}

.bx--tooltip__trigger.bx--btn--icon-only--top::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--tooltip__trigger.bx--btn--icon-only--top .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--tooltip__trigger.bx--btn--icon-only--top::after,.bx--tooltip__trigger.bx--btn--icon-only--top .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--btn--icon-only--top::after,.bx--tooltip__trigger.bx--btn--icon-only--top .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--tooltip__trigger.bx--btn--icon-only--top::after,.bx--tooltip__trigger.bx--btn--icon-only--top .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--tooltip__trigger.bx--btn--icon-only--top::after,.bx--tooltip__trigger.bx--btn--icon-only--top .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--top::after,.bx--tooltip__trigger.bx--btn--icon-only--top .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--top::after{
  content:attr(aria-label)
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--a11y::after{
  content:none
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--visible::before,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--visible::after,.bx--tooltip__trigger.bx--btn--icon-only--top:hover::before,.bx--tooltip__trigger.bx--btn--icon-only--top:hover::after,.bx--tooltip__trigger.bx--btn--icon-only--top:focus::before,.bx--tooltip__trigger.bx--btn--icon-only--top:focus::after{
  opacity:1
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top:hover .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top:focus .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--top:hover .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top:hover.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--top:focus .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top:focus+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--hidden .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--tooltip__trigger.bx--btn--icon-only--top .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--top::before,.bx--tooltip__trigger.bx--btn--icon-only--top::after,.bx--tooltip__trigger.bx--btn--icon-only--top .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--btn--icon-only--top::before{
  top:-0.5rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--top::after,.bx--tooltip__trigger.bx--btn--icon-only--top .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top+.bx--assistive-text{
  top:-0.8125rem;
  left:50%;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-start .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-start::before,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-start+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-start::before{
  top:-0.5rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-start+.bx--assistive-text{
  top:-0.8125rem;
  left:0;
  transform:translate(0, -100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-center .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-center::before,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-center+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-center::before{
  top:-0.5rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-center+.bx--assistive-text{
  top:-0.8125rem;
  left:50%;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-end .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-end::before,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-end+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-end::before{
  top:-0.5rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--top.bx--tooltip--align-end+.bx--assistive-text{
  top:-0.8125rem;
  right:0;
  left:auto;
  transform:translate(0, -100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--right{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:pointer
}

.bx--tooltip__trigger.bx--btn--icon-only--right:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--right:focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--right:focus{
  outline:1px solid transparent
}

.bx--tooltip__trigger.bx--btn--icon-only--right:focus svg{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--right:focus svg{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--right::before,.bx--tooltip__trigger.bx--btn--icon-only--right::after,.bx--tooltip__trigger.bx--btn--icon-only--right .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--btn--icon-only--right::before,.bx--tooltip__trigger.bx--btn--icon-only--right::after,.bx--tooltip__trigger.bx--btn--icon-only--right .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right+.bx--assistive-text{
    display:inline-block
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--right::before,.bx--tooltip__trigger.bx--btn--icon-only--right::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--a11y::after{
  transition:none
}

.bx--tooltip__trigger.bx--btn--icon-only--right::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--tooltip__trigger.bx--btn--icon-only--right .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--tooltip__trigger.bx--btn--icon-only--right::after,.bx--tooltip__trigger.bx--btn--icon-only--right .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--btn--icon-only--right::after,.bx--tooltip__trigger.bx--btn--icon-only--right .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--tooltip__trigger.bx--btn--icon-only--right::after,.bx--tooltip__trigger.bx--btn--icon-only--right .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--tooltip__trigger.bx--btn--icon-only--right::after,.bx--tooltip__trigger.bx--btn--icon-only--right .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--right::after,.bx--tooltip__trigger.bx--btn--icon-only--right .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--right::after{
  content:attr(aria-label)
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--a11y::after{
  content:none
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--visible::before,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--visible::after,.bx--tooltip__trigger.bx--btn--icon-only--right:hover::before,.bx--tooltip__trigger.bx--btn--icon-only--right:hover::after,.bx--tooltip__trigger.bx--btn--icon-only--right:focus::before,.bx--tooltip__trigger.bx--btn--icon-only--right:focus::after{
  opacity:1
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right:hover .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right:focus .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--right:hover .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right:hover.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--right:focus .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right:focus+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--hidden .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--tooltip__trigger.bx--btn--icon-only--right .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  left:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--right::before,.bx--tooltip__trigger.bx--btn--icon-only--right::after,.bx--tooltip__trigger.bx--btn--icon-only--right .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right+.bx--assistive-text{
  top:50%;
  right:0
}

.bx--tooltip__trigger.bx--btn--icon-only--right::before{
  right:-0.5rem;
  border-width:.25rem .3125rem .25rem 0;
  border-color:transparent #393939 transparent transparent;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--right::after,.bx--tooltip__trigger.bx--btn--icon-only--right .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right+.bx--assistive-text{
  right:-0.8125rem;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-start .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  left:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-start::before,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-start+.bx--assistive-text{
  top:50%;
  right:0
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-start::before{
  right:-0.5rem;
  border-width:.25rem .3125rem .25rem 0;
  border-color:transparent #393939 transparent transparent;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-start+.bx--assistive-text{
  right:-0.8125rem;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-center .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  left:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-center::before,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-center+.bx--assistive-text{
  top:50%;
  right:0
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-center::before{
  right:-0.5rem;
  border-width:.25rem .3125rem .25rem 0;
  border-color:transparent #393939 transparent transparent;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-center+.bx--assistive-text{
  right:-0.8125rem;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-end .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  left:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-end::before,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-end+.bx--assistive-text{
  top:50%;
  right:0
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-end::before{
  right:-0.5rem;
  border-width:.25rem .3125rem .25rem 0;
  border-color:transparent #393939 transparent transparent;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--right.bx--tooltip--align-end+.bx--assistive-text{
  right:-0.8125rem;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:pointer
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--bottom:focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom:focus{
  outline:1px solid transparent
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom:focus svg{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--bottom:focus svg{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--btn--icon-only--bottom::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom+.bx--assistive-text{
    display:inline-block
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--a11y::after{
  transition:none
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--btn--icon-only--bottom::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--tooltip__trigger.bx--btn--icon-only--bottom::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--tooltip__trigger.bx--btn--icon-only--bottom::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--bottom::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom::after{
  content:attr(aria-label)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--a11y::after{
  content:none
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--visible::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--visible::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom:hover::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom:hover::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom:focus::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom:focus::after{
  opacity:1
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom:hover .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom:focus .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom:hover .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom:hover.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom:focus .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom:focus+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--hidden .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom::before{
  bottom:-0.5rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom+.bx--assistive-text{
  bottom:-0.8125rem;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-start .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-start::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-start+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-start::before{
  bottom:-0.5rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-start+.bx--assistive-text{
  bottom:-0.8125rem;
  left:0;
  transform:translate(0, 100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-center .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-center::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-center+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-center::before{
  bottom:-0.5rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-center+.bx--assistive-text{
  bottom:-0.8125rem;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-end .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-end::before,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-end+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-end::before{
  bottom:-0.5rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--bottom.bx--tooltip--align-end+.bx--assistive-text{
  bottom:-0.8125rem;
  right:0;
  left:auto;
  transform:translate(0, 100%)
}

.bx--tooltip__trigger.bx--btn--icon-only--left{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:pointer
}

.bx--tooltip__trigger.bx--btn--icon-only--left:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--left:focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--left:focus{
  outline:1px solid transparent
}

.bx--tooltip__trigger.bx--btn--icon-only--left:focus svg{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--left:focus svg{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--left::before,.bx--tooltip__trigger.bx--btn--icon-only--left::after,.bx--tooltip__trigger.bx--btn--icon-only--left .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--btn--icon-only--left::before,.bx--tooltip__trigger.bx--btn--icon-only--left::after,.bx--tooltip__trigger.bx--btn--icon-only--left .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left+.bx--assistive-text{
    display:inline-block
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--left::before,.bx--tooltip__trigger.bx--btn--icon-only--left::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--a11y::after{
  transition:none
}

.bx--tooltip__trigger.bx--btn--icon-only--left::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--tooltip__trigger.bx--btn--icon-only--left .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--tooltip__trigger.bx--btn--icon-only--left::after,.bx--tooltip__trigger.bx--btn--icon-only--left .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--btn--icon-only--left::after,.bx--tooltip__trigger.bx--btn--icon-only--left .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--tooltip__trigger.bx--btn--icon-only--left::after,.bx--tooltip__trigger.bx--btn--icon-only--left .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--tooltip__trigger.bx--btn--icon-only--left::after,.bx--tooltip__trigger.bx--btn--icon-only--left .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--btn--icon-only--left::after,.bx--tooltip__trigger.bx--btn--icon-only--left .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--left::after{
  content:attr(aria-label)
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--a11y::after{
  content:none
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--visible::before,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--visible::after,.bx--tooltip__trigger.bx--btn--icon-only--left:hover::before,.bx--tooltip__trigger.bx--btn--icon-only--left:hover::after,.bx--tooltip__trigger.bx--btn--icon-only--left:focus::before,.bx--tooltip__trigger.bx--btn--icon-only--left:focus::after{
  opacity:1
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left:hover .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left:focus .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--left:hover .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left:hover.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--btn--icon-only--left:focus .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left:focus+.bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--hidden .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--tooltip__trigger.bx--btn--icon-only--left .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  right:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--left::before,.bx--tooltip__trigger.bx--btn--icon-only--left::after,.bx--tooltip__trigger.bx--btn--icon-only--left .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left+.bx--assistive-text{
  top:50%;
  left:0
}

.bx--tooltip__trigger.bx--btn--icon-only--left::before{
  left:-0.5rem;
  border-width:.25rem 0 .25rem .3125rem;
  border-color:transparent transparent transparent #393939;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--left::after,.bx--tooltip__trigger.bx--btn--icon-only--left .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left+.bx--assistive-text{
  left:-0.8125rem;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-start .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  right:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-start::before,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-start+.bx--assistive-text{
  top:50%;
  left:0
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-start::before{
  left:-0.5rem;
  border-width:.25rem 0 .25rem .3125rem;
  border-color:transparent transparent transparent #393939;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-start+.bx--assistive-text{
  left:-0.8125rem;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-center .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  right:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-center::before,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-center+.bx--assistive-text{
  top:50%;
  left:0
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-center::before{
  left:-0.5rem;
  border-width:.25rem 0 .25rem .3125rem;
  border-color:transparent transparent transparent #393939;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-center+.bx--assistive-text{
  left:-0.8125rem;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-end .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  right:-0.75rem
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-end::before,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-end+.bx--assistive-text{
  top:50%;
  left:0
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-end::before{
  left:-0.5rem;
  border-width:.25rem 0 .25rem .3125rem;
  border-color:transparent transparent transparent #393939;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--btn--icon-only--left.bx--tooltip--align-end+.bx--assistive-text{
  left:-0.8125rem;
  transform:translate(-100%, -50%)
}

.bx--btn--icon-only{
  padding-right:.9375rem;
  padding-left:.9375rem
}

.bx--btn--icon-only .bx--btn__icon{
  position:static
}

.bx--btn--icon-only.bx--btn--ghost .bx--btn__icon,.bx--btn--icon-only.bx--btn--danger--ghost .bx--btn__icon{
  margin:0
}

.bx--btn--icon-only.bx--btn--selected{
  background:#e0e0e0
}

.bx--btn path[data-icon-path=inner-path]{
  fill:none
}

.bx--btn--ghost.bx--btn--icon-only .bx--btn__icon path:not([data-icon-path]):not([fill=none]),.bx--btn--ghost.bx--btn--icon-only .bx--btn__icon{
  fill:#161616
}

.bx--btn--ghost.bx--btn--icon-only[disabled] .bx--btn__icon path:not([data-icon-path]):not([fill=none]),.bx--btn--ghost.bx--btn--icon-only[disabled] .bx--btn__icon,.bx--btn.bx--btn--icon-only.bx--btn--ghost[disabled]:hover .bx--btn__icon{
  fill:#8d8d8d
}

.bx--btn--ghost.bx--btn--icon-only[disabled]{
  cursor:not-allowed
}

.bx--btn--field.bx--btn--icon-only,.bx--btn--md.bx--btn--icon-only{
  padding-right:.6875rem;
  padding-left:.6875rem
}

.bx--btn--sm.bx--btn--icon-only{
  padding-right:.4375rem;
  padding-left:.4375rem
}

.bx--btn--danger{
  border-width:1px;
  border-style:solid;
  border-color:transparent;
  background-color:#da1e28;
  color:#fff
}

.bx--btn--danger:hover{
  background-color:#b81921
}

.bx--btn--danger:focus{
  border-color:#0f62fe;
  box-shadow:inset 0 0 0 1px #0f62fe,inset 0 0 0 2px #f4f4f4
}

.bx--btn--danger:active{
  background-color:#750e13
}

.bx--btn--danger .bx--btn__icon,.bx--btn--danger .bx--btn__icon path:not([data-icon-path]):not([fill=none]){
  fill:currentColor
}

.bx--btn--danger:hover{
  color:#fff
}

.bx--btn--danger-tertiary,.bx--btn--danger--tertiary{
  border-width:1px;
  border-style:solid;
  border-color:#da1e28;
  background-color:transparent;
  color:#da1e28
}

.bx--btn--danger-tertiary:hover,.bx--btn--danger--tertiary:hover{
  background-color:#b81921
}

.bx--btn--danger-tertiary:focus,.bx--btn--danger--tertiary:focus{
  border-color:#0f62fe;
  box-shadow:inset 0 0 0 1px #0f62fe,inset 0 0 0 2px #f4f4f4
}

.bx--btn--danger-tertiary:active,.bx--btn--danger--tertiary:active{
  background-color:#750e13
}

.bx--btn--danger-tertiary .bx--btn__icon,.bx--btn--danger-tertiary .bx--btn__icon path:not([data-icon-path]):not([fill=none]),.bx--btn--danger--tertiary .bx--btn__icon,.bx--btn--danger--tertiary .bx--btn__icon path:not([data-icon-path]):not([fill=none]){
  fill:currentColor
}

.bx--btn--danger-tertiary:hover,.bx--btn--danger--tertiary:hover{
  border-color:#b81921;
  color:#fff
}

.bx--btn--danger-tertiary:focus,.bx--btn--danger--tertiary:focus{
  background-color:#da1e28;
  color:#fff
}

.bx--btn--danger-tertiary:active,.bx--btn--danger--tertiary:active{
  border-color:#750e13;
  color:#fff
}

.bx--btn--danger-tertiary:disabled,.bx--btn--danger-tertiary:hover:disabled,.bx--btn--danger-tertiary:focus:disabled,.bx--btn--danger-tertiary.bx--btn--disabled,.bx--btn--danger-tertiary.bx--btn--disabled:hover,.bx--btn--danger-tertiary.bx--btn--disabled:focus,.bx--btn--danger--tertiary:disabled,.bx--btn--danger--tertiary:hover:disabled,.bx--btn--danger--tertiary:focus:disabled,.bx--btn--danger--tertiary.bx--btn--disabled,.bx--btn--danger--tertiary.bx--btn--disabled:hover,.bx--btn--danger--tertiary.bx--btn--disabled:focus{
  background:transparent;
  color:#8d8d8d;
  outline:none
}

.bx--btn--danger-ghost,.bx--btn--danger--ghost{
  border-width:1px;
  border-style:solid;
  border-color:transparent;
  background-color:transparent;
  color:#da1e28;
  padding:calc(.875rem - 3px) 16px
}

.bx--btn--danger-ghost:hover,.bx--btn--danger--ghost:hover{
  background-color:#b81921
}

.bx--btn--danger-ghost:focus,.bx--btn--danger--ghost:focus{
  border-color:#0f62fe;
  box-shadow:inset 0 0 0 1px #0f62fe,inset 0 0 0 2px #f4f4f4
}

.bx--btn--danger-ghost:active,.bx--btn--danger--ghost:active{
  background-color:#750e13
}

.bx--btn--danger-ghost .bx--btn__icon,.bx--btn--danger-ghost .bx--btn__icon path:not([data-icon-path]):not([fill=none]),.bx--btn--danger--ghost .bx--btn__icon,.bx--btn--danger--ghost .bx--btn__icon path:not([data-icon-path]):not([fill=none]){
  fill:currentColor
}

.bx--btn--danger-ghost .bx--btn__icon,.bx--btn--danger--ghost .bx--btn__icon{
  position:static;
  margin-left:.5rem
}

.bx--btn--danger-ghost:hover,.bx--btn--danger-ghost:active,.bx--btn--danger--ghost:hover,.bx--btn--danger--ghost:active{
  color:#fff
}

.bx--btn--danger-ghost:disabled,.bx--btn--danger-ghost:hover:disabled,.bx--btn--danger-ghost:focus:disabled,.bx--btn--danger-ghost.bx--btn--disabled,.bx--btn--danger-ghost.bx--btn--disabled:hover,.bx--btn--danger-ghost.bx--btn--disabled:focus,.bx--btn--danger--ghost:disabled,.bx--btn--danger--ghost:hover:disabled,.bx--btn--danger--ghost:focus:disabled,.bx--btn--danger--ghost.bx--btn--disabled,.bx--btn--danger--ghost.bx--btn--disabled:hover,.bx--btn--danger--ghost.bx--btn--disabled:focus{
  border-color:transparent;
  background:transparent;
  color:#c6c6c6;
  outline:none
}

.bx--btn--danger-ghost.bx--btn--sm,.bx--btn--danger--ghost.bx--btn--sm{
  padding:calc(.375rem - 3px) 16px
}

.bx--btn--danger-ghost.bx--btn--field,.bx--btn--danger-ghost.bx--btn--md,.bx--btn--danger--ghost.bx--btn--field,.bx--btn--danger--ghost.bx--btn--md{
  padding:calc(.675rem - 3px) 16px
}

.bx--btn--sm{
  min-height:2rem;
  padding:calc(.375rem - 3px) 60px calc(.375rem - 3px) 12px
}

.bx--btn--xl:not(.bx--btn--icon-only){
  align-items:baseline;
  padding-top:1rem;
  padding-right:4rem;
  padding-left:1rem;
  min-height:5rem
}

.bx--btn--lg:not(.bx--btn--icon-only){
  align-items:baseline;
  padding-top:1rem;
  padding-right:4rem;
  padding-left:1rem;
  min-height:4rem
}

.bx--btn--field,.bx--btn--md{
  min-height:2.5rem;
  padding:calc(.675rem - 3px) 60px calc(.675rem - 3px) 12px
}

.bx--btn--expressive{
  font-size:1rem;
  font-weight:400;
  line-height:1.375;
  letter-spacing:0;
  min-height:3rem
}

.bx--btn--icon-only.bx--btn--expressive{
  padding:12px 13px
}

.bx--btn.bx--btn--expressive .bx--btn__icon{
  width:1.25rem;
  height:1.25rem
}

.bx--btn-set .bx--btn.bx--btn--expressive{
  max-width:20rem
}

.bx--btn.bx--skeleton{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:9.375rem
}

.bx--btn.bx--skeleton:hover,.bx--btn.bx--skeleton:focus,.bx--btn.bx--skeleton:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--btn.bx--skeleton::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--btn.bx--skeleton::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--btn-set{
  display:flex
}

.bx--btn-set--stacked{
  flex-direction:column
}

.bx--btn-set .bx--btn{
  width:100%;
  max-width:12.25rem
}

.bx--btn-set .bx--btn:not(:focus){
  box-shadow:-0.0625rem 0 0 0 #e0e0e0
}

.bx--btn-set .bx--btn:first-of-type:not(:focus){
  box-shadow:inherit
}

.bx--btn-set .bx--btn:focus+.bx--btn{
  box-shadow:inherit
}

.bx--btn-set--stacked .bx--btn:not(:focus){
  box-shadow:0 -0.0625rem 0 0 #e0e0e0
}

.bx--btn-set--stacked .bx--btn:first-of-type:not(:focus){
  box-shadow:inherit
}

.bx--btn-set .bx--btn.bx--btn--disabled{
  box-shadow:-0.0625rem 0 0 0 #8d8d8d
}

.bx--btn-set .bx--btn.bx--btn--disabled:first-of-type{
  box-shadow:none
}

.bx--btn-set--stacked .bx--btn.bx--btn--disabled{
  box-shadow:0 -0.0625rem 0 0 #8d8d8d
}

.bx--btn-set--stacked .bx--btn.bx--btn--disabled:first-of-type{
  box-shadow:none
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--btn:focus{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--btn--ghost.bx--btn--icon-only .bx--btn__icon path:not([data-icon-path]):not([fill=none]),.bx--btn--ghost.bx--btn--icon-only .bx--btn__icon{
    fill:ButtonText
  }
}

.bx--fieldset{
  margin-bottom:2rem
}

.bx--fieldset--no-margin{
  margin-bottom:0
}

.bx--form-item{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:flex;
  flex:1 1 auto;
  flex-direction:column;
  align-items:flex-start
}

.bx--label{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  display:inline-block;
  margin-bottom:.5rem;
  color:#525252;
  font-weight:400;
  line-height:1rem;
  vertical-align:baseline
}

.bx--label .bx--tooltip__trigger{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px
}

.bx--label.bx--skeleton{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:4.6875rem;
  height:.875rem
}

.bx--label.bx--skeleton:hover,.bx--label.bx--skeleton:focus,.bx--label.bx--skeleton:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--label.bx--skeleton::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--label.bx--skeleton::before{
    -webkit-animation:none;
    animation:none
  }
}

input[type=number]{
  font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace
}

input[data-invalid]:not(:focus),.bx--number[data-invalid] input[type=number]:not(:focus),.bx--text-input__field-wrapper[data-invalid]>.bx--text-input--invalid:not(:focus),.bx--text-area__wrapper[data-invalid]>.bx--text-area--invalid:not(:focus),.bx--select-input__wrapper[data-invalid] .bx--select-input:not(:focus),.bx--list-box[data-invalid]:not(:focus),.bx--combo-box[data-invalid] .bx--text-input:not(:focus){
  outline:2px solid #da1e28;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  input[data-invalid]:not(:focus),.bx--number[data-invalid] input[type=number]:not(:focus),.bx--text-input__field-wrapper[data-invalid]>.bx--text-input--invalid:not(:focus),.bx--text-area__wrapper[data-invalid]>.bx--text-area--invalid:not(:focus),.bx--select-input__wrapper[data-invalid] .bx--select-input:not(:focus),.bx--list-box[data-invalid]:not(:focus),.bx--combo-box[data-invalid] .bx--text-input:not(:focus){
    outline-style:dotted
  }
}

input[data-invalid]~.bx--form-requirement,.bx--number[data-invalid] .bx--number__input-wrapper~.bx--form-requirement,.bx--number__input-wrapper--warning~.bx--form-requirement,.bx--date-picker-input__wrapper~.bx--form-requirement,.bx--date-picker-input__wrapper--warn~.bx--form-requirement,.bx--date-picker-input__wrapper--invalid~.bx--form-requirement,.bx--time-picker--invalid~.bx--form-requirement,.bx--text-input__field-wrapper[data-invalid]~.bx--form-requirement,.bx--text-input__field-wrapper--warning~.bx--form-requirement,.bx--text-input__field-wrapper--warning>.bx--text-input~.bx--form-requirement,.bx--text-area__wrapper[data-invalid]~.bx--form-requirement,.bx--select-input__wrapper[data-invalid]~.bx--form-requirement,.bx--select--warning .bx--select-input__wrapper~.bx--form-requirement,.bx--time-picker[data-invalid]~.bx--form-requirement,.bx--list-box[data-invalid]~.bx--form-requirement,.bx--list-box--warning~.bx--form-requirement{
  display:block;
  overflow:visible;
  max-height:12.5rem;
  font-weight:400
}

input[data-invalid]~.bx--form-requirement,.bx--number[data-invalid] .bx--number__input-wrapper~.bx--form-requirement,.bx--date-picker-input__wrapper~.bx--form-requirement,.bx--date-picker-input__wrapper--invalid~.bx--form-requirement,.bx--time-picker--invalid~.bx--form-requirement,.bx--text-input__field-wrapper[data-invalid]~.bx--form-requirement,.bx--text-area__wrapper[data-invalid]~.bx--form-requirement,.bx--select-input__wrapper[data-invalid]~.bx--form-requirement,.bx--time-picker[data-invalid]~.bx--form-requirement,.bx--list-box[data-invalid]~.bx--form-requirement{
  color:#da1e28
}

.bx--form--fluid .bx--text-input__field-wrapper[data-invalid],.bx--form--fluid .bx--text-input__field-wrapper--warning{
  display:block
}

.bx--form--fluid .bx--fieldset{
  margin:0
}

.bx--form--fluid input[data-invalid]{
  outline:none
}

.bx--form--fluid .bx--form-requirement{
  padding:.5rem 2.5rem .5rem 1rem;
  margin:0
}

input:not(output):not([data-invalid]):-moz-ui-invalid{
  box-shadow:none
}

.bx--form-requirement{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  display:none;
  overflow:hidden;
  max-height:0;
  margin:.25rem 0 0
}

.bx--select--inline .bx--form__helper-text{
  margin-top:0
}

.bx--form__helper-text{
  font-size:.75rem;
  line-height:1.33333;
  letter-spacing:.32px;
  z-index:0;
  width:100%;
  margin-top:.25rem;
  color:#525252;
  opacity:1
}

.bx--label--disabled,.bx--form__helper-text--disabled{
  color:#c6c6c6
}

fieldset[disabled] .bx--label,fieldset[disabled] .bx--form__helper-text{
  color:#c6c6c6
}

.bx--form-item.bx--checkbox-wrapper{
  position:relative;
  margin-bottom:.25rem
}

.bx--form-item.bx--checkbox-wrapper:first-of-type{
  margin-top:.1875rem
}

.bx--label+.bx--form-item.bx--checkbox-wrapper{
  margin-top:-0.125rem
}

.bx--form-item.bx--checkbox-wrapper:last-of-type{
  margin-bottom:.1875rem
}

.bx--checkbox{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap;
  top:1.25rem;
  left:.7rem
}

.bx--checkbox-label{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  position:relative;
  display:flex;
  min-height:1.5rem;
  padding-top:.1875rem;
  padding-left:1.25rem;
  cursor:pointer;
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none
}

.bx--checkbox-label-text{
  padding-left:.375rem
}

.bx--checkbox-label::before,.bx--checkbox-label::after{
  box-sizing:border-box
}

.bx--checkbox-label::before{
  position:absolute;
  top:.125rem;
  left:0;
  width:1rem;
  height:1rem;
  border:1px solid #161616;
  margin:.125rem .125rem .125rem .1875rem;
  background-color:transparent;
  border-radius:1px;
  content:""
}

.bx--checkbox-label::after{
  position:absolute;
  top:.5rem;
  left:.4375rem;
  width:.5625rem;
  height:.3125rem;
  border-bottom:2px solid #fff;
  border-left:2px solid #fff;
  margin-top:-0.1875rem /*rtl:0rem*/;
  background:none;
  content:"";
  transform:scale(0) rotate(-45deg);
  transform-origin:bottom right /*rtl:center*/
}

.bx--checkbox:checked+.bx--checkbox-label::before,.bx--checkbox:indeterminate+.bx--checkbox-label::before,.bx--checkbox-label[data-contained-checkbox-state=true]::before,.bx--checkbox-label[data-contained-checkbox-state=mixed]::before{
  border-width:1px;
  border-color:#161616;
  background-color:#161616
}

.bx--checkbox:checked+.bx--checkbox-label::after,.bx--checkbox-label[data-contained-checkbox-state=true]::after{
  transform:scale(1) rotate(-45deg) /*rtl:scale(1.2) rotate3d(.5, 1, 0, 158deg)*/
}

.bx--checkbox:indeterminate+.bx--checkbox-label::after,.bx--checkbox-label[data-contained-checkbox-state=mixed]::after{
  top:.6875rem;
  width:.5rem;
  border-bottom:2px solid #fff;
  border-left:0 solid #fff;
  transform:scale(1) rotate(0deg)
}

.bx--checkbox:focus+.bx--checkbox-label::before,.bx--checkbox-label__focus::before,.bx--checkbox:checked:focus+.bx--checkbox-label::before,.bx--checkbox-label[data-contained-checkbox-state=true].bx--checkbox-label__focus::before,.bx--checkbox:indeterminate:focus+.bx--checkbox-label::before,.bx--checkbox-label[data-contained-checkbox-state=mixed].bx--checkbox-label__focus::before{
  outline:2px solid #0f62fe;
  outline-offset:1px
}

.bx--checkbox:disabled+.bx--checkbox-label,.bx--checkbox-label[data-contained-checkbox-disabled=true]{
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--checkbox:disabled+.bx--checkbox-label::before,.bx--checkbox-label[data-contained-checkbox-disabled=true]::before{
  border-color:#c6c6c6
}

.bx--checkbox:checked:disabled+.bx--checkbox-label::before,.bx--checkbox:indeterminate:disabled+.bx--checkbox-label::before,.bx--checkbox-label[data-contained-checkbox-state=true][data-contained-checkbox-disabled=true]::before,.bx--checkbox-label[data-contained-checkbox-state=mixed][data-contained-checkbox-disabled=true]::before{
  background-color:#c6c6c6
}

.bx--checkbox-label-text.bx--skeleton{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:6.25rem;
  height:1rem;
  margin:.0625rem 0 0 .375rem
}

.bx--checkbox-label-text.bx--skeleton:hover,.bx--checkbox-label-text.bx--skeleton:focus,.bx--checkbox-label-text.bx--skeleton:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--checkbox-label-text.bx--skeleton::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--checkbox-label-text.bx--skeleton::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--checkbox--inline{
  position:relative
}

@-webkit-keyframes hide-feedback{
  0%{
    opacity:1;
    visibility:inherit
  }

  100%{
    opacity:0;
    visibility:hidden
  }
}

@keyframes hide-feedback{
  0%{
    opacity:1;
    visibility:inherit
  }

  100%{
    opacity:0;
    visibility:hidden
  }
}

@-webkit-keyframes show-feedback{
  0%{
    opacity:0;
    visibility:hidden
  }

  100%{
    opacity:1;
    visibility:inherit
  }
}

@keyframes show-feedback{
  0%{
    opacity:0;
    visibility:hidden
  }

  100%{
    opacity:1;
    visibility:inherit
  }
}

.bx--snippet--disabled,.bx--snippet--disabled .bx--btn.bx--snippet-btn--expand{
  background-color:#fff;
  color:#c6c6c6
}

.bx--snippet--disabled .bx--snippet-btn--expand:hover,.bx--snippet--disabled .bx--copy-btn:hover{
  background-color:#fff;
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--snippet--disabled .bx--snippet__icon,.bx--snippet--disabled .bx--snippet-btn--expand .bx--icon-chevron--down{
  fill:#c6c6c6
}

.bx--snippet code{
  font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace;
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px
}

.bx--snippet--inline{
  position:relative;
  display:inline;
  padding:0;
  border:2px solid transparent;
  background-color:#fff;
  border-radius:4px;
  color:#161616;
  cursor:pointer
}

.bx--snippet--inline:hover{
  background-color:#e0e0e0
}

.bx--snippet--inline:active{
  background-color:#c6c6c6
}

.bx--snippet--inline:focus{
  border:2px solid #0f62fe;
  outline:none
}

.bx--snippet--inline::before{
  position:absolute;
  z-index:6000;
  width:0;
  height:0;
  border-style:solid;
  content:"";
  display:none
}

.bx--snippet--inline .bx--copy-btn__feedback{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:none;
  overflow:visible;
  box-sizing:content-box;
  margin:auto;
  clip:auto
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--snippet--inline .bx--copy-btn__feedback{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--snippet--inline .bx--copy-btn__feedback{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--snippet--inline .bx--copy-btn__feedback{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--snippet--inline .bx--copy-btn__feedback{
    border:1px solid transparent
  }
}

.bx--snippet--inline .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--snippet--inline::before,.bx--snippet--inline::after,.bx--snippet--inline .bx--assistive-text,.bx--snippet--inline+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--snippet--inline::before{
  bottom:-0.5rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--snippet--inline::after,.bx--snippet--inline .bx--assistive-text,.bx--snippet--inline+.bx--assistive-text{
  bottom:-0.8125rem;
  transform:translate(-50%, 100%)
}

.bx--snippet--inline.bx--copy-btn--animating::before,.bx--snippet--inline.bx--copy-btn--animating .bx--copy-btn__feedback{
  display:block
}

.bx--snippet--inline.bx--copy-btn--animating.bx--copy-btn--fade-out::before,.bx--snippet--inline.bx--copy-btn--animating.bx--copy-btn--fade-out .bx--copy-btn__feedback{
  -webkit-animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) hide-feedback;
  animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) hide-feedback
}

.bx--snippet--inline.bx--copy-btn--animating.bx--copy-btn--fade-in::before,.bx--snippet--inline.bx--copy-btn--animating.bx--copy-btn--fade-in .bx--copy-btn__feedback{
  -webkit-animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) show-feedback;
  animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) show-feedback
}

.bx--snippet--inline code{
  padding:0 .5rem
}

.bx--snippet--inline.bx--snippet--no-copy{
  display:inline-block
}

.bx--snippet--inline.bx--snippet--no-copy:hover{
  background-color:#fff;
  cursor:auto
}

.bx--snippet--light.bx--snippet--inline.bx--snippet--no-copy:hover{
  background-color:#f4f4f4;
  cursor:auto
}

.bx--snippet--single{
  font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace;
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  position:relative;
  width:100%;
  max-width:48rem;
  background-color:#fff;
  display:flex;
  height:2.5rem;
  align-items:center;
  padding-right:2.5rem
}

.bx--snippet--single.bx--snippet--no-copy{
  padding:0
}

.bx--snippet--single.bx--snippet--no-copy::after{
  right:1rem
}

.bx--snippet--single .bx--snippet-container{
  position:relative;
  display:flex;
  height:100%;
  align-items:center;
  padding-left:1rem;
  overflow-x:auto
}

.bx--snippet--single .bx--snippet-container:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--snippet--single .bx--snippet-container:focus{
    outline-style:dotted
  }
}

.bx--snippet--single pre{
  font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace;
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  padding-right:.5rem
}

.bx--snippet--single pre,.bx--snippet--inline code{
  white-space:pre
}

.bx--snippet--multi{
  font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace;
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  position:relative;
  width:100%;
  max-width:48rem;
  background-color:#fff;
  display:flex;
  padding:1rem
}

.bx--snippet--multi .bx--snippet-container{
  position:relative;
  min-height:100%;
  max-height:100%;
  order:1;
  overflow-y:auto;
  transition:max-height 150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--snippet--multi.bx--snippet--expand .bx--snippet-container{
  padding-bottom:1rem;
  transition:max-height 150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--snippet--multi.bx--snippet--wraptext pre{
  white-space:pre-wrap;
  word-wrap:break-word
}

.bx--snippet--multi .bx--snippet-container pre{
  padding-right:2.5rem;
  padding-bottom:1.5rem;
  overflow-x:auto
}

.bx--snippet--multi.bx--snippet--no-copy .bx--snippet-container pre{
  padding-right:0
}

.bx--snippet--multi.bx--snippet--expand .bx--snippet-container pre{
  overflow-x:auto
}

.bx--snippet--multi .bx--snippet-container pre::after{
  position:absolute;
  top:0;
  right:0;
  width:1rem;
  height:100%;
  background-image:linear-gradient(to right, rgba(255, 255, 255, 0), #ffffff);
  content:""
}

.bx--snippet--multi .bx--snippet-container pre code{
  overflow:hidden
}

.bx--snippet__icon{
  width:1rem;
  height:1rem;
  fill:#161616;
  transition:all 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--snippet-button{
  position:absolute;
  top:0;
  right:0;
  display:flex;
  overflow:visible;
  width:2.5rem;
  height:2.5rem;
  align-items:center;
  justify-content:center;
  padding:0;
  border:none;
  background-color:#fff;
  cursor:pointer;
  outline:none
}

.bx--snippet-button:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  outline-color:#0f62fe
}

@media screen and (prefers-contrast){
  .bx--snippet-button:focus{
    outline-style:dotted
  }
}

.bx--snippet--multi .bx--snippet-button{
  top:.5rem;
  right:.5rem;
  width:2rem;
  height:2rem
}

.bx--snippet-button:hover{
  background:#e5e5e5
}

.bx--snippet-button:active{
  background-color:#c6c6c6
}

.bx--btn--copy__feedback{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;
  z-index:6000;
  top:.75rem;
  right:1.25rem;
  left:inherit;
  font-weight:400
}

.bx--btn--copy__feedback::before,.bx--btn--copy__feedback::after{
  background:#393939
}

.bx--btn--copy__feedback::after{
  border:none
}

.bx--snippet .bx--copy-btn{
  position:absolute;
  top:0;
  right:0;
  font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif
}

.bx--snippet-btn--expand{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;
  position:absolute;
  z-index:10;
  right:0;
  bottom:0;
  display:inline-flex;
  align-items:center;
  padding:.5rem 1rem;
  border:0;
  background-color:#fff;
  color:#161616
}

.bx--snippet-btn--expand .bx--snippet-btn--text{
  position:relative;
  top:-0.0625rem
}

.bx--snippet-btn--expand--hide.bx--snippet-btn--expand{
  display:none
}

.bx--snippet-btn--expand .bx--icon-chevron--down{
  margin-left:.5rem;
  fill:#161616;
  transform:rotate(0deg);
  transition:150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--snippet-btn--expand:hover{
  background:#e5e5e5;
  color:#161616
}

.bx--snippet-btn--expand:active{
  background-color:#c6c6c6
}

.bx--snippet-btn--expand:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  border-color:transparent
}

@media screen and (prefers-contrast){
  .bx--snippet-btn--expand:focus{
    outline-style:dotted
  }
}

.bx--snippet--expand .bx--snippet-btn--expand .bx--icon-chevron--down{
  transform:rotate(180deg);
  transition:transform 240ms
}

.bx--snippet--light,.bx--snippet--light .bx--snippet-button,.bx--snippet--light .bx--btn.bx--snippet-btn--expand,.bx--snippet--light .bx--copy-btn{
  background-color:#f4f4f4
}

.bx--snippet--light.bx--snippet--inline:hover,.bx--snippet--light .bx--snippet-button:hover,.bx--snippet--light .bx--btn.bx--snippet-btn--expand:hover,.bx--snippet--light .bx--copy-btn:hover{
  background-color:#e5e5e5
}

.bx--snippet--light.bx--snippet--inline:active,.bx--snippet--light .bx--snippet-button:active,.bx--snippet--light .bx--btn.bx--snippet-btn--expand:active,.bx--snippet--light .bx--copy-btn:active{
  background-color:#c6c6c6
}

.bx--snippet--light.bx--snippet--single::after,.bx--snippet--light.bx--snippet--multi .bx--snippet-container pre::after{
  background-image:linear-gradient(to right, rgba(244, 244, 244, 0), #f4f4f4)
}

.bx--snippet.bx--skeleton .bx--snippet-container{
  width:100%;
  height:100%
}

.bx--snippet-button .bx--btn--copy__feedback{
  top:3.175rem;
  right:auto;
  left:50%
}

.bx--snippet-button .bx--btn--copy__feedback::before{
  top:0
}

.bx--snippet-button .bx--btn--copy__feedback::after{
  top:-0.25rem
}

.bx--snippet--multi .bx--copy-btn{
  z-index:10;
  top:.5rem;
  right:.5rem;
  width:2rem;
  height:2rem
}

.bx--snippet--multi .bx--snippet-button .bx--btn--copy__feedback{
  top:2.675rem
}

.bx--snippet--inline .bx--btn--copy__feedback{
  top:calc(100% - 0.25rem);
  right:auto;
  left:50%
}

.bx--snippet__overflow-indicator--left,.bx--snippet__overflow-indicator--right{
  z-index:1;
  width:1rem;
  flex:1 0 auto
}

.bx--snippet__overflow-indicator--left{
  order:0;
  margin-right:-1rem;
  background-image:linear-gradient(to left, transparent, #ffffff)
}

.bx--snippet__overflow-indicator--right{
  order:2;
  margin-left:-1rem;
  background-image:linear-gradient(to right, transparent, #ffffff)
}

.bx--snippet--single .bx--snippet__overflow-indicator--right,.bx--snippet--single .bx--snippet__overflow-indicator--left{
  position:absolute;
  width:2rem;
  height:calc(100% - 0.25rem)
}

.bx--snippet--single .bx--snippet__overflow-indicator--right{
  right:2.5rem
}

.bx--snippet--single.bx--snippet--no-copy .bx--snippet__overflow-indicator--right{
  right:0
}

.bx--snippet--single .bx--snippet-container:focus~.bx--snippet__overflow-indicator--right{
  right:calc(2.5rem + 0.125rem)
}

.bx--snippet--single .bx--snippet-container:focus+.bx--snippet__overflow-indicator--left{
  left:.125rem
}

.bx--snippet--light .bx--snippet__overflow-indicator--left{
  background-image:linear-gradient(to left, transparent, #f4f4f4)
}

.bx--snippet--light .bx--snippet__overflow-indicator--right{
  background-image:linear-gradient(to right, transparent, #f4f4f4)
}

@media not all and (-webkit-min-device-pixel-ratio: 0), not all and (min-resolution: 0.001dpcm){
  @supports(-webkit-appearance: none) and (stroke-color: transparent){
    .bx--snippet__overflow-indicator--left{
      background-image:linear-gradient(to left, rgba(255, 255, 255, 0), #ffffff)
    }

    .bx--snippet__overflow-indicator--right{
      background-image:linear-gradient(to right, rgba(255, 255, 255, 0), #ffffff)
    }
  }
}

.bx--snippet--multi.bx--skeleton{
  height:6.125rem
}

.bx--snippet--single.bx--skeleton{
  height:3.5rem
}

.bx--snippet.bx--skeleton span{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  display:block;
  width:100%;
  height:1rem;
  margin-top:.5rem
}

.bx--snippet.bx--skeleton span:hover,.bx--snippet.bx--skeleton span:focus,.bx--snippet.bx--skeleton span:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--snippet.bx--skeleton span::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--snippet.bx--skeleton span::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--snippet.bx--skeleton span:first-child{
  margin:0
}

.bx--snippet.bx--skeleton span:nth-child(2){
  width:85%
}

.bx--snippet.bx--skeleton span:nth-child(3){
  width:95%
}

.bx--snippet--single.bx--skeleton .bx--snippet-container{
  padding-bottom:0
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--snippet__icon{
    fill:ButtonText
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--snippet--inline:focus{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--snippet--single,.bx--snippet--multi{
    outline:1px solid transparent
  }
}

.bx--list-box__wrapper--inline{
  display:inline-grid;
  align-items:center;
  grid-gap:.25rem;
  grid-template:auto auto/auto auto
}

.bx--list-box__wrapper--inline .bx--label{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

.bx--list-box__wrapper--inline .bx--label,.bx--list-box__wrapper--inline .bx--form__helper-text,.bx--list-box__wrapper--inline .bx--form-requirement{
  margin:0
}

.bx--list-box__wrapper--inline .bx--form__helper-text{
  max-width:none
}

.bx--list-box__wrapper--inline .bx--form-requirement{
  grid-column:2
}

.bx--list-box{
  position:relative;
  width:100%;
  height:2.5rem;
  max-height:2.5rem;
  border:none;
  border-bottom:1px solid #8d8d8d;
  background-color:#fff;
  color:#161616;
  cursor:pointer;
  transition:all 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--list-box:hover{
  background-color:#e5e5e5
}

.bx--list-box--xl,.bx--list-box--lg{
  height:3rem;
  max-height:3rem
}

.bx--list-box--sm{
  height:2rem;
  max-height:2rem
}

.bx--list-box--expanded{
  border-bottom-color:#e0e0e0
}

.bx--list-box--expanded:hover{
  background-color:#fff
}

.bx--list-box--expanded:hover.bx--list-box--light:hover{
  background-color:#f4f4f4
}

.bx--list-box .bx--text-input{
  min-width:0;
  height:100%
}

.bx--list-box__invalid-icon{
  position:absolute;
  top:50%;
  right:2.5rem;
  fill:#da1e28;
  transform:translateY(-50%)
}

.bx--list-box__invalid-icon--warning{
  fill:#f1c21b
}

.bx--list-box__invalid-icon--warning path[fill]{
  fill:#000;
  opacity:1
}

.bx--list-box[data-invalid] .bx--list-box__field,.bx--list-box.bx--list-box--warning .bx--list-box__field{
  padding-right:4rem;
  border-bottom:0
}

.bx--list-box[data-invalid].bx--list-box--inline .bx--list-box__field{
  padding-right:3.5rem
}

.bx--list-box--light{
  background-color:#f4f4f4
}

.bx--list-box--light:hover{
  background-color:#e5e5e5
}

.bx--list-box--light .bx--list-box__menu{
  background:#f4f4f4
}

.bx--list-box--light .bx--list-box__menu-item__option{
  border-top-color:#e0e0e0
}

.bx--list-box--light.bx--list-box--expanded{
  border-bottom-color:transparent
}

.bx--list-box--disabled:hover{
  background-color:#fff
}

.bx--list-box--light.bx--list-box--disabled{
  background-color:#f4f4f4
}

.bx--list-box--disabled,.bx--list-box--disabled .bx--list-box__field,.bx--list-box--disabled .bx--list-box__field:focus{
  border-bottom-color:transparent;
  outline:none
}

.bx--list-box--disabled .bx--list-box__label,.bx--list-box--disabled.bx--list-box--inline .bx--list-box__label{
  color:#c6c6c6
}

.bx--list-box--disabled .bx--list-box__menu-icon>svg,.bx--list-box--disabled .bx--list-box__selection>svg{
  fill:#c6c6c6
}

.bx--list-box--disabled,.bx--list-box--disabled .bx--list-box__field,.bx--list-box--disabled .bx--list-box__menu-icon{
  cursor:not-allowed
}

.bx--list-box--disabled .bx--list-box__menu-item,.bx--list-box--disabled .bx--list-box__menu-item:hover,.bx--list-box--disabled .bx--list-box__menu-item--highlighted{
  color:#c6c6c6;
  text-decoration:none
}

.bx--list-box--disabled .bx--list-box__selection:hover{
  cursor:not-allowed
}

.bx--list-box--disabled.bx--list-box[data-invalid] .bx--list-box__field{
  padding-right:3rem
}

.bx--list-box--disabled.bx--list-box[data-invalid].bx--list-box--inline .bx--list-box__field{
  padding-right:2rem
}

.bx--list-box.bx--list-box--inline{
  border-width:0;
  background-color:transparent
}

.bx--list-box.bx--list-box--inline:hover{
  background-color:#e5e5e5
}

.bx--list-box.bx--list-box--inline.bx--list-box--expanded{
  border-bottom-width:0
}

.bx--list-box.bx--list-box--inline.bx--list-box--expanded .bx--list-box__field[aria-expanded=true]{
  border-width:0
}

.bx--list-box.bx--list-box--inline.bx--list-box--disabled:hover{
  background-color:transparent
}

.bx--list-box.bx--list-box--inline.bx--list-box--expanded:hover{
  background-color:#f4f4f4
}

.bx--list-box.bx--list-box--inline .bx--list-box__field{
  padding:0 2rem 0 .5rem
}

.bx--list-box.bx--list-box--inline .bx--list-box__menu-icon{
  right:.5rem
}

.bx--list-box.bx--list-box--inline .bx--list-box__invalid-icon{
  right:2rem
}

.bx--list-box--inline .bx--list-box__label{
  color:#161616
}

.bx--list-box--inline .bx--list-box__field{
  height:100%
}

.bx--dropdown--inline .bx--list-box__field{
  max-width:30rem
}

.bx--dropdown--inline .bx--list-box__menu{
  min-width:18rem;
  max-width:30rem
}

.bx--list-box__field{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  position:relative;
  display:inline-flex;
  overflow:hidden;
  height:calc(100% + 1px);
  align-items:center;
  padding:0 3rem 0 1rem;
  cursor:pointer;
  outline:none;
  text-overflow:ellipsis;
  vertical-align:top;
  white-space:nowrap
}

.bx--list-box__field::-moz-focus-inner{
  border:0
}

.bx--list-box__field:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--list-box__field:focus{
    outline-style:dotted
  }
}

.bx--list-box__field[disabled]{
  color:#c6c6c6;
  outline:none
}

.bx--list-box__field .bx--text-input{
  padding-right:4.5rem
}

.bx--list-box[data-invalid] .bx--list-box__field .bx--text-input,.bx--list-box--warning .bx--list-box__field .bx--text-input{
  padding-right:6.125rem
}

.bx--list-box[data-invalid] .bx--list-box__field .bx--text-input+.bx--list-box__invalid-icon,.bx--list-box--warning .bx--list-box__field .bx--text-input+.bx--list-box__invalid-icon{
  right:4.125rem
}

.bx--list-box__field .bx--text-input--empty{
  padding-right:3rem
}

.bx--list-box[data-invalid] .bx--list-box__field .bx--text-input--empty,.bx--list-box--warning .bx--list-box__field .bx--text-input--empty{
  padding-right:4.5rem
}

.bx--list-box[data-invalid] .bx--list-box__field .bx--text-input--empty+.bx--list-box__invalid-icon,.bx--list-box--warning .bx--list-box__field .bx--text-input--empty+.bx--list-box__invalid-icon{
  right:2.5rem
}

.bx--list-box__label{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  overflow:hidden;
  color:#161616;
  text-overflow:ellipsis;
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none;
  white-space:nowrap
}

.bx--list-box__menu-icon{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  position:absolute;
  right:1rem;
  display:flex;
  width:1.5rem;
  height:1.5rem;
  align-items:center;
  justify-content:center;
  cursor:pointer;
  outline:none;
  transition:transform 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--list-box__menu-icon::-moz-focus-inner{
  border:0
}

.bx--list-box__menu-icon>svg{
  fill:#161616
}

.bx--list-box__menu-icon--open{
  width:1.5rem;
  justify-content:center;
  transform:rotate(180deg)
}

.bx--list-box__selection{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  position:absolute;
  top:50%;
  right:2.5rem;
  display:flex;
  width:1.5rem;
  height:1.5rem;
  align-items:center;
  justify-content:center;
  cursor:pointer;
  transform:translateY(-50%);
  transition:background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none
}

.bx--list-box__selection::-moz-focus-inner{
  border:0
}

.bx--list-box__selection:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--list-box__selection:focus{
    outline-style:dotted
  }
}

.bx--list-box__selection:focus:hover{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--list-box__selection:focus:hover{
    outline-style:dotted
  }
}

.bx--list-box__selection>svg{
  fill:#161616
}

.bx--list-box--disabled .bx--list-box__selection:focus{
  outline:none
}

.bx--list-box__selection--multi{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  position:static;
  top:auto;
  display:flex;
  width:auto;
  height:1.5rem;
  align-items:center;
  justify-content:space-between;
  padding:.5rem;
  padding-right:.125rem;
  margin-right:.625rem;
  background-color:#393939;
  border-radius:.75rem;
  color:#fff;
  line-height:0;
  transform:none
}

.bx--list-box__selection--multi>svg{
  width:1.25rem;
  height:1.25rem;
  padding:.125rem;
  margin-left:.25rem;
  fill:#fff
}

.bx--list-box__selection--multi>svg:hover{
  background-color:#4c4c4c;
  border-radius:50%
}

.bx--list-box--disabled .bx--list-box__selection--multi{
  background-color:#c6c6c6;
  color:#fff
}

.bx--list-box--disabled .bx--list-box__selection--multi.bx--tag--interactive:hover,.bx--list-box--disabled .bx--list-box__selection--multi .bx--tag__close-icon:hover{
  background-color:#c6c6c6
}

.bx--list-box--disabled .bx--list-box__selection--multi>svg{
  fill:#fff
}

.bx--list-box--disabled .bx--list-box__selection--multi>svg:hover{
  background-color:initial
}

.bx--list-box__selection--multi:hover{
  outline:none
}

.bx--list-box__menu{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  position:absolute;
  z-index:9100;
  right:0;
  left:0;
  width:100%;
  background-color:#fff;
  overflow-y:auto;
  transition:max-height 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--list-box__menu:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--list-box__menu:focus{
    outline-style:dotted
  }
}

.bx--list-box .bx--list-box__field[aria-expanded=false]+.bx--list-box__menu{
  max-height:0
}

.bx--list-box--expanded .bx--list-box__menu{
  max-height:13.75rem
}

.bx--list-box--expanded.bx--list-box--xl .bx--list-box__menu,.bx--list-box--expanded.bx--list-box--lg .bx--list-box__menu{
  max-height:16.5rem
}

.bx--list-box--expanded.bx--list-box--sm .bx--list-box__menu{
  max-height:11rem
}

.bx--list-box__menu-item{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  position:relative;
  height:2.5rem;
  color:#525252;
  cursor:pointer;
  transition:background 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none
}

.bx--list-box__menu-item:hover{
  background-color:#e5e5e5
}

.bx--list-box__menu-item:active{
  background-color:#e0e0e0
}

.bx--list-box--light .bx--list-box__menu-item:hover{
  background-color:#e5e5e5
}

.bx--list-box--sm .bx--list-box__menu-item{
  height:2rem
}

.bx--list-box--xl .bx--list-box__menu-item,.bx--list-box--lg .bx--list-box__menu-item{
  height:3rem
}

.bx--list-box--disabled .bx--list-box__menu-item:hover{
  background-color:transparent
}

.bx--list-box--light .bx--list-box__menu-item:active{
  background-color:#e0e0e0
}

.bx--list-box--disabled .bx--list-box__menu-item__option:hover{
  border-top-color:#e0e0e0
}

.bx--list-box__menu-item:first-of-type .bx--list-box__menu-item__option{
  border-top-color:transparent
}

.bx--list-box__menu-item:hover .bx--list-box__menu-item__option{
  color:#161616
}

.bx--list-box__menu-item:hover+.bx--list-box__menu-item .bx--list-box__menu-item__option{
  border-top-color:transparent
}

.bx--list-box--disabled .bx--list-box__menu-item:hover+.bx--list-box__menu-item .bx--list-box__menu-item__option{
  border-top-color:#e0e0e0
}

.bx--list-box__menu-item__option{
  outline:2px solid transparent;
  outline-offset:-2px;
  display:block;
  overflow:hidden;
  height:2.5rem;
  padding:.6875rem 0;
  padding-right:1.5rem;
  border-top:1px solid transparent;
  border-top-color:#e0e0e0;
  border-bottom:1px solid transparent;
  margin:0 1rem;
  color:#525252;
  font-weight:normal;
  line-height:1rem;
  text-decoration:none;
  text-overflow:ellipsis;
  transition:border-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),color 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  white-space:nowrap
}

.bx--list-box__menu-item__option:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  padding:.6875rem 1rem;
  border-color:transparent;
  margin:0
}

@media screen and (prefers-contrast){
  .bx--list-box__menu-item__option:focus{
    outline-style:dotted
  }
}

.bx--list-box__menu-item__option:hover{
  border-color:transparent;
  color:#161616
}

.bx--list-box--sm .bx--list-box__menu-item__option{
  height:2rem;
  padding-top:.4375rem;
  padding-bottom:.4375rem
}

.bx--list-box--xl .bx--list-box__menu-item__option,.bx--list-box--lg .bx--list-box__menu-item__option{
  height:3rem;
  padding-top:.9375rem;
  padding-bottom:.9375rem
}

.bx--list-box--disabled .bx--list-box__menu-item:hover .bx--list-box__menu-item__option,.bx--list-box--disabled .bx--list-box__menu-item__option{
  color:#c6c6c6
}

.bx--list-box__menu-item[disabled],.bx--list-box__menu-item[disabled] *,.bx--list-box__menu-item[disabled] .bx--list-box__menu-item__option,.bx--list-box__menu-item[disabled]:hover{
  color:#c6c6c6;
  cursor:not-allowed;
  outline:none
}

.bx--list-box__menu-item[disabled]:hover{
  background-color:revert
}

.bx--list-box__menu-item[disabled] .bx--checkbox-label::before{
  border-color:#c6c6c6
}

.bx--list-box__menu-item[disabled] .bx--list-box__menu-item__option{
  border-top-color:#e0e0e0
}

.bx--list-box__menu-item[disabled]:hover+.bx--list-box__menu-item .bx--list-box__menu-item__option{
  border-top-color:#e0e0e0
}

.bx--list-box.bx--list-box--inline .bx--list-box__menu-item__option{
  margin:0 .5rem
}

.bx--list-box.bx--list-box--inline .bx--list-box__menu-item__option:focus{
  padding-right:.5rem;
  padding-left:.5rem;
  margin:0
}

.bx--list-box__menu-item--highlighted{
  border-color:transparent;
  background-color:#e5e5e5;
  color:#161616
}

.bx--list-box__menu-item--highlighted .bx--list-box__menu-item__option,.bx--list-box__menu-item--highlighted+.bx--list-box__menu-item .bx--list-box__menu-item__option{
  border-top-color:transparent
}

.bx--list-box__menu-item--highlighted .bx--list-box__menu-item__option{
  color:#161616
}

.bx--list-box__menu-item--active{
  border-bottom-color:#e0e0e0;
  background-color:#e0e0e0;
  color:#161616
}

.bx--list-box--light .bx--list-box__menu-item--active{
  border-bottom-color:#e0e0e0;
  background-color:#e0e0e0
}

.bx--list-box__menu-item--active:hover,.bx--list-box__menu-item--active.bx--list-box__menu-item--highlighted{
  border-bottom-color:#cacaca;
  background-color:#cacaca
}

.bx--list-box__menu-item--active .bx--list-box__menu-item__option{
  color:#161616
}

.bx--list-box__menu-item--active+.bx--list-box__menu-item>.bx--list-box__menu-item__option{
  border-top-color:transparent
}

.bx--list-box__menu-item__selected-icon{
  position:absolute;
  top:50%;
  right:1rem;
  display:none;
  fill:#161616;
  transform:translateY(-50%)
}

.bx--list-box--inline .bx--list-box__menu-item__selected-icon{
  right:.5rem
}

.bx--list-box__menu-item--active .bx--list-box__menu-item__selected-icon{
  display:block
}

.bx--list-box__menu-item .bx--checkbox-label{
  width:100%
}

.bx--list-box__menu-item .bx--checkbox-label-text{
  overflow:hidden;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--list-box--up .bx--list-box__menu{
  bottom:2.5rem
}

.bx--list-box--up.bx--dropdown--sm .bx--list-box__menu,.bx--list-box--up.bx--list-box--sm .bx--list-box__menu,.bx--list-box--up .bx--list-box--sm .bx--list-box__menu{
  bottom:2rem
}

.bx--list-box--up.bx--dropdown--xl .bx--list-box__menu,.bx--list-box--up.bx--list-box--xl .bx--list-box__menu,.bx--list-box--up.bx--dropdown--lg .bx--list-box__menu,.bx--list-box--up.bx--list-box--lg .bx--list-box__menu,.bx--list-box--up .bx--list-box--lg .bx--list-box__menu{
  bottom:3rem
}

.bx--list-box input[role=combobox],.bx--list-box input[type=text]{
  min-width:0;
  background-color:inherit
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--list-box__field,.bx--list-box__menu,.bx--multi-select .bx--tag--filter{
    outline:1px solid transparent
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--list-box__field:focus,.bx--multi-select .bx--tag__close-icon:focus,.bx--list-box__menu-item--highlighted .bx--list-box__menu-item__option{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--list-box__menu-icon>svg,.bx--list-box__selection>svg,.bx--list-box__selection--multi>svg{
    fill:ButtonText
  }
}

.bx--combo-box:hover{
  background-color:#fff
}

.bx--combo-box.bx--list-box--light:hover{
  background-color:#f4f4f4
}

.bx--combo-box .bx--text-input::-ms-clear{
  display:none
}

.bx--combo-box.bx--list-box--expanded .bx--text-input{
  border-bottom-color:#e0e0e0
}

.bx--combo-box .bx--list-box__field,.bx--combo-box.bx--list-box[data-invalid] .bx--list-box__field,.bx--combo-box.bx--list-box--warning .bx--list-box__field,.bx--combo-box.bx--list-box--disabled.bx--list-box[data-invalid] .bx--list-box__field,.bx--combo-box.bx--list-box--disabled.bx--list-box--warning .bx--list-box__field{
  padding:0
}

.bx--content-switcher{
  display:flex;
  width:100%;
  height:2.5rem;
  justify-content:space-evenly
}

.bx--content-switcher--sm{
  height:2rem
}

.bx--content-switcher--xl,.bx--content-switcher--lg{
  height:3rem
}

.bx--content-switcher-btn{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  outline:2px solid transparent;
  outline-offset:-2px;
  position:relative;
  display:inline-flex;
  overflow:hidden;
  width:100%;
  align-items:center;
  padding:.5rem 1rem;
  border:none;
  border-top:.0625rem solid #161616;
  border-bottom:.0625rem solid #161616;
  margin:0;
  background-color:transparent;
  color:#525252;
  text-align:left;
  text-decoration:none;
  transition:all 150ms cubic-bezier(0.2, 0, 0.38, 0.9);
  white-space:nowrap
}

.bx--content-switcher-btn::after{
  position:absolute;
  top:0;
  left:0;
  display:block;
  width:100%;
  height:100%;
  background-color:#161616;
  content:"";
  transform:scaleY(0);
  transform-origin:bottom;
  transition:all 150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

@media(prefers-reduced-motion: reduce){
  .bx--content-switcher-btn::after{
    transition:none
  }
}

.bx--content-switcher-btn:disabled::after{
  display:none
}

.bx--content-switcher-btn:focus{
  z-index:3;
  border-color:#0f62fe;
  box-shadow:inset 0 0 0 2px #0f62fe,inset 0 0 0 3px #fff
}

.bx--content-switcher-btn:focus::after{
  -webkit-clip-path:inset(3px 3px 3px 3px);
  clip-path:inset(3px 3px 3px 3px)
}

.bx--content-switcher-btn:hover{
  color:#161616;
  cursor:pointer
}

.bx--content-switcher-btn:hover,.bx--content-switcher-btn:active{
  z-index:3;
  background-color:#e5e5e5;
  color:#161616
}

.bx--content-switcher-btn:disabled{
  border-color:#fff;
  background-color:transparent;
  color:#c6c6c6
}

.bx--content-switcher-btn:disabled:hover{
  cursor:not-allowed
}

.bx--content-switcher-btn:disabled:first-child,.bx--content-switcher-btn:disabled:last-child{
  border-color:#fff
}

.bx--content-switcher-btn:first-child{
  border-left:.0625rem solid #161616;
  border-bottom-left-radius:.25rem;
  border-top-left-radius:.25rem
}

.bx--content-switcher-btn:last-child{
  border-right:.0625rem solid #161616;
  border-bottom-right-radius:.25rem;
  border-top-right-radius:.25rem
}

.bx--content-switcher--selected,.bx--content-switcher--selected:first-child,.bx--content-switcher--selected:last-child{
  border:0
}

.bx--content-switcher-btn::before{
  position:absolute;
  z-index:2;
  left:0;
  display:block;
  width:.0625rem;
  height:1rem;
  background-color:#e0e0e0;
  content:""
}

.bx--content-switcher-btn:first-of-type::before{
  display:none
}

.bx--content-switcher-btn:focus::before,.bx--content-switcher-btn:focus+.bx--content-switcher-btn::before,.bx--content-switcher-btn:hover::before,.bx--content-switcher-btn:hover+.bx--content-switcher-btn::before,.bx--content-switcher--selected::before,.bx--content-switcher--selected+.bx--content-switcher-btn::before{
  background-color:transparent
}

.bx--content-switcher-btn:disabled::before,.bx--content-switcher-btn:disabled:hover+.bx--content-switcher-btn:disabled::before{
  background-color:#fff
}

.bx--content-switcher-btn.bx--content-switcher--selected:disabled+.bx--content-switcher-btn::before,.bx--content-switcher-btn.bx--content-switcher--selected:disabled:hover+.bx--content-switcher-btn::before{
  background-color:transparent
}

.bx--content-switcher__icon{
  fill:#525252;
  transition:fill 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--content-switcher__icon+span{
  margin-left:.5rem
}

.bx--content-switcher__label{
  z-index:1;
  overflow:hidden;
  max-width:100%;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--content-switcher-btn:hover .bx--content-switcher__icon,.bx--content-switcher-btn:focus .bx--content-switcher__icon{
  fill:#161616
}

.bx--content-switcher-btn.bx--content-switcher--selected{
  z-index:3;
  background-color:#161616;
  color:#fff
}

.bx--content-switcher-btn.bx--content-switcher--selected::after{
  transform:scaleY(1)
}

.bx--content-switcher-btn.bx--content-switcher--selected:disabled{
  background-color:#8d8d8d;
  color:#c6c6c6
}

.bx--content-switcher-btn.bx--content-switcher--selected .bx--content-switcher__icon{
  fill:#fff
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--content-switcher-btn:focus{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@keyframes hide-feedback{
  0%{
    opacity:1;
    visibility:inherit
  }

  100%{
    opacity:0;
    visibility:hidden
  }
}

@keyframes show-feedback{
  0%{
    opacity:0;
    visibility:hidden
  }

  100%{
    opacity:1;
    visibility:inherit
  }
}

.bx--btn--copy{
  position:relative;
  overflow:visible
}

.bx--btn--copy .bx--btn__icon{
  margin-left:.3125rem
}

.bx--btn--copy__feedback{
  position:absolute;
  top:1.2rem;
  left:50%;
  display:none
}

.bx--btn--copy__feedback::before{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  z-index:2;
  top:1.1rem;
  padding:.25rem;
  border-radius:4px;
  color:#fff;
  content:attr(data-feedback);
  font-weight:400;
  pointer-events:none;
  transform:translateX(-50%);
  white-space:nowrap
}

.bx--btn--copy__feedback::after{
  z-index:1;
  top:.85rem;
  left:-0.3rem;
  width:.6rem;
  height:.6rem;
  border-right:1px solid #393939;
  border-bottom:1px solid #393939;
  content:"";
  transform:rotate(-135deg)
}

.bx--btn--copy__feedback::before,.bx--btn--copy__feedback::after{
  position:absolute;
  display:block;
  background:#393939
}

.bx--btn--copy__feedback--displayed{
  display:inline-flex
}

.bx--copy-btn{
  position:relative;
  display:flex;
  width:2.5rem;
  height:2.5rem;
  align-items:center;
  justify-content:center;
  padding:0;
  border:none;
  background-color:#fff;
  cursor:pointer
}

.bx--copy-btn:hover{
  background-color:#e5e5e5
}

.bx--copy-btn:active{
  background-color:#c6c6c6
}

.bx--copy-btn::before{
  position:absolute;
  z-index:6000;
  width:0;
  height:0;
  border-style:solid;
  content:"";
  display:none
}

.bx--copy-btn .bx--copy-btn__feedback{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:none;
  overflow:visible;
  box-sizing:content-box;
  margin:auto;
  clip:auto
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--copy-btn .bx--copy-btn__feedback{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--copy-btn .bx--copy-btn__feedback{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--copy-btn .bx--copy-btn__feedback{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--copy-btn .bx--copy-btn__feedback{
    border:1px solid transparent
  }
}

.bx--copy-btn .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--copy-btn::before,.bx--copy-btn::after,.bx--copy-btn .bx--assistive-text,.bx--copy-btn+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--copy-btn::before{
  bottom:-0.5rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--copy-btn::after,.bx--copy-btn .bx--assistive-text,.bx--copy-btn+.bx--assistive-text{
  bottom:-0.8125rem;
  transform:translate(-50%, 100%)
}

.bx--copy-btn:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  outline-color:#0f62fe
}

@media screen and (prefers-contrast){
  .bx--copy-btn:focus{
    outline-style:dotted
  }
}

.bx--copy-btn.bx--copy-btn--animating::before,.bx--copy-btn.bx--copy-btn--animating .bx--copy-btn__feedback{
  display:block
}

.bx--copy-btn.bx--copy-btn--animating.bx--copy-btn--fade-out::before,.bx--copy-btn.bx--copy-btn--animating.bx--copy-btn--fade-out .bx--copy-btn__feedback{
  -webkit-animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) hide-feedback;
  animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) hide-feedback
}

.bx--copy-btn.bx--copy-btn--animating.bx--copy-btn--fade-in::before,.bx--copy-btn.bx--copy-btn--animating.bx--copy-btn--fade-in .bx--copy-btn__feedback{
  -webkit-animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) show-feedback;
  animation:110ms cubic-bezier(0.2, 0, 0.38, 0.9) show-feedback
}

.bx--copy{
  font-size:0
}

.bx--table-toolbar{
  position:relative;
  display:flex;
  width:100%;
  min-height:3rem;
  background-color:#fff
}

.bx--toolbar-content{
  display:flex;
  width:100%;
  height:3rem;
  justify-content:flex-end;
  transform:translate3d(0, 0, 0);
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9),-webkit-clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9),clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9),clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9),-webkit-clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--batch-actions~.bx--toolbar-content{
  -webkit-clip-path:polygon(0 0, 100% 0, 100% 100%, 0 100%);
  clip-path:polygon(0 0, 100% 0, 100% 100%, 0 100%)
}

.bx--toolbar-content .bx--search .bx--search-input{
  background-color:transparent
}

.bx--batch-actions~.bx--toolbar-search-container{
  display:flex;
  align-items:center;
  opacity:1;
  transition:opacity 110ms
}

.bx--toolbar-content .bx--toolbar-search-container-expandable{
  position:relative;
  width:3rem;
  height:3rem;
  box-shadow:none;
  cursor:pointer;
  transition:width 240ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 110ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--toolbar-content .bx--toolbar-search-container-expandable:hover{
  background-color:#e5e5e5
}

.bx--toolbar-search-container-expandable .bx--search-input{
  height:100%;
  cursor:pointer;
  opacity:0
}

.bx--toolbar-search-container-expandable:not(.bx--toolbar-search-container-active) .bx--search-input{
  padding:0
}

.bx--toolbar-search-container-expandable .bx--search-magnifier-icon{
  left:0;
  width:3rem;
  height:3rem;
  padding:1rem;
  fill:#161616
}

.bx--toolbar-search-container-expandable.bx--search--disabled .bx--search-magnifier-icon{
  background-color:#fff;
  cursor:not-allowed;
  transition:background-color none
}

.bx--toolbar-search-container-disabled .bx--search-input{
  cursor:not-allowed
}

.bx--toolbar-search-container-expandable.bx--search .bx--label{
  visibility:hidden
}

.bx--toolbar-search-container-expandable.bx--search .bx--search-close{
  width:3rem;
  height:3rem
}

.bx--toolbar-search-container-expandable.bx--search .bx--search-close::before{
  top:.125rem;
  height:calc(100% - 0.25rem);
  background-color:#e5e5e5
}

.bx--toolbar-search-container-expandable.bx--search .bx--search-close:focus::before{
  background-color:#0f62fe
}

.bx--toolbar-search-container-active.bx--search{
  width:100%
}

.bx--toolbar-search-container-active .bx--search-input{
  opacity:1
}

.bx--toolbar-search-container-active .bx--label,.bx--toolbar-search-container-active .bx--search-input{
  padding:0 3rem;
  cursor:text
}

.bx--toolbar-search-container-active .bx--search-input:focus+.bx--search-close{
  border:none;
  box-shadow:none;
  outline:none
}

.bx--toolbar-search-container-active .bx--search-input:not(:-moz-placeholder-shown){
  border:none;
  background-color:#e5e5e5
}

.bx--toolbar-search-container-active .bx--search-input:not(:-ms-input-placeholder){
  border:none;
  background-color:#e5e5e5
}

.bx--toolbar-search-container-active .bx--search-input:not(:placeholder-shown){
  border:none;
  background-color:#e5e5e5
}

.bx--toolbar-search-container-active .bx--search-magnifier-icon:focus,.bx--toolbar-search-container-active .bx--search-magnifier-icon:active,.bx--toolbar-search-container-active .bx--search-magnifier-icon:hover{
  border:none;
  background-color:transparent;
  outline:none
}

.bx--toolbar-search-container-persistent .bx--search-close,.bx--toolbar-search-container-persistent .bx--search-close:hover,.bx--toolbar-search-container-active .bx--search-close,.bx--toolbar-search-container-active .bx--search-close:hover{
  border:none;
  background-color:transparent
}

.bx--toolbar-search-container-persistent .bx--search-close::before{
  display:none
}

.bx--overflow-menu.bx--toolbar-action{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  display:flex;
  width:3rem;
  height:3rem;
  padding:1rem;
  cursor:pointer;
  transition:background 110ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--overflow-menu.bx--toolbar-action::-moz-focus-inner{
  border:0
}

.bx--toolbar-action{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  display:flex;
  width:3rem;
  height:3rem;
  cursor:pointer;
  transition:background 110ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--toolbar-action::-moz-focus-inner{
  border:0
}

.bx--toolbar-action:hover:not([disabled]){
  background-color:#e5e5e5
}

.bx--toolbar-action:hover[aria-expanded=true]{
  background-color:#fff
}

.bx--toolbar-action[disabled]{
  cursor:not-allowed
}

.bx--toolbar-action[disabled] .bx--toolbar-action__icon{
  cursor:not-allowed;
  fill:#c6c6c6
}

.bx--toolbar-action:focus:not([disabled]),.bx--toolbar-action:active:not([disabled]){
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--toolbar-action:focus:not([disabled]),.bx--toolbar-action:active:not([disabled]){
    outline-style:dotted
  }
}

.bx--toolbar-action:focus:not([disabled]).bx--toolbar-search-container-expandable,.bx--toolbar-action:active:not([disabled]).bx--toolbar-search-container-expandable{
  outline:none
}

.bx--toolbar-action~.bx--btn{
  max-width:none;
  margin:0;
  white-space:nowrap
}

.bx--overflow-menu--data-table{
  height:3rem
}

.bx--toolbar-action__icon{
  width:auto;
  max-width:1rem;
  height:1rem;
  fill:#161616
}

.bx--toolbar-search-container-persistent{
  position:relative;
  width:100%;
  height:3rem;
  opacity:1
}

.bx--toolbar-search-container-persistent+.bx--toolbar-content{
  position:relative;
  width:auto
}

.bx--toolbar-search-container-persistent .bx--search{
  position:initial
}

.bx--toolbar-search-container-persistent .bx--search-magnifier-icon{
  left:1rem
}

.bx--toolbar-search-container-persistent .bx--search-input{
  height:3rem;
  padding:0 3rem;
  border:none
}

.bx--toolbar-search-container-persistent .bx--search-input:focus:not([disabled]){
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--toolbar-search-container-persistent .bx--search-input:focus:not([disabled]){
    outline-style:dotted
  }
}

.bx--toolbar-search-container-persistent .bx--search-input:hover:not([disabled]){
  background-color:#e5e5e5
}

.bx--toolbar-search-container-persistent .bx--search-input:not(:-moz-placeholder-shown){
  background-color:#e5e5e5
}

.bx--toolbar-search-container-persistent .bx--search-input:not(:-ms-input-placeholder){
  background-color:#e5e5e5
}

.bx--toolbar-search-container-persistent .bx--search-input:active:not([disabled]),.bx--toolbar-search-container-persistent .bx--search-input:not(:placeholder-shown){
  background-color:#e5e5e5
}

.bx--toolbar-search-container-persistent .bx--search-close{
  width:3rem;
  height:3rem
}

.bx--batch-actions--active~.bx--toolbar-search-container,.bx--batch-actions--active~.bx--toolbar-content{
  -webkit-clip-path:polygon(0 0, 100% 0, 100% 0, 0 0);
  clip-path:polygon(0 0, 100% 0, 100% 0, 0 0);
  transform:translate3d(0, 48px, 0);
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9),-webkit-clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9),clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9),clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9),-webkit-clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--batch-actions{
  position:absolute;
  right:0;
  bottom:0;
  left:0;
  display:flex;
  align-items:center;
  justify-content:space-between;
  background-color:#0f62fe;
  -webkit-clip-path:polygon(0 0, 100% 0, 100% 0, 0 0);
  clip-path:polygon(0 0, 100% 0, 100% 0, 0 0);
  pointer-events:none;
  transform:translate3d(0, 48px, 0);
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9),opacity 110ms cubic-bezier(0.2, 0, 0.38, 0.9),-webkit-clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9),clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9),opacity 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9),clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9),opacity 110ms cubic-bezier(0.2, 0, 0.38, 0.9),-webkit-clip-path 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  will-change:transform
}

.bx--batch-actions:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--batch-actions:focus{
    outline-style:dotted
  }
}

.bx--batch-actions--active{
  overflow:auto hidden;
  -webkit-clip-path:polygon(0 0, 100% 0, 100% 100%, 0 100%);
  clip-path:polygon(0 0, 100% 0, 100% 100%, 0 100%);
  pointer-events:all;
  transform:translate3d(0, 0, 0)
}

.bx--action-list{
  display:flex;
  align-items:center
}

.bx--action-list .bx--btn{
  padding:calc(.875rem - 3px) 16px;
  color:#fff;
  white-space:nowrap
}

.bx--action-list .bx--btn:disabled{
  color:#8d8d8d
}

.bx--action-list .bx--btn .bx--btn__icon{
  position:static;
  margin-left:.5rem;
  fill:#fff
}

.bx--action-list .bx--btn .bx--btn__icon .st0{
  fill:none
}

.bx--batch-download{
  padding:.0625rem
}

.bx--action-list .bx--btn--primary:focus::before,.bx--action-list .bx--btn--primary::before,.bx--action-list .bx--btn--primary:focus::after,.bx--action-list .bx--btn--primary::after{
  display:none
}

.bx--action-list .bx--btn--primary:focus{
  outline:2px solid #fff;
  outline-offset:-0.125rem
}

.bx--action-list .bx--btn--primary:nth-child(3):hover+.bx--btn--primary.bx--batch-summary__cancel::before,.bx--action-list .bx--btn--primary:nth-child(3):focus+.bx--btn--primary.bx--batch-summary__cancel::before{
  opacity:0
}

.bx--btn--primary.bx--batch-summary__cancel::before{
  position:absolute;
  top:.9375rem;
  left:0;
  display:block;
  width:.0625rem;
  height:1rem;
  border:none;
  background-color:#fff;
  content:"";
  opacity:1;
  transition:opacity 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--btn--primary.bx--batch-summary__cancel:hover::before{
  opacity:0;
  transition:opacity 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--batch-summary{
  position:-webkit-sticky;
  position:sticky;
  z-index:100000;
  left:0;
  display:flex;
  min-height:3rem;
  align-items:center;
  padding:0 1rem;
  background-color:#0f62fe;
  color:#fff
}

.bx--batch-summary__scroll{
  box-shadow:.5px 0 .2px #0043ce
}

.bx--batch-summary__para{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

.bx--table-toolbar--small,.bx--table-toolbar--sm{
  height:2rem;
  min-height:2rem
}

.bx--table-toolbar--small .bx--toolbar-search-container-expandable,.bx--table-toolbar--small .bx--toolbar-search-container-persistent,.bx--table-toolbar--sm .bx--toolbar-search-container-expandable,.bx--table-toolbar--sm .bx--toolbar-search-container-persistent{
  height:2rem
}

.bx--table-toolbar--small .bx--toolbar-search-container-expandable .bx--search-input,.bx--table-toolbar--small .bx--toolbar-search-container-persistent .bx--search-input,.bx--table-toolbar--sm .bx--toolbar-search-container-expandable .bx--search-input,.bx--table-toolbar--sm .bx--toolbar-search-container-persistent .bx--search-input{
  height:2rem
}

.bx--table-toolbar--small .bx--toolbar-search-container-expandable .bx--search-close,.bx--table-toolbar--small .bx--toolbar-search-container-persistent .bx--search-close,.bx--table-toolbar--sm .bx--toolbar-search-container-expandable .bx--search-close,.bx--table-toolbar--sm .bx--toolbar-search-container-persistent .bx--search-close{
  width:2rem;
  height:2rem
}

.bx--table-toolbar--small .bx--toolbar-search-container-expandable .bx--search-magnifier-icon,.bx--table-toolbar--small .bx--toolbar-search-container-persistent .bx--search-magnifier-icon,.bx--table-toolbar--sm .bx--toolbar-search-container-expandable .bx--search-magnifier-icon,.bx--table-toolbar--sm .bx--toolbar-search-container-persistent .bx--search-magnifier-icon{
  width:2rem;
  height:2rem;
  padding:.5rem
}

.bx--table-toolbar--small .bx--toolbar-action.bx--toolbar-search-container-persistent,.bx--table-toolbar--sm .bx--toolbar-action.bx--toolbar-search-container-persistent{
  width:100%
}

.bx--table-toolbar--small .bx--toolbar-search-container-active .bx--search-magnifier-icon,.bx--table-toolbar--small .bx--toolbar-search-container-persistent .bx--search-magnifier-icon,.bx--table-toolbar--sm .bx--toolbar-search-container-active .bx--search-magnifier-icon,.bx--table-toolbar--sm .bx--toolbar-search-container-persistent .bx--search-magnifier-icon{
  left:.5rem
}

.bx--table-toolbar--small .bx--toolbar-search-container-expandable,.bx--table-toolbar--sm .bx--toolbar-search-container-expandable{
  width:2rem
}

.bx--table-toolbar--small .bx--toolbar-search-container-expandable .bx--search .bx--search-input,.bx--table-toolbar--sm .bx--toolbar-search-container-expandable .bx--search .bx--search-input{
  padding:0 3rem
}

.bx--table-toolbar--small .bx--toolbar-search-container-active,.bx--table-toolbar--sm .bx--toolbar-search-container-active{
  flex:auto;
  transition:flex 175ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--table-toolbar--small .bx--toolbar-search-container-active .bx--search-input,.bx--table-toolbar--sm .bx--toolbar-search-container-active .bx--search-input{
  visibility:inherit
}

.bx--table-toolbar--small .bx--toolbar-search-container-active .bx--search-input:focus,.bx--table-toolbar--sm .bx--toolbar-search-container-active .bx--search-input:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  background-color:#e5e5e5
}

@media screen and (prefers-contrast){
  .bx--table-toolbar--small .bx--toolbar-search-container-active .bx--search-input:focus,.bx--table-toolbar--sm .bx--toolbar-search-container-active .bx--search-input:focus{
    outline-style:dotted
  }
}

.bx--table-toolbar--small .bx--toolbar-search-container-active .bx--search-input:not(:-moz-placeholder-shown), .bx--table-toolbar--sm .bx--toolbar-search-container-active .bx--search-input:not(:-moz-placeholder-shown){
  background-color:#e5e5e5
}

.bx--table-toolbar--small .bx--toolbar-search-container-active .bx--search-input:not(:-ms-input-placeholder), .bx--table-toolbar--sm .bx--toolbar-search-container-active .bx--search-input:not(:-ms-input-placeholder){
  background-color:#e5e5e5
}

.bx--table-toolbar--small .bx--toolbar-search-container-active .bx--search-input:active,.bx--table-toolbar--small .bx--toolbar-search-container-active .bx--search-input:not(:placeholder-shown),.bx--table-toolbar--sm .bx--toolbar-search-container-active .bx--search-input:active,.bx--table-toolbar--sm .bx--toolbar-search-container-active .bx--search-input:not(:placeholder-shown){
  background-color:#e5e5e5
}

.bx--table-toolbar--small .bx--toolbar-search-container-active .bx--search-magnifier-icon:focus,.bx--table-toolbar--small .bx--toolbar-search-container-active .bx--search-magnifier-icon:active,.bx--table-toolbar--small .bx--toolbar-search-container-active .bx--search-magnifier-icon:hover,.bx--table-toolbar--sm .bx--toolbar-search-container-active .bx--search-magnifier-icon:focus,.bx--table-toolbar--sm .bx--toolbar-search-container-active .bx--search-magnifier-icon:active,.bx--table-toolbar--sm .bx--toolbar-search-container-active .bx--search-magnifier-icon:hover{
  outline:2px solid transparent;
  outline-offset:-2px;
  background-color:transparent
}

.bx--table-toolbar--small .bx--overflow-menu.bx--toolbar-action,.bx--table-toolbar--sm .bx--overflow-menu.bx--toolbar-action{
  width:2rem;
  min-width:2rem;
  height:2rem
}

.bx--table-toolbar--small .bx--toolbar-content,.bx--table-toolbar--sm .bx--toolbar-content{
  height:2rem
}

.bx--search--disabled .bx--search-magnifier-icon:hover{
  background-color:transparent
}

.bx--table-toolbar--small .bx--batch-actions .bx--action-list,.bx--table-toolbar--sm .bx--batch-actions .bx--action-list{
  height:2rem
}

.bx--table-toolbar--small .bx--toolbar-action,.bx--table-toolbar--sm .bx--toolbar-action{
  width:2rem;
  height:2rem;
  padding:.5rem 0
}

.bx--table-toolbar--small .bx--btn--primary,.bx--table-toolbar--sm .bx--btn--primary{
  height:2rem;
  min-height:auto;
  padding-top:calc(.375rem - 3px);
  padding-bottom:calc(.375rem - 3px)
}

.bx--table-toolbar--small .bx--btn--primary.bx--batch-summary__cancel::before,.bx--table-toolbar--sm .bx--btn--primary.bx--batch-summary__cancel::before{
  top:.5rem
}

.bx--table-toolbar--small .bx--toolbar-action~.bx--btn,.bx--table-toolbar--sm .bx--toolbar-action~.bx--btn{
  overflow:hidden;
  height:2rem
}

.bx--table-toolbar--small .bx--batch-summary,.bx--table-toolbar--sm .bx--batch-summary{
  min-height:2rem
}

.bx--data-table-container{
  position:relative;
  padding-top:.125rem
}

.bx--data-table-content{
  overflow-x:auto
}

.bx--data-table-header{
  padding:1rem 0 1.5rem 1rem;
  background:#fff
}

.bx--data-table-header__title{
  font-size:1.25rem;
  font-weight:400;
  line-height:1.4;
  letter-spacing:0;
  color:#161616
}

.bx--data-table-header__description{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  color:#525252
}

.bx--data-table{
  width:100%;
  border-collapse:collapse;
  border-spacing:0
}

.bx--data-table thead{
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  background-color:#e0e0e0
}

.bx--data-table tbody{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  width:100%;
  background-color:#fff
}

.bx--data-table tr{
  width:100%;
  height:3rem;
  border:none
}

.bx--data-table tbody tr,.bx--data-table tbody tr td,.bx--data-table tbody tr th{
  transition:background-color 70ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--data-table tbody tr:hover{
  background:#e5e5e5
}

.bx--data-table tbody tr:hover td,.bx--data-table tbody tr:hover th{
  border-top:1px solid #e5e5e5;
  border-bottom:1px solid #e5e5e5;
  background:#e5e5e5;
  color:#161616
}

.bx--data-table tbody tr:hover td .bx--link,.bx--data-table tbody tr:hover th .bx--link{
  color:#0043ce
}

.bx--data-table tbody tr:hover td .bx--link--disabled,.bx--data-table tbody tr:hover th .bx--link--disabled{
  color:#c6c6c6
}

.bx--data-table th,.bx--data-table td{
  text-align:left;
  vertical-align:middle
}

.bx--data-table th[align=right],.bx--data-table td[align=right]{
  text-align:right
}

.bx--data-table th[align=center],.bx--data-table td[align=center]{
  text-align:center
}

.bx--data-table th{
  padding-right:1rem;
  padding-left:1rem;
  background-color:#e0e0e0;
  color:#161616
}

.bx--data-table th:last-of-type{
  position:static;
  width:auto
}

.bx--data-table td,.bx--data-table tbody th{
  padding-right:1rem;
  padding-left:1rem;
  border-top:1px solid #fff;
  border-bottom:1px solid #e0e0e0;
  background:#fff;
  color:#525252
}

.bx--data-table td+td:first-of-type,.bx--data-table tbody th+td:first-of-type{
  padding-left:.75rem
}

@supports(-moz-appearance: none){
  .bx--data-table td{
    background-clip:padding-box
  }
}

.bx--data-table .bx--list-box input[role=combobox],.bx--data-table .bx--list-box input[type=text],.bx--data-table .bx--dropdown,.bx--data-table .bx--list-box,.bx--data-table .bx--number input[type=number],.bx--data-table .bx--number__control-btn::before,.bx--data-table .bx--number__control-btn::after,.bx--data-table .bx--text-input,.bx--data-table .bx--select-input{
  background-color:#f4f4f4
}

.bx--data-table td.bx--table-column-menu .bx--overflow-menu[aria-expanded=false]:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--data-table td.bx--table-column-menu .bx--overflow-menu[aria-expanded=false]:focus{
    outline-style:dotted
  }
}

.bx--data-table td.bx--table-column-menu .bx--overflow-menu[aria-expanded=true]:focus{
  outline:none
}

@media screen and (hover: hover),(-ms-high-contrast: active),(-ms-high-contrast: none){
  .bx--data-table td.bx--table-column-menu .bx--overflow-menu .bx--overflow-menu__icon{
    opacity:0
  }
}

.bx--data-table td.bx--table-column-menu .bx--overflow-menu.bx--overflow-menu--open .bx--overflow-menu__icon{
  opacity:1
}

.bx--data-table.bx--data-table--visible-overflow-menu td.bx--table-column-menu .bx--overflow-menu .bx--overflow-menu__icon,.bx--data-table td.bx--table-column-menu .bx--overflow-menu:hover .bx--overflow-menu__icon,.bx--data-table td.bx--table-column-menu .bx--overflow-menu:focus .bx--overflow-menu__icon,.bx--data-table tr:hover td.bx--table-column-menu .bx--overflow-menu .bx--overflow-menu__icon{
  opacity:1
}

.bx--table-row--menu-option .bx--overflow-menu-options__btn .bx--overflow-menu-options__option-content svg{
  position:relative;
  top:.1875rem;
  margin-right:.5rem
}

.bx--data-table .bx--overflow-menu:hover,.bx--data-table .bx--overflow-menu__trigger:hover{
  background-color:#cacaca
}

.bx--data-table--selected .bx--overflow-menu:hover,.bx--data-table--selected .bx--overflow-menu__trigger:hover{
  background-color:#e5e5e5
}

.bx--data-table--selected .bx--link{
  color:#0043ce
}

.bx--data-table--compact td.bx--table-column-menu,.bx--data-table--xs td.bx--table-column-menu,.bx--data-table--short td.bx--table-column-menu,.bx--data-table--sm td.bx--table-column-menu{
  height:1.5rem;
  padding-top:0;
  padding-bottom:0
}

.bx--data-table--short td.bx--table-column-menu,.bx--data-table--sm td.bx--table-column-menu{
  height:2rem
}

.bx--data-table--md td.bx--table-column-menu{
  height:2.5rem
}

.bx--data-table--tall .bx--table-column-menu,.bx--data-table--xl .bx--table-column-menu{
  padding-top:.5rem
}

.bx--data-table--zebra tbody tr:not(.bx--parent-row):nth-child(odd) td{
  border-bottom:1px solid #fff
}

.bx--data-table--zebra tbody tr:not(.bx--parent-row):nth-child(even) td{
  border-top:1px solid #f4f4f4;
  border-bottom:1px solid #f4f4f4;
  background-color:#f4f4f4
}

.bx--data-table--zebra tbody tr:not(.bx--parent-row):hover td{
  border-top:1px solid #e5e5e5;
  border-bottom:1px solid #e5e5e5;
  background-color:#e5e5e5
}

.bx--table-column-checkbox .bx--checkbox-label{
  padding-left:0
}

.bx--data-table th.bx--table-column-checkbox{
  position:static;
  width:2rem;
  background:#e0e0e0;
  transition:background-color 70ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--data-table .bx--table-column-checkbox .bx--checkbox:focus+.bx--checkbox-label::before{
  outline-offset:.375rem
}

.bx--data-table--compact .bx--table-column-checkbox .bx--checkbox:focus+.bx--checkbox-label::before,.bx--data-table--xs .bx--table-column-checkbox .bx--checkbox:focus+.bx--checkbox-label::before{
  outline-offset:.125rem
}

.bx--data-table thead th.bx--table-column-checkbox,.bx--data-table tbody td.bx--table-column-checkbox,.bx--data-table thead th.bx--table-expand,.bx--data-table tbody td.bx--table-expand{
  min-width:0
}

.bx--data-table thead th.bx--table-column-checkbox,.bx--data-table tbody td.bx--table-column-checkbox{
  width:2.5rem;
  padding-right:.25rem;
  padding-left:1rem
}

.bx--data-table thead th.bx--table-expand,.bx--data-table tbody td.bx--table-expand{
  width:2rem;
  height:2rem
}

.bx--data-table--compact thead th.bx--table-expand,.bx--data-table--compact tbody td.bx--table-expand,.bx--data-table--xs thead th.bx--table-expand,.bx--data-table--xs tbody td.bx--table-expand{
  width:1.5rem;
  height:1.5rem;
  padding:0 0 0 .5rem
}

.bx--data-table--short thead th.bx--table-expand,.bx--data-table--short tbody td.bx--table-expand,.bx--data-table--sm thead th.bx--table-expand,.bx--data-table--sm tbody td.bx--table-expand{
  width:2rem;
  height:2rem;
  padding:0;
  padding-left:.5rem
}

.bx--data-table--md thead th.bx--table-expand,.bx--data-table--md tbody td.bx--table-expand{
  width:2.5rem;
  height:2.5rem;
  padding:.25rem 0 .25rem .5rem
}

.bx--data-table--tall thead th.bx--table-expand,.bx--data-table--tall tbody td.bx--table-expand,.bx--data-table--xl thead th.bx--table-expand,.bx--data-table--xl tbody td.bx--table-expand{
  height:4rem;
  padding-top:.625rem;
  padding-bottom:1.375rem
}

.bx--data-table--tall .bx--table-column-checkbox,.bx--data-table--xl .bx--table-column-checkbox{
  padding-top:.8125rem
}

.bx--data-table--tall .bx--table-column-radio,.bx--data-table--xl .bx--table-column-radio{
  padding-top:1rem
}

.bx--table-column-radio{
  width:48px
}

.bx--table-column-radio .bx--radio-button__appearance{
  margin-right:-0.125rem
}

.bx--data-table--zebra tbody tr:nth-child(odd).bx--data-table--selected td,tr.bx--data-table--selected td{
  border-top:1px solid #e0e0e0;
  border-bottom:1px solid #c6c6c6;
  background-color:#e0e0e0;
  color:#161616
}

.bx--data-table--zebra tbody tr:first-of-type:nth-child(odd).bx--data-table--selected td,tr.bx--data-table--selected:first-of-type td{
  border-top:1px solid #c6c6c6
}

.bx--data-table--zebra tbody tr:last-of-type:nth-child(odd).bx--data-table--selected td,.bx--data-table--zebra tbody tr:last-of-type:nth-child(even).bx--data-table--selected td,tr.bx--data-table--selected:last-of-type td{
  border-top:1px solid #e0e0e0;
  border-bottom:1px solid #e0e0e0
}

.bx--data-table--zebra tbody tr:nth-child(even).bx--data-table--selected td{
  border-bottom:1px solid #c6c6c6
}

.bx--data-table--zebra tbody tr:nth-child(even).bx--data-table--selected:hover td{
  border-bottom:1px solid #cacaca
}

.bx--data-table--zebra tbody tr:nth-child(odd).bx--data-table--selected:hover td,.bx--data-table tbody .bx--data-table--selected:hover td{
  border-top:1px solid #cacaca;
  border-bottom:1px solid #cacaca;
  background:#cacaca;
  color:#161616
}

.bx--data-table--selected .bx--overflow-menu .bx--overflow-menu__icon{
  opacity:1
}

.bx--data-table--compact thead tr,.bx--data-table--compact tbody tr,.bx--data-table--compact tbody tr th{
  height:1.5rem
}

.bx--data-table--compact .bx--table-header-label{
  padding-top:.125rem;
  padding-bottom:.125rem
}

.bx--data-table--compact td,.bx--data-table--compact tbody tr th{
  padding-top:.125rem;
  padding-bottom:.125rem
}

.bx--data-table--compact .bx--overflow-menu{
  width:2rem;
  height:100%
}

.bx--data-table.bx--data-table--compact .bx--table-column-checkbox{
  padding-top:0;
  padding-bottom:0
}

.bx--data-table.bx--data-table--compact .bx--table-column-checkbox .bx--checkbox-label{
  height:1.4375rem;
  min-height:1.4375rem
}

.bx--data-table--xs thead tr,.bx--data-table--xs tbody tr,.bx--data-table--xs tbody tr th{
  height:1.5rem
}

.bx--data-table--xs .bx--table-header-label{
  padding-top:.125rem;
  padding-bottom:.125rem
}

.bx--data-table--xs td,.bx--data-table--xs tbody tr th{
  padding-top:.125rem;
  padding-bottom:.125rem
}

.bx--data-table--xs .bx--overflow-menu{
  width:2rem;
  height:calc(100% + 1px)
}

.bx--data-table.bx--data-table--xs .bx--table-column-checkbox{
  padding-top:0;
  padding-bottom:0
}

.bx--data-table.bx--data-table--xs .bx--table-column-checkbox .bx--checkbox-label{
  height:1.4375rem;
  min-height:1.4375rem
}

.bx--data-table--short thead tr,.bx--data-table--short tbody tr,.bx--data-table--short tbody tr th{
  height:2rem
}

.bx--data-table--short .bx--table-header-label{
  padding-top:.4375rem;
  padding-bottom:.4375rem
}

.bx--data-table--short td,.bx--data-table--short tbody tr th{
  padding-top:.4375rem;
  padding-bottom:.375rem
}

.bx--data-table.bx--data-table--short .bx--table-column-checkbox{
  padding-top:.1875rem;
  padding-bottom:.1875rem
}

.bx--data-table--short .bx--overflow-menu{
  height:100%
}

.bx--data-table--sm thead tr,.bx--data-table--sm tbody tr,.bx--data-table--sm tbody tr th{
  height:2rem
}

.bx--data-table--sm .bx--table-header-label{
  padding-top:.4375rem;
  padding-bottom:.4375rem
}

.bx--data-table--sm td,.bx--data-table--sm tbody tr th{
  padding-top:.4375rem;
  padding-bottom:.375rem
}

.bx--data-table.bx--data-table--sm .bx--table-column-checkbox{
  padding-top:.1875rem;
  padding-bottom:.1875rem
}

.bx--data-table--sm .bx--overflow-menu{
  height:calc(100% + 1px)
}

.bx--data-table--md thead tr,.bx--data-table--md tbody tr,.bx--data-table--md tbody tr th{
  height:2.5rem
}

.bx--data-table--md .bx--table-header-label{
  padding-top:.4375rem;
  padding-bottom:.4375rem
}

.bx--data-table--md td,.bx--data-table--md tbody tr th{
  padding-top:.4375rem;
  padding-bottom:.375rem
}

.bx--data-table.bx--data-table--md .bx--table-column-checkbox{
  padding-top:.1875rem;
  padding-bottom:.1875rem
}

.bx--data-table--md .bx--table-column-menu{
  padding-top:.1875rem;
  padding-bottom:.1875rem
}

.bx--data-table--tall thead tr,.bx--data-table--tall tbody tr,.bx--data-table--tall tbody tr th{
  height:4rem
}

.bx--data-table--tall .bx--table-header-label{
  padding-top:1rem;
  padding-bottom:1rem
}

.bx--data-table--tall td,.bx--data-table--tall tbody tr th{
  padding-top:1rem
}

.bx--data-table--tall th,.bx--data-table--tall td{
  vertical-align:top
}

.bx--data-table--tall .bx--data-table--cell-secondary-text{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px
}

.bx--data-table--xl thead tr,.bx--data-table--xl tbody tr,.bx--data-table--xl tbody tr th{
  height:4rem
}

.bx--data-table--xl .bx--table-header-label{
  padding-top:1rem;
  padding-bottom:1rem
}

.bx--data-table--xl td,.bx--data-table--xl tbody tr th{
  padding-top:1rem
}

.bx--data-table--xl th,.bx--data-table--xl td{
  vertical-align:top
}

.bx--data-table--xl .bx--data-table--cell-secondary-text{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px
}

.bx--data-table--static{
  width:auto
}

.bx--data-table-container--static{
  width:-webkit-fit-content;
  width:-moz-fit-content;
  width:fit-content
}

.bx--data-table_inner-container{
  background-color:#e0e0e0;
  transform:translateZ(0)
}

.bx--data-table--sticky-header{
  display:block;
  overflow-y:scroll
}

.bx--data-table--sticky-header thead,.bx--data-table--sticky-header tbody,.bx--data-table--sticky-header tr,.bx--data-table--sticky-header th,.bx--data-table--sticky-header td{
  display:flex
}

.bx--data-table--sticky-header thead{
  position:-webkit-sticky;
  position:sticky;
  z-index:1;
  top:0;
  overflow:scroll;
  width:100%;
  -ms-overflow-style:none;
  will-change:transform
}

.bx--data-table--sticky-header thead tr th{
  border-bottom:1px solid #c6c6c6
}

.bx--data-table--sticky-header tbody{
  flex-direction:column;
  -ms-overflow-style:none;
  overflow-x:scroll;
  will-change:transform
}

.bx--data-table--sticky-header tr.bx--parent-row.bx--expandable-row{
  height:auto;
  min-height:3rem
}

.bx--data-table--sticky-header tr.bx--expandable-row:not(.bx--parent-row){
  height:auto
}

.bx--data-table--sticky-header .bx--table-expand{
  max-width:3rem
}

.bx--data-table--sticky-header thead .bx--table-expand{
  align-items:center
}

.bx--data-table--sticky-header .bx--parent-row{
  min-height:3rem
}

.bx--data-table--sticky-header:not(.bx--data-table--compact):not(.bx--data-table--xs):not(.bx--data-table--tall):not(.bx--data-table--xl):not(.bx--data-table--short):not(.bx--data-table--sm) td:not(.bx--table-column-menu):not(.bx--table-column-checkbox){
  padding-top:.875rem
}

.bx--data-table--sticky-header tr.bx--parent-row.bx--expandable-row:hover+tr[data-child-row] td{
  border-top:1px solid #e5e5e5
}

.bx--data-table--sticky-header tr.bx--expandable-row:last-of-type{
  overflow:hidden
}

.bx--data-table--sticky-header tr.bx--data-table--selected:first-of-type td{
  border-top:none
}

.bx--data-table--sticky-header thead th.bx--table-column-checkbox,.bx--data-table--sticky-header tbody tr td.bx--table-column-checkbox{
  width:2.25rem;
  min-width:2.25rem;
  align-items:center
}

.bx--data-table--sticky-header.bx--data-table--tall thead th.bx--table-column-checkbox,.bx--data-table--sticky-header.bx--data-table--xl thead th.bx--table-column-checkbox,.bx--data-table--sticky-header.bx--data-table--tall td.bx--table-column-checkbox,.bx--data-table--sticky-header.bx--data-table--xl td.bx--table-column-checkbox{
  align-items:flex-start
}

.bx--data-table--sticky-header th.bx--table-column-checkbox~th:last-of-type:empty{
  max-width:4rem
}

.bx--data-table--sticky-header th:empty:not(.bx--table-expand){
  max-width:2.25rem
}

.bx--data-table--sticky-header td.bx--table-column-menu{
  height:auto;
  align-items:center;
  padding-top:0
}

.bx--data-table--sticky-header thead::-webkit-scrollbar,.bx--data-table--sticky-header tbody::-webkit-scrollbar{
  display:none
}

@-moz-document url-prefix(){
  .bx--data-table--sticky-header thead,.bx--data-table--sticky-header tbody{
    scrollbar-width:none
  }
}

.bx--data-table--sticky-header tbody tr:last-of-type{
  border-bottom:0
}

.bx--data-table--sticky-header th:not(.bx--table-column-checkbox):not(.bx--table-column-menu):not(.bx--table-expand-v2):not(.bx--table-column-icon),.bx--data-table--sticky-header td:not(.bx--table-column-checkbox):not(.bx--table-column-menu):not(.bx--table-expand-v2):not(.bx--table-column-icon){
  width:100%;
  min-width:0
}

.bx--data-table--sticky-header.bx--data-table--compact tr:not(.bx--expandable-row),.bx--data-table--sticky-header.bx--data-table--xs tr:not(.bx--expandable-row),.bx--data-table--sticky-header.bx--data-table--short tr:not(.bx--expandable-row),.bx--data-table--sticky-header.bx--data-table--sm tr:not(.bx--expandable-row),.bx--data-table--sticky-header.bx--data-table--tall tr:not(.bx--expandable-row),.bx--data-table--sticky-header.bx--data-table--xl tr:not(.bx--expandable-row){
  height:auto
}

.bx--data-table--sticky-header.bx--data-table--compact tr:not(.bx--expandable-row),.bx--data-table--sticky-header.bx--data-table--xs tr:not(.bx--expandable-row){
  min-height:1.5rem
}

.bx--data-table--sticky-header.bx--data-table--short tr:not(.bx--expandable-row),.bx--data-table--sticky-header.bx--data-table--sm tr:not(.bx--expandable-row){
  min-height:2rem
}

.bx--data-table--sticky-header.bx--data-table--tall tr:not(.bx--expandable-row),.bx--data-table--sticky-header.bx--data-table--xl tr:not(.bx--expandable-row){
  min-height:4rem
}

.bx--data-table--sticky-header.bx--data-table--compact tr td.bx--table-expand,.bx--data-table--sticky-header.bx--data-table--xs tr td.bx--table-expand{
  padding-top:.25rem
}

.bx--data-table--sticky-header.bx--data-table--short tr td.bx--table-expand,.bx--data-table--sticky-header.bx--data-table--sm tr td.bx--table-expand{
  padding-top:.5rem
}

.bx--data-table--sticky-header .bx--table-header-label{
  display:block;
  overflow-x:hidden;
  text-overflow:ellipsis;
  white-space:nowrap;
  max-width:calc(100% - 10px);
  padding-top:.9375rem;
  padding-bottom:1rem;
  overflow-y:hidden
}

.bx--data-table--sticky-header.bx--data-table--compact th .bx--table-header-label,.bx--data-table--sticky-header.bx--data-table--xs th .bx--table-header-label{
  padding-top:.1875rem;
  padding-bottom:0
}

.bx--data-table--sticky-header.bx--data-table--short th .bx--table-header-label,.bx--data-table--sticky-header.bx--data-table--sm th .bx--table-header-label{
  padding-top:.5rem;
  padding-bottom:0
}

.bx--data-table--sticky-header.bx--data-table--tall th .bx--table-header-label,.bx--data-table--sticky-header.bx--data-table--xl th .bx--table-header-label{
  padding-top:1rem
}

.bx--data-table--sticky-header.bx--data-table--tall th.bx--table-expand,.bx--data-table--sticky-header.bx--data-table--xl th.bx--table-expand{
  display:flex;
  align-items:flex-start
}

.bx--data-table--sticky-header.bx--data-table--compact tr.bx--parent-row .bx--table-column-checkbox,.bx--data-table--sticky-header.bx--data-table--short tr.bx--parent-row .bx--table-column-checkbox,.bx--data-table--sticky-header.bx--data-table--xs tr.bx--parent-row .bx--table-column-checkbox,.bx--data-table--sticky-header.bx--data-table--sm tr.bx--parent-row .bx--table-column-checkbox{
  align-items:flex-start
}

.bx--data-table--max-width{
  max-width:100%
}

.bx--data-table--sticky-header{
  max-height:18.75rem
}

.bx--data-table .bx--form-item.bx--checkbox-wrapper:last-of-type{
  margin:0
}

.bx--data-table--short .bx--form-item.bx--checkbox-wrapper:last-of-type,.bx--data-table--compact .bx--form-item.bx--checkbox-wrapper:last-of-type,.bx--data-table--xs .bx--form-item.bx--checkbox-wrapper:last-of-type,.bx--data-table--sm .bx--form-item.bx--checkbox-wrapper:last-of-type{
  margin:-0.1875rem 0
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--data-table-content{
    outline:1px solid transparent
  }
}

.bx--data-table tr.bx--parent-row:first-of-type td{
  border-top:1px solid #e0e0e0
}

.bx--expandable-row--hidden td{
  width:auto;
  padding:1rem;
  border-top:0
}

tr.bx--parent-row:not(.bx--expandable-row)+tr[data-child-row]{
  height:0;
  transition:height 150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

tr.bx--parent-row:not(.bx--expandable-row)+tr[data-child-row] td{
  padding-top:0;
  padding-bottom:0;
  border:0;
  background-color:#e5e5e5;
  transition:padding 150ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

tr.bx--parent-row:not(.bx--expandable-row)+tr[data-child-row] td .bx--child-row-inner-container{
  overflow:hidden;
  max-height:0
}

tr.bx--parent-row.bx--expandable-row+tr[data-child-row]{
  transition:height 150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

tr.bx--parent-row.bx--expandable-row+tr[data-child-row] td{
  padding-left:4rem;
  border-bottom:1px solid #e0e0e0;
  transition:padding-bottom 110ms cubic-bezier(0.2, 0, 0.38, 0.9),transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

tr.bx--parent-row.bx--expandable-row+tr[data-child-row] td .bx--child-row-inner-container{
  max-height:100%
}

.bx--parent-row.bx--expandable-row>td,.bx--parent-row.bx--expandable-row+tr[data-child-row]>td{
  border-bottom:1px solid #e0e0e0;
  box-shadow:0 1px #e0e0e0
}

.bx--parent-row:not(.bx--expandable-row)+tr[data-child-row]>td{
  box-shadow:none
}

.bx--parent-row.bx--expandable-row>td:first-of-type{
  box-shadow:none
}

tr.bx--parent-row:not(.bx--expandable-row) td,tr.bx--parent-row.bx--expandable-row td,tr.bx--parent-row.bx--expandable-row{
  transition:height 240ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

tr.bx--parent-row:not(.bx--expandable-row):first-of-type:hover td{
  border-top:1px solid #e0e0e0;
  border-bottom:1px solid #e0e0e0
}

tr.bx--parent-row.bx--expandable-row:hover td{
  border-top:1px solid #e0e0e0;
  border-bottom:1px solid #e0e0e0;
  background-color:#e5e5e5;
  color:#161616
}

tr.bx--parent-row.bx--expandable-row:hover td:first-of-type{
  border-bottom:1px solid #e5e5e5
}

tr.bx--parent-row.bx--expandable-row:hover+tr[data-child-row] td{
  border-bottom:1px solid #e0e0e0;
  background-color:#e5e5e5;
  color:#161616
}

tr.bx--expandable-row--hover+tr[data-child-row] td{
  border-bottom:1px solid #e0e0e0
}

tr.bx--expandable-row--hover{
  background-color:#e5e5e5
}

tr.bx--expandable-row--hover td{
  border-top:1px solid #e0e0e0;
  border-bottom:1px solid #e0e0e0;
  background-color:#e5e5e5;
  color:#161616
}

tr.bx--parent-row.bx--expandable-row.bx--expandable-row--hover td:first-of-type{
  border-bottom:1px solid transparent
}

.bx--data-table td.bx--table-expand{
  border-bottom:1px solid #e0e0e0
}

.bx--data-table th.bx--table-expand+.bx--table-column-checkbox,.bx--data-table td.bx--table-expand+.bx--table-column-checkbox{
  padding-right:.375rem;
  padding-left:.375rem
}

.bx--data-table th.bx--table-expand+.bx--table-column-checkbox+th,.bx--data-table td.bx--table-expand+.bx--table-column-checkbox+td{
  padding-left:.5rem
}

.bx--data-table td.bx--table-expand,.bx--data-table th.bx--table-expand{
  padding:.5rem;
  padding-right:0
}

.bx--data-table td.bx--table-expand[data-previous-value=collapsed]{
  border-bottom:1px solid transparent
}

.bx--table-expand[data-previous-value=collapsed] .bx--table-expand__svg{
  transform:rotate(270deg);
  transition:transform 150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--table-expand__button{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  display:inline-flex;
  width:100%;
  height:calc(100% + 1px);
  align-items:center;
  justify-content:center;
  padding:0 .5rem;
  vertical-align:inherit
}

.bx--table-expand__button::-moz-focus-inner{
  border:0
}

.bx--table-expand__button:focus{
  box-shadow:inset 0 0 0 2px #0f62fe;
  outline:none
}

.bx--table-expand__svg{
  fill:#161616;
  transform:rotate(90deg);
  transition:transform 150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--data-table--tall .bx--table-expand__button,.bx--data-table--xl .bx--table-expand__button{
  width:2rem;
  padding:0
}

tr.bx--parent-row.bx--expandable-row td.bx--table-expand+td::after{
  position:absolute;
  bottom:-0.0625rem;
  left:0;
  width:.5rem;
  height:.0625rem;
  background:#e0e0e0;
  content:""
}

tr.bx--parent-row.bx--expandable-row:hover td.bx--table-expand+td::after,tr.bx--parent-row.bx--expandable-row.bx--expandable-row--hover td.bx--table-expand+td::after{
  background:#e5e5e5
}

tr.bx--parent-row.bx--data-table--selected td.bx--table-expand+td::after{
  display:none
}

.bx--data-table--zebra tbody tr[data-parent-row]:nth-child(4n+3) td,.bx--data-table--zebra tbody tr[data-child-row]:nth-child(4n+4) td{
  border-bottom:1px solid #fff
}

.bx--data-table--zebra tbody tr[data-parent-row]:nth-child(4n+1) td,.bx--data-table--zebra tbody tr[data-child-row]:nth-child(4n+2) td{
  border-top:1px solid #f4f4f4;
  border-bottom:1px solid #f4f4f4;
  background-color:#f4f4f4
}

.bx--data-table--zebra tr.bx--parent-row td,.bx--data-table--zebra tr.bx--parent-row.bx--expandable-row+tr[data-child-row] td{
  transition:transform 150ms cubic-bezier(0.2, 0, 0.38, 0.9),border-bottom 150ms cubic-bezier(0.2, 0, 0.38, 0.9),border-top 150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--data-table--zebra tbody tr[data-parent-row]:hover td,.bx--data-table--zebra tbody tr[data-parent-row]:hover+tr[data-child-row] td,.bx--data-table--zebra tbody tr[data-child-row]:hover td{
  border-top:1px solid #e5e5e5;
  border-bottom:1px solid #e5e5e5;
  background-color:#e5e5e5
}

.bx--data-table--zebra tr.bx--parent-row.bx--expandable-row.bx--expandable-row--hover td{
  border-top:1px solid #e5e5e5;
  border-bottom:1px solid #e5e5e5;
  background:#e5e5e5
}

tr.bx--parent-row.bx--data-table--selected:first-of-type td{
  border-top:1px solid #c6c6c6;
  border-bottom:1px solid #e0e0e0;
  background:#e0e0e0;
  box-shadow:0 1px #c6c6c6
}

tr.bx--parent-row.bx--data-table--selected td{
  border-bottom:1px solid transparent;
  background:#e0e0e0;
  box-shadow:0 1px #c6c6c6;
  color:#161616
}

tr.bx--parent-row.bx--data-table--selected:last-of-type td{
  border-bottom:1px solid transparent;
  background:#e0e0e0;
  box-shadow:0 1px #e0e0e0
}

tr.bx--parent-row.bx--data-table--selected:not(.bx--expandable-row):hover td{
  border-top:1px solid #cacaca;
  border-bottom:1px solid #e0e0e0;
  background:#cacaca;
  box-shadow:0 1px #cacaca
}

tr.bx--parent-row.bx--data-table--selected.bx--expandable-row td,tr.bx--parent-row.bx--data-table--selected.bx--expandable-row td:first-of-type{
  border-bottom:1px solid transparent;
  box-shadow:0 1px #e0e0e0
}

tr.bx--parent-row.bx--data-table--selected.bx--expandable-row:hover td,tr.bx--parent-row.bx--data-table--selected.bx--expandable-row:hover td:first-of-type,tr.bx--parent-row.bx--data-table--selected.bx--expandable-row--hover td,tr.bx--parent-row.bx--data-table--selected.bx--expandable-row--hover td:first-of-type{
  border-top:1px solid #cacaca;
  border-bottom:1px solid transparent;
  background:#cacaca;
  box-shadow:0 1px #cacaca
}

tr.bx--parent-row.bx--data-table--selected.bx--expandable-row+tr[data-child-row] td{
  border-top:1px solid #c6c6c6;
  border-bottom:1px solid #e0e0e0;
  background-color:#e5e5e5;
  box-shadow:0 1px #c6c6c6;
  color:#161616
}

tr.bx--parent-row.bx--data-table--selected.bx--expandable-row+tr[data-child-row]:last-of-type td{
  padding-bottom:1.5rem;
  box-shadow:inset 0 -1px #c6c6c6
}

tr.bx--parent-row.bx--data-table--selected.bx--expandable-row:hover+tr[data-child-row] td,tr.bx--parent-row.bx--data-table--selected.bx--expandable-row--hover+tr[data-child-row] td{
  background:#e0e0e0
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--table-expand__button:focus .bx--table-expand__svg{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--table-expand__svg{
    fill:ButtonText
  }
}

.bx--data-table--sort th,.bx--data-table th[aria-sort]{
  height:3rem;
  padding:0;
  border-top:none;
  border-bottom:none
}

.bx--table-sort{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  display:flex;
  width:100%;
  min-height:100%;
  align-items:center;
  justify-content:space-between;
  padding-left:1rem;
  background-color:#e0e0e0;
  color:#161616;
  font:inherit;
  line-height:1;
  text-align:left;
  transition:background-color 70ms cubic-bezier(0, 0, 0.38, 0.9),outline 70ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--table-sort::-moz-focus-inner{
  border:0
}

.bx--table-sort:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--table-sort:focus{
    outline-style:dotted
  }
}

.bx--table-sort:hover{
  background:#cacaca
}

.bx--table-sort:focus svg,.bx--table-sort:hover svg{
  opacity:1
}

.bx--data-table.bx--data-table--sort th>.bx--table-header-label{
  padding-right:1rem;
  padding-left:1rem
}

th .bx--table-sort__flex{
  display:flex;
  width:100%;
  height:100%;
  min-height:3rem;
  align-items:center;
  justify-content:space-between
}

@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){
  .bx--data-table--sort:not(.bx--data-table--compact):not(.bx--data-table--short):not(.bx--data-table--tall):not(.bx--data-table--xs):not(.bx--data-table--sm):not(.bx--data-table--md):not(.bx--data-table--xl) th .bx--table-sort__flex{
    height:2.99rem
  }
}

.bx--data-table--compact.bx--data-table--sort th .bx--table-sort__flex,.bx--data-table--xs.bx--data-table--sort th .bx--table-sort__flex{
  min-height:1.5rem
}

.bx--data-table--short.bx--data-table--sort th .bx--table-sort__flex,.bx--data-table--sm.bx--data-table--sort th .bx--table-sort__flex{
  min-height:2rem
}

.bx--data-table--md.bx--data-table--sort th .bx--table-sort__flex{
  min-height:2.5rem
}

.bx--data-table--tall.bx--data-table--sort th .bx--table-sort__flex,.bx--data-table--xl.bx--data-table--sort th .bx--table-sort__flex{
  min-height:4rem;
  align-items:flex-start
}

.bx--table-sort .bx--table-sort__icon-inactive{
  display:block
}

.bx--table-sort .bx--table-sort__icon{
  display:none
}

.bx--table-sort__icon-unsorted{
  width:1.25rem;
  min-width:1rem;
  margin-right:.5rem;
  margin-left:.5rem;
  fill:#161616;
  opacity:0
}

.bx--table-sort.bx--table-sort--active{
  background:#cacaca
}

.bx--table-sort.bx--table-sort--active .bx--table-sort__icon-unsorted{
  display:none
}

.bx--table-sort.bx--table-sort--active .bx--table-sort__icon{
  display:block;
  opacity:1
}

.bx--table-sort--ascending .bx--table-sort__icon{
  transform:rotate(180deg)
}

.bx--table-sort__icon{
  width:1.25rem;
  min-width:1rem;
  margin-right:.5rem;
  margin-left:.5rem;
  fill:#161616;
  opacity:1;
  transform:rotate(0);
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--data-table--compact.bx--data-table--sort th,.bx--data-table--xs.bx--data-table--sort th{
  height:1.5rem
}

.bx--data-table--short.bx--data-table--sort th,.bx--data-table--sm.bx--data-table--sort th{
  height:2rem
}

.bx--data-table--md.bx--data-table--sort th{
  height:2.5rem
}

.bx--data-table--tall.bx--data-table--sort th,.bx--data-table--xl.bx--data-table--sort th{
  height:4rem
}

.bx--data-table--tall.bx--data-table--sort th .bx--table-sort,.bx--data-table--xl.bx--data-table--sort th .bx--table-sort{
  display:inline-block;
  height:4rem
}

.bx--data-table--tall .bx--table-sort__icon-unsorted,.bx--data-table--tall .bx--table-sort__icon,.bx--data-table--xl .bx--table-sort__icon-unsorted,.bx--data-table--xl .bx--table-sort__icon{
  margin-top:.8125rem
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--table-sort__icon,.bx--table-sort__icon-unsorted{
    fill:ButtonText
  }
}

.bx--inline-edit-label{
  display:flex;
  align-items:center;
  justify-content:space-between
}

.bx--inline-edit-label:hover .bx--inline-edit-label__icon{
  opacity:1
}

.bx--inline-edit-label--inactive{
  display:none
}

.bx--inline-edit-label__action{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer
}

.bx--inline-edit-label__action::-moz-focus-inner{
  border:0
}

.bx--inline-edit-label__action:hover{
  cursor:pointer
}

.bx--inline-edit-label__action:focus{
  outline:1px solid #0f62fe;
  padding:.125rem
}

@media screen and (prefers-contrast){
  .bx--inline-edit-label__action:focus{
    outline-style:dotted
  }
}

.bx--inline-edit-label__action:focus .bx--inline-edit-label__icon{
  width:auto;
  opacity:1
}

.bx--inline-edit-label__icon{
  fill:#161616;
  opacity:0
}

.bx--inline-edit-input{
  display:none
}

.bx--inline-edit-input--active{
  display:block;
  margin-left:-0.75rem
}

.bx--inline-edit-input--active input{
  padding-left:.75rem
}

.bx--data-table.bx--skeleton th{
  padding-left:1rem;
  vertical-align:middle
}

.bx--data-table.bx--skeleton th span,.bx--data-table.bx--skeleton td span{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  display:block;
  width:4rem;
  height:1rem
}

.bx--data-table.bx--skeleton th span:hover,.bx--data-table.bx--skeleton th span:focus,.bx--data-table.bx--skeleton th span:active,.bx--data-table.bx--skeleton td span:hover,.bx--data-table.bx--skeleton td span:focus,.bx--data-table.bx--skeleton td span:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--data-table.bx--skeleton th span::before,.bx--data-table.bx--skeleton td span::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--data-table.bx--skeleton th span::before,.bx--data-table.bx--skeleton td span::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--data-table.bx--skeleton tr:hover td{
  border-color:#e0e0e0;
  background:transparent
}

.bx--data-table.bx--skeleton tr:hover td:first-of-type,.bx--data-table.bx--skeleton tr:hover td:last-of-type{
  border-color:#e0e0e0
}

.bx--data-table.bx--skeleton .bx--table-sort-v2{
  pointer-events:none
}

.bx--data-table.bx--skeleton th span{
  background:#c6c6c6
}

.bx--data-table.bx--skeleton th span::before{
  background:#e5e5e5
}

.bx--data-table-container.bx--skeleton .bx--data-table-header__title{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:7.5rem;
  height:1.5rem
}

.bx--data-table-container.bx--skeleton .bx--data-table-header__title:hover,.bx--data-table-container.bx--skeleton .bx--data-table-header__title:focus,.bx--data-table-container.bx--skeleton .bx--data-table-header__title:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--data-table-container.bx--skeleton .bx--data-table-header__title::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--data-table-container.bx--skeleton .bx--data-table-header__title::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--data-table-container.bx--skeleton .bx--data-table-header__description{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:10rem;
  height:1rem;
  margin-top:.5rem
}

.bx--data-table-container.bx--skeleton .bx--data-table-header__description:hover,.bx--data-table-container.bx--skeleton .bx--data-table-header__description:focus,.bx--data-table-container.bx--skeleton .bx--data-table-header__description:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--data-table-container.bx--skeleton .bx--data-table-header__description::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--data-table-container.bx--skeleton .bx--data-table-header__description::before{
    -webkit-animation:none;
    animation:none
  }
}

@-webkit-keyframes fpFadeInDown{
  from{
    transform:translate3d(0, -20px, 0);
    opacity:0
  }

  to{
    transform:translate3d(0, 0, 0);
    opacity:1
  }
}

@keyframes fpFadeInDown{
  from{
    transform:translate3d(0, -20px, 0);
    opacity:0
  }

  to{
    transform:translate3d(0, 0, 0);
    opacity:1
  }
}

@-webkit-keyframes fpSlideLeft{
  from{
    transform:translate3d(0, 0, 0)
  }

  to{
    transform:translate3d(-100%, 0, 0)
  }
}

@keyframes fpSlideLeft{
  from{
    transform:translate3d(0, 0, 0)
  }

  to{
    transform:translate3d(-100%, 0, 0)
  }
}

@-webkit-keyframes fpSlideLeftNew{
  from{
    transform:translate3d(100%, 0, 0)
  }

  to{
    transform:translate3d(0, 0, 0)
  }
}

@keyframes fpSlideLeftNew{
  from{
    transform:translate3d(100%, 0, 0)
  }

  to{
    transform:translate3d(0, 0, 0)
  }
}

@-webkit-keyframes fpSlideRight{
  from{
    transform:translate3d(0, 0, 0)
  }

  to{
    transform:translate3d(100%, 0, 0)
  }
}

@keyframes fpSlideRight{
  from{
    transform:translate3d(0, 0, 0)
  }

  to{
    transform:translate3d(100%, 0, 0)
  }
}

@-webkit-keyframes fpSlideRightNew{
  from{
    transform:translate3d(-100%, 0, 0)
  }

  to{
    transform:translate3d(0, 0, 0)
  }
}

@keyframes fpSlideRightNew{
  from{
    transform:translate3d(-100%, 0, 0)
  }

  to{
    transform:translate3d(0, 0, 0)
  }
}

@-webkit-keyframes fpFadeOut{
  from{
    opacity:1
  }

  to{
    opacity:0
  }
}

@keyframes fpFadeOut{
  from{
    opacity:1
  }

  to{
    opacity:0
  }
}

@-webkit-keyframes fpFadeIn{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

@keyframes fpFadeIn{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.flatpickr-calendar{
  position:absolute;
  box-sizing:border-box;
  width:19.6875rem;
  max-height:0;
  padding:0;
  overflow:hidden;
  direction:ltr;
  text-align:center;
  border:0;
  border-radius:0;
  visibility:hidden;
  opacity:0;
  -webkit-animation:none;
  animation:none;
  touch-action:manipulation
}

.flatpickr-calendar.open,.flatpickr-calendar.inline{
  max-height:40rem;
  overflow:visible;
  visibility:inherit;
  opacity:1
}

.flatpickr-calendar.open{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:99999;
  display:flex;
  flex-direction:column;
  align-items:center;
  justify-content:center;
  width:18rem;
  height:21rem;
  margin-top:-0.125rem;
  padding:.25rem .25rem .5rem .25rem;
  overflow:hidden;
  background-color:#fff;
  border:none
}

.flatpickr-calendar.open:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .flatpickr-calendar.open:focus{
    outline-style:dotted
  }
}

.flatpickr-calendar.animate.open{
  -webkit-animation:fpFadeInDown 110ms cubic-bezier(0, 0, 0.38, 0.9);
  animation:fpFadeInDown 110ms cubic-bezier(0, 0, 0.38, 0.9)
}

.flatpickr-calendar.inline{
  position:relative;
  top:.125rem;
  display:block
}

.flatpickr-calendar.static{
  position:absolute;
  top:calc(100% + 2px)
}

.flatpickr-calendar.static.open{
  z-index:999;
  display:block
}

.flatpickr-calendar.hasWeeks{
  width:auto
}

.dayContainer{
  display:flex;
  flex-wrap:wrap;
  justify-content:space-around;
  height:15.375rem;
  padding:0;
  outline:0
}

.flatpickr-calendar .hasWeeks .dayContainer,.flatpickr-calendar .hasTime .dayContainer{
  border-bottom:0;
  border-bottom-right-radius:0;
  border-bottom-left-radius:0
}

.flatpickr-calendar .hasWeeks .dayContainer{
  border-left:0
}

.flatpickr-calendar.showTimeInput.hasTime .flatpickr-time{
  height:2.5rem;
  border-top:1px solid #e6e6e6
}

.flatpickr-calendar.noCalendar.hasTime .flatpickr-time{
  height:auto
}

.flatpickr-calendar:focus{
  outline:0
}

.flatpickr-months{
  display:flex;
  justify-content:space-between;
  width:100%
}

.flatpickr-month{
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  display:flex;
  align-items:center;
  height:2.5rem;
  color:#161616;
  line-height:1;
  text-align:center;
  background-color:transparent
}

.flatpickr-prev-month,.flatpickr-next-month{
  z-index:3;
  display:flex;
  align-items:center;
  justify-content:center;
  width:2.5rem;
  height:2.5rem;
  padding:0;
  line-height:16px;
  text-decoration:none;
  transform:scale(1, 1) /*rtl: scale(-1,1)*/;
  cursor:pointer;
  transition:background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  fill:#161616;
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none
}

.flatpickr-prev-month:hover,.flatpickr-next-month:hover{
  background-color:#e5e5e5
}

.flatpickr-next-month.disabled svg,.flatpickr-prev-month.disabled svg{
  cursor:not-allowed;
  fill:#161616
}

.flatpickr-next-month.disabled:hover svg,.flatpickr-prev-month.disabled:hover svg{
  fill:#161616
}

.flatpickr-current-month{
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  display:flex;
  align-items:center;
  justify-content:center;
  height:1.75rem;
  text-align:center
}

.flatpickr-current-month .cur-month{
  margin-right:.25rem;
  margin-left:.25rem
}

.flatpickr-current-month .cur-month:hover{
  background-color:#e5e5e5
}

.numInputWrapper{
  position:relative;
  width:3.75rem
}

.numInputWrapper:hover{
  background-color:#e5e5e5
}

.numInputWrapper .numInput{
  display:inline-block;
  width:100%;
  margin:0;
  padding:.25rem;
  color:#161616;
  font-weight:600;
  font-size:inherit;
  font-family:inherit;
  background-color:#fff;
  border:none;
  cursor:default;
  -moz-appearance:textfield
}

.numInputWrapper .numInput::-webkit-outer-spin-button,.numInputWrapper .numInput::-webkit-inner-spin-button{
  margin:0;
  -webkit-appearance:none
}

.numInputWrapper .numInput:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .numInputWrapper .numInput:focus{
    outline-style:dotted
  }
}

.numInputWrapper .numInput[disabled],.numInputWrapper .numInput[disabled]:hover{
  color:#c6c6c6;
  background-color:#fff;
  pointer-events:none
}

.numInputWrapper .arrowUp{
  top:.25rem;
  border-bottom:0
}

.numInputWrapper .arrowUp::after{
  border-bottom:.25rem solid #161616
}

.numInputWrapper .arrowDown{
  top:.6875rem
}

.numInputWrapper .arrowDown::after{
  border-top:.25rem solid #161616
}

.numInputWrapper .arrowUp,.numInputWrapper .arrowDown{
  position:absolute;
  left:2.6rem;
  width:.75rem;
  height:50%;
  padding:0 .25rem 0 .125rem;
  line-height:50%;
  border:none;
  cursor:pointer;
  opacity:0
}

.numInputWrapper .arrowUp::after,.numInputWrapper .arrowDown::after{
  position:absolute;
  top:33%;
  display:block;
  border-right:.25rem solid transparent;
  border-left:.25rem solid transparent;
  content:""
}

.numInputWrapper .arrowUp:hover::after,.numInputWrapper .arrowDown:hover::after{
  border-top-color:#0f62fe;
  border-bottom-color:#0f62fe
}

.numInputWrapper .arrowUp:active::after,.numInputWrapper .arrowDown:active::after{
  border-top-color:#0f62fe;
  border-bottom-color:#0f62fe
}

.numInput[disabled]~.arrowUp::after{
  border-bottom-color:#c6c6c6
}

.numInput[disabled]~.arrowDown::after{
  border-top-color:#c6c6c6
}

.numInputWrapper:hover .arrowUp,.numInputWrapper:hover .arrowDown{
  opacity:1
}

.numInputWrapper:hover .numInput[disabled]~.arrowUp,.numInputWrapper:hover .numInput[disabled]~.arrowDown{
  opacity:0
}

.flatpickr-weekdays{
  display:flex;
  align-items:center;
  height:2.5rem
}

.flatpickr-weekdaycontainer{
  display:flex;
  width:100%
}

.flatpickr-weekday{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  flex:1;
  color:#161616;
  cursor:default
}

.flatpickr-days:focus{
  outline:0
}

.flatpickr-calendar.animate .dayContainer.slideLeft{
  -webkit-animation:fpFadeOut 400ms cubic-bezier(0.23, 1, 0.32, 1),fpSlideLeft 400ms cubic-bezier(0.23, 1, 0.32, 1);
  animation:fpFadeOut 400ms cubic-bezier(0.23, 1, 0.32, 1),fpSlideLeft 400ms cubic-bezier(0.23, 1, 0.32, 1)
}

.flatpickr-calendar.animate .dayContainer.slideLeft,.flatpickr-calendar.animate .dayContainer.slideLeftNew{
  transform:translate3d(-100%, 0, 0)
}

.flatpickr-calendar.animate .dayContainer.slideLeftNew{
  -webkit-animation:fpFadeIn 400ms cubic-bezier(0.23, 1, 0.32, 1),fpSlideLeft 400ms cubic-bezier(0.23, 1, 0.32, 1);
  animation:fpFadeIn 400ms cubic-bezier(0.23, 1, 0.32, 1),fpSlideLeft 400ms cubic-bezier(0.23, 1, 0.32, 1)
}

.flatpickr-calendar.animate .dayContainer.slideRight{
  transform:translate3d(100%, 0, 0);
  -webkit-animation:fpFadeOut 400ms cubic-bezier(0.23, 1, 0.32, 1),fpSlideRight 400ms cubic-bezier(0.23, 1, 0.32, 1);
  animation:fpFadeOut 400ms cubic-bezier(0.23, 1, 0.32, 1),fpSlideRight 400ms cubic-bezier(0.23, 1, 0.32, 1)
}

.flatpickr-calendar.animate .dayContainer.slideRightNew{
  -webkit-animation:fpFadeIn 400ms cubic-bezier(0.23, 1, 0.32, 1),fpSlideRightNew 400ms cubic-bezier(0.23, 1, 0.32, 1);
  animation:fpFadeIn 400ms cubic-bezier(0.23, 1, 0.32, 1),fpSlideRightNew 400ms cubic-bezier(0.23, 1, 0.32, 1)
}

.flatpickr-day{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:flex;
  align-items:center;
  justify-content:center;
  width:2.5rem;
  height:2.5rem;
  color:#161616;
  cursor:pointer;
  transition:all 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.flatpickr-day:hover{
  background:#e5e5e5
}

.flatpickr-day:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  outline-color:#0f62fe
}

@media screen and (prefers-contrast){
  .flatpickr-day:focus{
    outline-style:dotted
  }
}

.nextMonthDay,.prevMonthDay{
  color:#6f6f6f
}

.flatpickr-day.today{
  position:relative;
  color:#0f62fe;
  font-weight:600
}

.flatpickr-day.today::after{
  position:absolute;
  bottom:.4375rem;
  left:50%;
  display:block;
  width:.25rem;
  height:.25rem;
  background-color:#0f62fe;
  transform:translateX(-50%);
  content:""
}

.flatpickr-day.today.no-border{
  border:none
}

.flatpickr-day.today.selected{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .flatpickr-day.today.selected{
    outline-style:dotted
  }
}

.flatpickr-day.today.selected::after{
  display:none
}

.flatpickr-day.inRange{
  color:#161616;
  background-color:#d0e2ff
}

.flatpickr-day.selected{
  color:#fff;
  background-color:#0f62fe
}

.flatpickr-day.selected:focus{
  outline:.0625rem solid #f4f4f4;
  outline-offset:-0.1875rem
}

.flatpickr-day.startRange.selected{
  z-index:2;
  box-shadow:none
}

.flatpickr-day.startRange.inRange:not(.selected),.flatpickr-day.endRange.inRange{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  z-index:3;
  background:#fff
}

@media screen and (prefers-contrast){
  .flatpickr-day.startRange.inRange:not(.selected),.flatpickr-day.endRange.inRange{
    outline-style:dotted
  }
}

.flatpickr-day.endRange:hover{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  color:#161616;
  background:#fff
}

@media screen and (prefers-contrast){
  .flatpickr-day.endRange:hover{
    outline-style:dotted
  }
}

.flatpickr-day.endRange.inRange.selected{
  color:#fff;
  background:#0f62fe
}

.flatpickr-day.flatpickr-disabled{
  color:#c6c6c6;
  cursor:not-allowed
}

.flatpickr-day.flatpickr-disabled:hover{
  background-color:transparent
}

.flatpickr-input[readonly]{
  cursor:pointer
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .flatpickr-prev-month,.flatpickr-next-month{
    fill:ButtonText
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .flatpickr-day.selected{
    color:Highlight;
    outline:1px solid Highlight;
    outline-style:dotted
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .flatpickr-day.today,.flatpickr-day.inRange{
    color:Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .flatpickr-calendar{
    outline:1px solid transparent
  }
}

.bx--date-picker{
  display:flex
}

.bx--date-picker--light .bx--date-picker__input{
  background:#f4f4f4
}

.bx--date-picker~.bx--label{
  order:1
}

.bx--date-picker-container{
  position:relative;
  display:flex;
  flex-direction:column;
  justify-content:space-between
}

.bx--date-picker-input__wrapper{
  position:relative;
  display:flex;
  align-items:center
}

.bx--date-picker.bx--date-picker--simple .bx--date-picker__input,.bx--date-picker.bx--date-picker--simple .bx--label{
  width:7.5rem
}

.bx--date-picker.bx--date-picker--simple .bx--date-picker-input__wrapper--invalid .bx--date-picker__input,.bx--date-picker.bx--date-picker--simple .bx--date-picker-input__wrapper--invalid~.bx--form-requirement,.bx--date-picker.bx--date-picker--simple .bx--date-picker-input__wrapper--warn .bx--date-picker__input,.bx--date-picker.bx--date-picker--simple .bx--date-picker-input__wrapper--warn~.bx--form-requirement{
  width:9.5rem
}

.bx--date-picker.bx--date-picker--simple.bx--date-picker--short .bx--date-picker__input{
  width:5.7rem
}

.bx--date-picker.bx--date-picker--single .bx--date-picker__input{
  width:18rem
}

.bx--date-picker .bx--date-picker-input__wrapper--warn~.bx--form-requirement{
  color:#161616
}

.bx--date-picker__input{
  font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace;
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.32px;
  outline:2px solid transparent;
  outline-offset:-2px;
  position:relative;
  display:block;
  height:2.5rem;
  padding:0 1rem;
  border:none;
  border-bottom:1px solid #8d8d8d;
  background-color:#fff;
  color:#161616;
  transition:70ms cubic-bezier(0.2, 0, 0.38, 0.9) all
}

.bx--date-picker__input:focus,.bx--date-picker__input.bx--focused{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--date-picker__input:focus,.bx--date-picker__input.bx--focused{
    outline-style:dotted
  }
}

.bx--date-picker__input:disabled{
  border-bottom:1px solid transparent;
  background-color:#fff;
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--date-picker__input:disabled::-moz-placeholder{
  color:#c6c6c6
}

.bx--date-picker__input:disabled:-ms-input-placeholder{
  color:#c6c6c6
}

.bx--date-picker__input:disabled::placeholder{
  color:#c6c6c6
}

.bx--date-picker__input:disabled:hover{
  border-bottom:1px solid transparent
}

.bx--date-picker__input::-moz-placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--date-picker__input:-ms-input-placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--date-picker__input::placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--date-picker__input--xl,.bx--date-picker__input--lg{
  height:3rem
}

.bx--date-picker__input--sm{
  height:2rem
}

.bx--date-picker__icon{
  position:absolute;
  z-index:1;
  top:50%;
  right:1rem;
  fill:#161616;
  pointer-events:none;
  transform:translateY(-50%)
}

.bx--date-picker__icon--invalid,.bx--date-picker__icon--warn{
  cursor:auto
}

.bx--date-picker__icon--warn{
  fill:#f1c21b
}

.bx--date-picker__icon--warn path:first-of-type{
  fill:#000;
  opacity:1
}

.bx--date-picker__icon--invalid{
  fill:#da1e28
}

.bx--date-picker__icon~.bx--date-picker__input{
  padding-right:3rem
}

.bx--date-picker__input:disabled~.bx--date-picker__icon{
  cursor:not-allowed;
  fill:#c6c6c6
}

.bx--date-picker--range>.bx--date-picker-container:first-child{
  margin-right:.0625rem
}

.bx--date-picker--range .bx--date-picker-container,.bx--date-picker--range .bx--date-picker__input{
  width:8.96875rem
}

.bx--date-picker.bx--skeleton input,.bx--date-picker__input.bx--skeleton{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:100%
}

.bx--date-picker.bx--skeleton input:hover,.bx--date-picker.bx--skeleton input:focus,.bx--date-picker.bx--skeleton input:active,.bx--date-picker__input.bx--skeleton:hover,.bx--date-picker__input.bx--skeleton:focus,.bx--date-picker__input.bx--skeleton:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--date-picker.bx--skeleton input::before,.bx--date-picker__input.bx--skeleton::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--date-picker.bx--skeleton input::before,.bx--date-picker__input.bx--skeleton::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--date-picker.bx--skeleton input::-moz-placeholder, .bx--date-picker__input.bx--skeleton::-moz-placeholder{
  color:transparent
}

.bx--date-picker.bx--skeleton input:-ms-input-placeholder, .bx--date-picker__input.bx--skeleton:-ms-input-placeholder{
  color:transparent
}

.bx--date-picker.bx--skeleton input::placeholder,.bx--date-picker__input.bx--skeleton::placeholder{
  color:transparent
}

.bx--date-picker.bx--skeleton .bx--label{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:4.6875rem;
  height:.875rem
}

.bx--date-picker.bx--skeleton .bx--label:hover,.bx--date-picker.bx--skeleton .bx--label:focus,.bx--date-picker.bx--skeleton .bx--label:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--date-picker.bx--skeleton .bx--label::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--date-picker.bx--skeleton .bx--label::before{
    -webkit-animation:none;
    animation:none
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--date-picker__icon{
    fill:ButtonText
  }
}

.bx--dropdown__wrapper--inline{
  display:inline-grid;
  align-items:center;
  grid-gap:0 1.5rem;
  grid-template:auto auto/auto -webkit-min-content;
  grid-template:auto auto/auto min-content
}

.bx--dropdown__wrapper--inline .bx--label{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

.bx--dropdown__wrapper--inline .bx--label,.bx--dropdown__wrapper--inline .bx--form__helper-text,.bx--dropdown__wrapper--inline .bx--form-requirement{
  margin:0
}

.bx--dropdown__wrapper--inline .bx--form-requirement{
  grid-column:2
}

.bx--dropdown{
  outline:2px solid transparent;
  outline-offset:-2px;
  position:relative;
  display:block;
  width:100%;
  height:2.5rem;
  border:none;
  border-bottom:1px solid #8d8d8d;
  background-color:#fff;
  color:#161616;
  cursor:pointer;
  list-style:none;
  outline:2px solid transparent;
  transition:background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--dropdown:hover{
  background-color:#e5e5e5
}

.bx--dropdown .bx--list-box__field{
  text-align:left
}

.bx--dropdown--xl,.bx--dropdown--lg{
  height:3rem;
  max-height:3rem
}

.bx--dropdown--xl .bx--dropdown__arrow,.bx--dropdown--lg .bx--dropdown__arrow{
  top:1rem
}

.bx--dropdown--sm{
  height:2rem;
  max-height:2rem
}

.bx--dropdown--sm .bx--dropdown__arrow{
  top:.5rem
}

.bx--dropdown--open{
  border-bottom-color:#e0e0e0
}

.bx--dropdown--invalid{
  outline:2px solid #da1e28;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--dropdown--invalid{
    outline-style:dotted
  }
}

.bx--dropdown--invalid .bx--dropdown-text{
  padding-right:3.5rem
}

.bx--dropdown--invalid+.bx--form-requirement{
  display:inline-block;
  max-height:12.5rem;
  color:#da1e28
}

.bx--dropdown__invalid-icon{
  position:absolute;
  top:50%;
  right:2.5rem;
  fill:#da1e28;
  transform:translateY(-50%)
}

.bx--dropdown--open:hover{
  background-color:#fff
}

.bx--dropdown--open:focus{
  outline:1px solid transparent
}

.bx--dropdown--open .bx--dropdown-list{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  max-height:13.75rem;
  transition:max-height 110ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--dropdown--light{
  background-color:#f4f4f4
}

.bx--dropdown--light:hover{
  background-color:#e5e5e5
}

.bx--dropdown--up .bx--dropdown-list{
  bottom:2rem
}

.bx--dropdown__arrow{
  position:absolute;
  top:.8125rem;
  right:1rem;
  fill:#161616;
  pointer-events:none;
  transform-origin:50% 45%;
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

button.bx--dropdown-text{
  width:100%;
  border:none;
  background:none;
  color:#161616;
  text-align:left
}

button.bx--dropdown-text:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  button.bx--dropdown-text:focus{
    outline-style:dotted
  }
}

.bx--dropdown-text{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:block;
  overflow:hidden;
  height:calc(100% + 1px);
  padding-right:2.625rem;
  padding-left:1rem;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--dropdown-list{
  outline:2px solid transparent;
  outline-offset:-2px;
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  position:absolute;
  z-index:9100;
  display:flex;
  width:100%;
  max-height:0;
  flex-direction:column;
  background-color:#fff;
  list-style:none;
  overflow-x:hidden;
  overflow-y:auto;
  transition:max-height 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--dropdown--light .bx--dropdown-list{
  background-color:#f4f4f4
}

.bx--dropdown:not(.bx--dropdown--open) .bx--dropdown-item{
  visibility:hidden
}

.bx--dropdown-item{
  position:relative;
  opacity:0;
  transition:visibility 70ms cubic-bezier(0.2, 0, 0.38, 0.9),opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  visibility:inherit
}

.bx--dropdown-item:hover{
  background-color:#e5e5e5
}

.bx--dropdown-item:hover+.bx--dropdown-item .bx--dropdown-link{
  border-color:transparent
}

.bx--dropdown-item:active{
  background-color:#e0e0e0
}

.bx--dropdown-item:first-of-type .bx--dropdown-link{
  border-top-color:transparent
}

.bx--dropdown-item:last-of-type .bx--dropdown-link{
  border-bottom:none
}

.bx--dropdown-link{
  outline:2px solid transparent;
  outline-offset:-2px;
  display:block;
  overflow:hidden;
  height:2.5rem;
  padding:.6875rem 0;
  border:1px solid transparent;
  border-top-color:#e0e0e0;
  margin:0 1rem;
  color:#525252;
  font-weight:normal;
  line-height:1rem;
  text-decoration:none;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--dropdown-link:hover{
  border-color:transparent;
  color:#161616
}

.bx--dropdown--light .bx--dropdown-link{
  border-top-color:#e0e0e0
}

.bx--dropdown--sm .bx--dropdown-link{
  height:2rem;
  padding-top:.4375rem;
  padding-bottom:.4375rem
}

.bx--dropdown--xl .bx--dropdown-link{
  height:3rem;
  padding-top:.9375rem;
  padding-bottom:.9375rem
}

.bx--dropdown--focused,.bx--dropdown-link:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  padding:.6875rem 1rem;
  margin:0
}

@media screen and (prefers-contrast){
  .bx--dropdown--focused,.bx--dropdown-link:focus{
    outline-style:dotted
  }
}

.bx--dropdown-list[aria-activedescendant] .bx--dropdown-link:focus{
  padding:.6875rem 0;
  margin:0 1rem;
  outline:none
}

.bx--dropdown-list[aria-activedescendant] .bx--dropdown--focused:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  padding:.6875rem 1rem;
  margin:0
}

@media screen and (prefers-contrast){
  .bx--dropdown-list[aria-activedescendant] .bx--dropdown--focused:focus{
    outline-style:dotted
  }
}

.bx--dropdown-list[aria-activedescendant] .bx--dropdown-item:active{
  background-color:inherit
}

.bx--dropdown-item:hover .bx--dropdown-link{
  border-bottom-color:#e5e5e5
}

.bx--dropdown--open .bx--dropdown__arrow{
  transform:rotate(-180deg)
}

.bx--dropdown--open.bx--dropdown--xl .bx--dropdown-list{
  max-height:16.5rem
}

.bx--dropdown--open.bx--dropdown--sm .bx--dropdown-list{
  max-height:11rem
}

.bx--dropdown--open .bx--dropdown-item{
  opacity:1
}

.bx--dropdown--disabled{
  border-bottom-color:transparent
}

.bx--dropdown--disabled:hover{
  background-color:#fff
}

.bx--dropdown--disabled:focus{
  outline:none
}

.bx--dropdown--disabled .bx--dropdown-text,.bx--dropdown--disabled .bx--list-box__label{
  color:#c6c6c6
}

.bx--dropdown--disabled .bx--dropdown__arrow,.bx--dropdown--disabled .bx--list-box__menu-icon svg{
  fill:#c6c6c6
}

.bx--dropdown--disabled.bx--dropdown--light:hover{
  background-color:#f4f4f4
}

.bx--dropdown--disabled .bx--list-box__field,.bx--dropdown--disabled .bx--list-box__menu-icon{
  cursor:not-allowed
}

.bx--dropdown--auto-width{
  width:auto;
  max-width:25rem
}

.bx--dropdown--inline{
  display:inline-block;
  width:auto;
  border-bottom-color:transparent;
  background-color:transparent;
  justify-self:start;
  transition:background 70ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--dropdown--inline:hover{
  background-color:#e5e5e5
}

.bx--dropdown--inline.bx--dropdown--disabled{
  background-color:transparent
}

.bx--dropdown--inline .bx--dropdown__arrow{
  top:.5rem;
  right:.5rem
}

.bx--dropdown--inline.bx--dropdown--open{
  background-color:transparent
}

.bx--dropdown--inline .bx--dropdown-text{
  display:inline-block;
  overflow:visible;
  height:2rem;
  padding:.4375rem 2rem .4375rem .75rem;
  color:#161616
}

.bx--dropdown--inline.bx--dropdown--disabled .bx--dropdown-text{
  color:#c6c6c6
}

.bx--dropdown--inline.bx--dropdown--disabled:focus .bx--dropdown-text{
  outline:0
}

.bx--dropdown--inline.bx--dropdown--invalid .bx--dropdown__invalid-icon{
  right:2rem
}

.bx--dropdown--inline.bx--dropdown--invalid .bx--dropdown-text{
  padding-right:3.5rem
}

.bx--dropdown--inline.bx--dropdown--open:focus .bx--dropdown-list{
  box-shadow:0 2px 6px rgba(0,0,0,.3)
}

.bx--dropdown--inline .bx--dropdown-link{
  font-weight:normal
}

.bx--dropdown--show-selected .bx--dropdown--selected{
  display:block;
  background-color:#e5e5e5;
  color:#161616
}

.bx--dropdown--show-selected .bx--dropdown--selected:hover{
  background-color:#e0e0e0
}

.bx--dropdown--show-selected .bx--dropdown--selected .bx--dropdown-link{
  border-top-color:transparent
}

.bx--dropdown--show-selected .bx--dropdown--selected+.bx--dropdown-item .bx--dropdown-link{
  border-top-color:transparent
}

.bx--dropdown--show-selected .bx--dropdown--selected .bx--list-box__menu-item__selected-icon{
  display:block
}

.bx--dropdown-v2.bx--skeleton,.bx--dropdown.bx--skeleton{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none
}

.bx--dropdown-v2.bx--skeleton:hover,.bx--dropdown-v2.bx--skeleton:focus,.bx--dropdown-v2.bx--skeleton:active,.bx--dropdown.bx--skeleton:hover,.bx--dropdown.bx--skeleton:focus,.bx--dropdown.bx--skeleton:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--dropdown-v2.bx--skeleton::before,.bx--dropdown.bx--skeleton::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--dropdown-v2.bx--skeleton::before,.bx--dropdown.bx--skeleton::before{
    -webkit-animation:none;
    animation:none
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--dropdown .bx--list-box__field{
    outline:1px solid transparent
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--list-box__menu-item__option{
    outline:none
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--list-box__menu-item__selected-icon{
    fill:ButtonText
  }
}

@-webkit-keyframes rotate{
  0%{
    transform:rotate(0deg)
  }

  100%{
    transform:rotate(360deg)
  }
}

@keyframes rotate{
  0%{
    transform:rotate(0deg)
  }

  100%{
    transform:rotate(360deg)
  }
}

@-webkit-keyframes rotate-end-p1{
  100%{
    transform:rotate(360deg)
  }
}

@keyframes rotate-end-p1{
  100%{
    transform:rotate(360deg)
  }
}

@-webkit-keyframes rotate-end-p2{
  100%{
    transform:rotate(-360deg)
  }
}

@keyframes rotate-end-p2{
  100%{
    transform:rotate(-360deg)
  }
}

@-webkit-keyframes init-stroke{
  0%{
    stroke-dashoffset:276.4608
  }

  100%{
    stroke-dashoffset:52.527552
  }
}

@keyframes init-stroke{
  0%{
    stroke-dashoffset:276.4608
  }

  100%{
    stroke-dashoffset:52.527552
  }
}

@-webkit-keyframes stroke-end{
  0%{
    stroke-dashoffset:52.527552
  }

  100%{
    stroke-dashoffset:276.4608
  }
}

@keyframes stroke-end{
  0%{
    stroke-dashoffset:52.527552
  }

  100%{
    stroke-dashoffset:276.4608
  }
}

.bx--loading{
  -webkit-animation-duration:690ms;
  animation-duration:690ms;
  -webkit-animation-fill-mode:forwards;
  animation-fill-mode:forwards;
  -webkit-animation-iteration-count:infinite;
  animation-iteration-count:infinite;
  -webkit-animation-name:rotate;
  animation-name:rotate;
  -webkit-animation-timing-function:linear;
  animation-timing-function:linear;
  width:5.5rem;
  height:5.5rem
}

.bx--loading svg circle{
  -webkit-animation-duration:10ms;
  animation-duration:10ms;
  -webkit-animation-name:init-stroke;
  animation-name:init-stroke;
  -webkit-animation-timing-function:cubic-bezier(0.2, 0, 0.38, 0.9);
  animation-timing-function:cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--loading__svg{
  fill:transparent
}

.bx--loading__svg circle{
  stroke-dasharray:276.4608 276.4608;
  stroke-linecap:butt;
  stroke-width:10
}

.bx--loading__stroke{
  stroke:#0f62fe;
  stroke-dashoffset:52.527552
}

.bx--loading--small .bx--loading__stroke{
  stroke-dashoffset:143.759616
}

.bx--loading--stop{
  -webkit-animation:rotate-end-p1 700ms cubic-bezier(0.2, 0, 1, 0.9) forwards,rotate-end-p2 700ms cubic-bezier(0.2, 0, 1, 0.9) 700ms forwards;
  animation:rotate-end-p1 700ms cubic-bezier(0.2, 0, 1, 0.9) forwards,rotate-end-p2 700ms cubic-bezier(0.2, 0, 1, 0.9) 700ms forwards
}

.bx--loading--stop svg circle{
  -webkit-animation-delay:700ms;
  animation-delay:700ms;
  -webkit-animation-duration:700ms;
  animation-duration:700ms;
  -webkit-animation-fill-mode:forwards;
  animation-fill-mode:forwards;
  -webkit-animation-name:stroke-end;
  animation-name:stroke-end;
  -webkit-animation-timing-function:cubic-bezier(0.2, 0, 1, 0.9);
  animation-timing-function:cubic-bezier(0.2, 0, 1, 0.9)
}

.bx--loading--small{
  width:1rem;
  height:1rem
}

.bx--loading--small circle{
  stroke-width:16
}

.bx--loading--small .bx--loading__svg{
  stroke:#0f62fe
}

.bx--loading__background{
  stroke:#e0e0e0;
  stroke-dashoffset:-22
}

@media not all and (-webkit-min-device-pixel-ratio: 0), not all and (min-resolution: 0.001dpcm){
  @supports(-webkit-appearance: none) and (stroke-color: transparent){
    circle.bx--loading__background{
      stroke-dasharray:265;
      stroke-dashoffset:0
    }
  }
}

.bx--loading-overlay{
  position:fixed;
  z-index:6000;
  top:0;
  left:0;
  display:flex;
  width:100%;
  height:100%;
  align-items:center;
  justify-content:center;
  background-color:rgba(22,22,22,.5);
  transition:background-color 720ms cubic-bezier(0.4, 0.14, 0.3, 1)
}

.bx--loading-overlay--stop{
  display:none
}

.bx--file{
  width:100%
}

.bx--file--invalid{
  margin-right:.5rem;
  fill:#da1e28
}

.bx--file--label{
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  margin-bottom:.5rem;
  color:#161616
}

.bx--file--label--disabled{
  color:#c6c6c6
}

.bx--file-input{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap
}

.bx--file-btn{
  display:inline-flex;
  padding-right:4rem;
  margin:0
}

.bx--file-browse-btn{
  display:inline-block;
  width:100%;
  max-width:20rem;
  margin-bottom:.5rem;
  color:#0f62fe;
  cursor:pointer;
  outline:2px solid transparent;
  outline-offset:-2px;
  transition:110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--file-browse-btn:focus,.bx--file-browse-btn:hover{
  outline:2px solid #0f62fe
}

.bx--file-browse-btn:hover,.bx--file-browse-btn:focus,.bx--file-browse-btn:active,.bx--file-browse-btn:active:visited{
  text-decoration:underline
}

.bx--file-browse-btn:active{
  color:#161616
}

.bx--file-browse-btn--disabled{
  color:#c6c6c6;
  cursor:no-drop;
  text-decoration:none
}

.bx--file-browse-btn--disabled:hover,.bx--file-browse-btn--disabled:focus{
  color:#c6c6c6;
  outline:none;
  text-decoration:none
}

.bx--file-browse-btn--disabled .bx--file__drop-container{
  border:1px dashed #c6c6c6
}

.bx--label-description{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  margin-bottom:1rem;
  color:#525252
}

.bx--label-description--disabled{
  color:#c6c6c6
}

.bx--file-btn~.bx--file-container{
  margin-top:1.5rem
}

.bx--btn~.bx--file-container{
  margin-top:1rem
}

.bx--file .bx--file-container,.bx--file~.bx--file-container{
  margin-top:.5rem
}

.bx--file__selected-file{
  display:grid;
  max-width:20rem;
  min-height:3rem;
  align-items:center;
  margin-bottom:.5rem;
  background-color:#fff;
  gap:.75rem 1rem;
  grid-auto-rows:auto;
  grid-template-columns:1fr auto;
  word-break:break-word
}

.bx--file__selected-file:last-child{
  margin-bottom:0
}

.bx--file__selected-file .bx--form-requirement{
  display:block;
  max-height:none;
  margin:0;
  grid-column:1/-1
}

.bx--file__selected-file .bx--inline-loading__animation .bx--loading{
  margin-right:0
}

.bx--file__selected-file .bx--file-filename{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  overflow:hidden;
  margin-left:1rem;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--file__selected-file--field,.bx--file__selected-file--md{
  min-height:2.5rem;
  gap:.5rem 1rem
}

.bx--file__selected-file--sm{
  min-height:2rem;
  gap:.25rem 1rem
}

.bx--file__selected-file--invalid__wrapper{
  outline:2px solid #da1e28;
  outline-offset:-2px;
  max-width:20rem;
  margin-bottom:.5rem;
  background-color:#fff;
  outline-width:1px
}

@media screen and (prefers-contrast){
  .bx--file__selected-file--invalid__wrapper{
    outline-style:dotted
  }
}

.bx--file__selected-file--invalid{
  outline:2px solid #da1e28;
  outline-offset:-2px;
  padding:.75rem 0
}

@media screen and (prefers-contrast){
  .bx--file__selected-file--invalid{
    outline-style:dotted
  }
}

.bx--file__selected-file--invalid.bx--file__selected-file--sm{
  padding:.25rem 0
}

.bx--file__selected-file--invalid.bx--file__selected-file--field,.bx--file__selected-file--invalid.bx--file__selected-file--md{
  padding:.5rem 0
}

.bx--file__selected-file--invalid .bx--form-requirement{
  padding-top:1rem;
  border-top:1px solid #e0e0e0
}

.bx--file__selected-file--invalid.bx--file__selected-file--sm .bx--form-requirement{
  padding-top:.4375rem
}

.bx--file__selected-file--invalid.bx--file__selected-file--field .bx--form-requirement,.bx--file__selected-file--invalid.bx--file__selected-file--md .bx--form-requirement{
  padding-top:.6875rem
}

.bx--file__selected-file--invalid .bx--form-requirement__title,.bx--file__selected-file--invalid .bx--form-requirement__supplement{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  padding:0 1rem
}

.bx--file__selected-file--invalid .bx--form-requirement__title{
  color:#da1e28
}

.bx--file__selected-file--invalid .bx--form-requirement__supplement{
  color:#161616
}

.bx--file__selected-file--invalid+.bx--form-requirement{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  display:block;
  overflow:visible;
  max-height:12.5rem;
  padding:.5rem 1rem;
  color:#da1e28;
  font-weight:400
}

.bx--file__selected-file--invalid+.bx--form-requirement .bx--form-requirement__supplement{
  padding-bottom:.5rem;
  color:#161616
}

.bx--file__state-container{
  display:flex;
  min-width:1.5rem;
  align-items:center;
  justify-content:center;
  padding-right:1rem
}

.bx--file__state-container .bx--loading__svg{
  stroke:#161616
}

.bx--file__state-container .bx--file-complete{
  cursor:pointer;
  fill:#0f62fe
}

.bx--file__state-container .bx--file-complete:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--file__state-container .bx--file-complete:focus{
    outline-style:dotted
  }
}

.bx--file__state-container .bx--file-complete [data-icon-path=inner-path]{
  fill:#fff;
  opacity:1
}

.bx--file__state-container .bx--file-invalid{
  width:1rem;
  height:1rem;
  fill:#da1e28
}

.bx--file__state-container .bx--file-close{
  display:flex;
  width:1.5rem;
  height:1.5rem;
  align-items:center;
  justify-content:center;
  padding:0;
  border:none;
  background-color:transparent;
  cursor:pointer;
  fill:#161616
}

.bx--file__state-container .bx--file-close:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--file__state-container .bx--file-close:focus{
    outline-style:dotted
  }
}

.bx--file__state-container .bx--file-close svg path{
  fill:#161616
}

.bx--file__state-container .bx--inline-loading__animation{
  margin-right:-0.5rem
}

.bx--file__drop-container{
  display:flex;
  overflow:hidden;
  height:6rem;
  align-items:flex-start;
  justify-content:space-between;
  padding:1rem;
  border:1px dashed #8d8d8d
}

.bx--file__drop-container--drag-over{
  background:none;
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--file__selected-file{
    outline:1px solid transparent
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--file__state-container .bx--file-close svg path{
    fill:ButtonText
  }
}

@keyframes rotate{
  0%{
    transform:rotate(0deg)
  }

  100%{
    transform:rotate(360deg)
  }
}

@keyframes rotate-end-p1{
  100%{
    transform:rotate(360deg)
  }
}

@keyframes rotate-end-p2{
  100%{
    transform:rotate(-360deg)
  }
}

@keyframes init-stroke{
  0%{
    stroke-dashoffset:276.4608
  }

  100%{
    stroke-dashoffset:52.527552
  }
}

@keyframes stroke-end{
  0%{
    stroke-dashoffset:52.527552
  }

  100%{
    stroke-dashoffset:276.4608
  }
}

@-webkit-keyframes stroke{
  100%{
    stroke-dashoffset:0
  }
}

@keyframes stroke{
  100%{
    stroke-dashoffset:0
  }
}

.bx--inline-loading{
  display:flex;
  width:100%;
  min-height:2rem;
  align-items:center
}

.bx--inline-loading__text{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  color:#525252
}

.bx--inline-loading__animation{
  position:relative;
  display:flex;
  align-items:center;
  justify-content:center;
  margin-right:.5rem
}

.bx--inline-loading__checkmark-container{
  fill:#198038
}

.bx--inline-loading__checkmark-container.bx--inline-loading__svg{
  position:absolute;
  top:.75rem;
  width:.75rem
}

.bx--inline-loading__checkmark-container[hidden]{
  display:none
}

.bx--inline-loading__checkmark{
  -webkit-animation-duration:250ms;
  animation-duration:250ms;
  -webkit-animation-fill-mode:forwards;
  animation-fill-mode:forwards;
  -webkit-animation-name:stroke;
  animation-name:stroke;
  fill:none;
  stroke:#0f62fe;
  stroke-dasharray:12;
  stroke-dashoffset:12;
  stroke-width:1.8;
  transform-origin:50% 50%
}

.bx--inline-loading--error{
  width:1rem;
  height:1rem;
  fill:#da1e28
}

.bx--inline-loading--error[hidden]{
  display:none
}

.bx--loading--small .bx--inline-loading__svg{
  stroke:#0f62fe
}

@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){
  .bx--inline-loading__checkmark-container{
    top:1px;
    right:.5rem
  }

  .bx--inline-loading__checkmark{
    -webkit-animation:none;
    animation:none;
    stroke-dasharray:0;
    stroke-dashoffset:0
  }
}

.bx--list--nested,.bx--list--unordered,.bx--list--ordered,.bx--list--ordered--native{
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px;
  list-style:none
}

.bx--list--expressive,.bx--list--expressive .bx--list--nested{
  font-size:1rem;
  font-weight:400;
  line-height:1.5;
  letter-spacing:0
}

.bx--list--ordered--native{
  list-style:decimal
}

.bx--list__item{
  color:#161616
}

.bx--list--nested{
  margin-left:2rem
}

.bx--list--nested .bx--list__item{
  padding-left:.25rem
}

.bx--list--ordered:not(.bx--list--nested){
  counter-reset:item
}

.bx--list--ordered:not(.bx--list--nested)>.bx--list__item{
  position:relative
}

.bx--list--ordered:not(.bx--list--nested)>.bx--list__item::before{
  position:absolute;
  left:-1.5rem;
  content:counter(item) ".";
  counter-increment:item
}

.bx--list--ordered.bx--list--nested,.bx--list--ordered--native.bx--list--nested{
  list-style-type:lower-latin
}

.bx--list--unordered>.bx--list__item{
  position:relative
}

.bx--list--unordered>.bx--list__item::before{
  position:absolute;
  left:-1rem;
  content:"\u2013"
}

.bx--list--unordered.bx--list--nested>.bx--list__item::before{
  left:-0.75rem;
  content:"\u25AA"
}

@keyframes rotate{
  0%{
    transform:rotate(0deg)
  }

  100%{
    transform:rotate(360deg)
  }
}

@keyframes rotate-end-p1{
  100%{
    transform:rotate(360deg)
  }
}

@keyframes rotate-end-p2{
  100%{
    transform:rotate(-360deg)
  }
}

@keyframes init-stroke{
  0%{
    stroke-dashoffset:276.4608
  }

  100%{
    stroke-dashoffset:52.527552
  }
}

@keyframes stroke-end{
  0%{
    stroke-dashoffset:52.527552
  }

  100%{
    stroke-dashoffset:276.4608
  }
}

.bx--menu{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  position:fixed;
  z-index:9000;
  min-width:13rem;
  max-width:18rem;
  padding:.25rem 0;
  background-color:#fff;
  visibility:hidden
}

.bx--menu--open{
  visibility:visible
}

.bx--menu--open:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--menu--open:focus{
    outline-style:dotted
  }
}

.bx--menu--invisible{
  opacity:0;
  pointer-events:none
}

.bx--menu-option{
  position:relative;
  height:2rem;
  background-color:#fff;
  color:#161616;
  cursor:pointer;
  transition:background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--menu-option:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--menu-option:focus{
    outline-style:dotted
  }
}

.bx--menu-option--active,.bx--menu-option:hover{
  background-color:#e5e5e5
}

.bx--menu-option--danger:hover,.bx--menu-option--danger:focus{
  background-color:#da1e28;
  color:#fff
}

.bx--menu-option>.bx--menu{
  margin-top:calc(0.25rem * -1)
}

.bx--menu-option__content{
  display:flex;
  height:100%;
  align-items:center;
  justify-content:space-between;
  padding:0 1rem
}

.bx--menu-option__content--disabled{
  background-color:#fff;
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--menu-option__content--disabled .bx--menu-option__label,.bx--menu-option__content--disabled .bx--menu-option__info,.bx--menu-option__content--disabled .bx--menu-option__icon{
  color:#c6c6c6
}

.bx--menu-option__content--indented .bx--menu-option__label{
  margin-left:1rem
}

.bx--menu-option__label{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  overflow:hidden;
  flex-grow:1;
  padding:.25rem 0;
  text-align:start;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--menu-option__info{
  display:inline-flex;
  margin-left:1rem
}

.bx--menu-option__icon{
  display:flex;
  width:1rem;
  height:1rem;
  align-items:center;
  margin-right:.5rem
}

.bx--menu-divider{
  width:100%;
  height:1px;
  margin:.25rem 0;
  background-color:#e0e0e0
}

.bx--menu--md .bx--menu-option{
  height:2.5rem
}

.bx--menu--lg .bx--menu-option{
  height:3rem
}

.bx--modal{
  position:fixed;
  z-index:9000;
  top:0;
  left:0;
  display:flex;
  width:100vw;
  height:100vh;
  align-items:center;
  justify-content:center;
  background-color:rgba(22,22,22,.5);
  content:"";
  opacity:0;
  transition:opacity 240ms cubic-bezier(0.4, 0.14, 1, 1),visibility 0ms linear 240ms;
  visibility:hidden
}

.bx--modal.is-visible{
  opacity:1;
  transition:opacity 240ms cubic-bezier(0, 0, 0.3, 1),visibility 0ms linear;
  visibility:inherit
}

.bx--modal .bx--pagination,.bx--modal .bx--pagination__control-buttons,.bx--modal .bx--text-input,.bx--modal .bx--text-area,.bx--modal .bx--search-input,.bx--modal .bx--select-input,.bx--modal .bx--dropdown,.bx--modal .bx--dropdown-list,.bx--modal .bx--number input[type=number],.bx--modal .bx--date-picker__input,.bx--modal .bx--multi-select{
  background-color:#f4f4f4
}

.bx--modal.is-visible .bx--modal-container{
  transform:translate3d(0, 0, 0);
  transition:transform 240ms cubic-bezier(0, 0, 0.3, 1)
}

.bx--modal-container{
  position:fixed;
  top:0;
  display:grid;
  overflow:hidden;
  width:100%;
  height:100%;
  max-height:100%;
  background-color:#fff;
  grid-template-columns:100%;
  grid-template-rows:auto 1fr auto;
  outline:3px solid transparent;
  outline-offset:-3px;
  transform:translate3d(0, -24px, 0);
  transform-origin:top center;
  transition:transform 240ms cubic-bezier(0.4, 0.14, 1, 1)
}

@media(min-width: 42rem){
  .bx--modal-container{
    position:static;
    width:84%;
    height:auto;
    max-height:90%
  }
}

@media(min-width: 66rem){
  .bx--modal-container{
    width:60%;
    max-height:84%
  }
}

@media(min-width: 82rem){
  .bx--modal-container{
    width:48%
  }
}

.bx--modal-content{
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px;
  position:relative;
  padding-top:.5rem;
  padding-right:1rem;
  padding-left:1rem;
  margin-bottom:3rem;
  color:#161616;
  font-weight:400;
  grid-column:1/-1;
  grid-row:2/-2;
  overflow-y:auto
}

.bx--modal-content:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--modal-content:focus{
    outline-style:dotted
  }
}

.bx--modal-content p,.bx--modal-content__regular-content{
  padding-right:20%;
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px
}

.bx--modal-content--with-form{
  padding-right:1rem
}

.bx--modal-header{
  padding-top:1rem;
  padding-right:3rem;
  padding-left:1rem;
  margin-bottom:.5rem;
  grid-column:1/-1;
  grid-row:1/1
}

.bx--modal-header__label{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  margin-bottom:.25rem;
  color:#525252
}

.bx--modal-header__heading{
  font-size:1.25rem;
  font-weight:400;
  line-height:1.4;
  letter-spacing:0;
  color:#161616
}

.bx--modal-container--xs .bx--modal-content__regular-content{
  padding-right:1rem
}

.bx--modal-container--xs .bx--modal-content p{
  padding-right:0
}

@media(min-width: 42rem){
  .bx--modal-container--xs{
    width:48%
  }
}

@media(min-width: 66rem){
  .bx--modal-container--xs{
    width:32%;
    max-height:48%
  }
}

@media(min-width: 82rem){
  .bx--modal-container--xs{
    width:24%
  }
}

.bx--modal-container--sm .bx--modal-content__regular-content{
  padding-right:1rem
}

.bx--modal-container--sm .bx--modal-content p{
  padding-right:0
}

@media(min-width: 42rem){
  .bx--modal-container--sm{
    width:60%
  }
}

@media(min-width: 66rem){
  .bx--modal-container--sm{
    width:42%;
    max-height:72%
  }

  .bx--modal-container--sm .bx--modal-content p,.bx--modal-container--sm .bx--modal-content__regular-content{
    padding-right:20%
  }
}

@media(min-width: 82rem){
  .bx--modal-container--sm{
    width:36%
  }
}

@media(min-width: 42rem){
  .bx--modal-container--lg{
    width:96%
  }
}

@media(min-width: 66rem){
  .bx--modal-container--lg{
    width:84%;
    max-height:96%
  }
}

@media(min-width: 82rem){
  .bx--modal-container--lg{
    width:72%
  }
}

.bx--modal-scroll-content>*:last-child{
  padding-bottom:2rem
}

.bx--modal-content--overflow-indicator{
  position:absolute;
  bottom:3rem;
  left:0;
  width:100%;
  height:2rem;
  background-image:linear-gradient(to bottom, rgba(255, 255, 255, 0), #ffffff);
  content:"";
  grid-column:1/-1;
  grid-row:2/-2;
  pointer-events:none
}

@media not all and (-webkit-min-device-pixel-ratio: 0), not all and (min-resolution: 0.001dpcm){
  @supports(-webkit-appearance: none) and (stroke-color: transparent){
    .bx--modal-content--overflow-indicator{
      background-image:linear-gradient(to bottom, rgba(255, 255, 255, 0), #ffffff)
    }
  }
}

.bx--modal-content:focus~.bx--modal-content--overflow-indicator{
  width:calc(100% - 4px);
  margin:0 2px 2px
}

@media screen and (-ms-high-contrast: active){
  .bx--modal-scroll-content>*:last-child{
    padding-bottom:0
  }

  .bx--modal-content--overflow-indicator{
    display:none
  }
}

.bx--modal-footer{
  display:flex;
  height:4rem;
  justify-content:flex-end;
  margin-top:auto;
  grid-column:1/-1;
  grid-row:-1/-1
}

.bx--modal-footer .bx--btn{
  max-width:none;
  height:4rem;
  flex:0 1 50%;
  padding-top:1rem;
  padding-bottom:2rem;
  margin:0
}

.bx--modal-footer--three-button .bx--btn{
  flex:0 1 25%;
  align-items:flex-start
}

.bx--modal-close{
  position:absolute;
  z-index:2;
  top:0;
  right:0;
  overflow:hidden;
  width:3rem;
  height:3rem;
  padding:.75rem;
  border:2px solid transparent;
  background-color:transparent;
  cursor:pointer;
  transition:background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--modal-close:hover{
  background-color:#e5e5e5
}

.bx--modal-close:focus{
  border-color:#0f62fe;
  outline:none
}

.bx--modal-close::-moz-focus-inner{
  border:0
}

.bx--modal-close__icon{
  width:1.25rem;
  height:1.25rem;
  fill:#161616
}

.bx--body--with-modal-open{
  overflow:hidden
}

.bx--body--with-modal-open .bx--tooltip,.bx--body--with-modal-open .bx--overflow-menu-options{
  z-index:9000
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--modal-close__icon{
    fill:ButtonText
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--modal-close:focus{
    color:Highlight;
    outline:1px solid Highlight
  }
}

.bx--multi-select .bx--tag{
  min-width:auto;
  margin:0 .5rem 0 0
}

.bx--multi-select--filterable .bx--tag{
  margin:0 .5rem 0 1rem
}

.bx--multi-select .bx--list-box__menu{
  min-width:auto
}

.bx--multi-select .bx--list-box__menu-item__option .bx--checkbox-wrapper{
  display:flex;
  width:100%;
  height:100%;
  align-items:center
}

.bx--multi-select .bx--list-box__menu-item__option .bx--checkbox-label{
  display:inline-block;
  overflow:hidden;
  width:100%;
  padding-left:1.75rem;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--multi-select .bx--list-box__menu-item__option>.bx--form-item{
  flex-direction:row;
  margin:0
}

.bx--multi-select .bx--list-box__menu-item .bx--checkbox:checked~.bx--checkbox-label-text{
  color:#161616
}

.bx--multi-select--filterable{
  transition:outline-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--multi-select--filterable.bx--combo-box .bx--text-input{
  border:.125rem solid transparent;
  background-clip:padding-box;
  outline:none
}

.bx--multi-select--filterable--input-focused{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--multi-select--filterable--input-focused{
    outline-style:dotted
  }
}

.bx--multi-select--filterable.bx--multi-select--selected .bx--text-input{
  padding-left:0
}

.bx--multi-select--filterable.bx--list-box--disabled:hover .bx--text-input{
  background-color:#fff
}

.bx--multi-select--filterable .bx--list-box__selection--multi{
  margin:0 0 0 1rem
}

.bx--multi-select--filterable.bx--multi-select--inline,.bx--multi-select--filterable.bx--multi-select--inline .bx--text-input{
  border-bottom:0;
  background-color:transparent
}

.bx--number{
  position:relative;
  display:flex;
  width:100%;
  flex-direction:column
}

.bx--number input[type=number]{
  font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace;
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  outline:2px solid transparent;
  outline-offset:-2px;
  display:inline-flex;
  width:100%;
  min-width:9.375rem;
  height:2.5rem;
  box-sizing:border-box;
  padding-right:8rem;
  padding-left:1rem;
  border:0;
  border-bottom:.0625rem solid #8d8d8d;
  -moz-appearance:textfield;
  background-color:#fff;
  border-radius:0;
  color:#161616;
  font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace;
  font-weight:300;
  transition:background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--number input[type=number]:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--number input[type=number]:focus{
    outline-style:dotted
  }
}

.bx--number input[type=number]:disabled~.bx--number__controls{
  cursor:not-allowed;
  pointer-events:none
}

.bx--number input[type=number]:disabled~.bx--number__controls svg{
  fill:#c6c6c6
}

.bx--number input[type=number]::-ms-clear{
  display:none
}

.bx--number input[type=number]::-webkit-inner-spin-button{
  -webkit-appearance:none;
  appearance:none
}

.bx--number--xl.bx--number input[type=number],.bx--number--lg.bx--number input[type=number]{
  padding-right:9rem
}

.bx--number--sm.bx--number input[type=number]{
  padding-right:7rem
}

.bx--number input[type=number]:disabled{
  border-bottom-color:transparent;
  background-color:#fff;
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--number__input-wrapper{
  position:relative;
  display:flex;
  align-items:center
}

.bx--number__controls{
  position:absolute;
  top:50%;
  right:0;
  display:flex;
  width:5rem;
  height:100%;
  flex-direction:row;
  align-items:center;
  justify-content:center;
  transform:translateY(-50%)
}

.bx--number__control-btn{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  position:relative;
  display:inline-flex;
  height:100%;
  align-items:center;
  justify-content:center;
  border-bottom:.0625rem solid #8d8d8d;
  color:#161616
}

.bx--number__control-btn::-moz-focus-inner{
  border:0
}

.bx--number__control-btn::before,.bx--number__control-btn::after{
  position:absolute;
  top:.125rem;
  display:block;
  width:.125rem;
  height:2.25rem;
  background-color:#fff;
  content:""
}

.bx--number__control-btn::before{
  left:0
}

.bx--number__control-btn::after{
  right:0
}

.bx--number__control-btn svg{
  fill:currentColor
}

.bx--number__control-btn:focus{
  outline:1px solid #0f62fe;
  color:#161616;
  outline-offset:-2px;
  outline-width:2px
}

@media screen and (prefers-contrast){
  .bx--number__control-btn:focus{
    outline-style:dotted
  }
}

.bx--number__control-btn:hover{
  background-color:#e5e5e5;
  color:#161616;
  cursor:pointer
}

.bx--number__control-btn:hover::before,.bx--number__control-btn:hover::after{
  background-color:#e5e5e5
}

.bx--number__control-btn:focus::before,.bx--number__control-btn:focus::after,.bx--number__control-btn:hover:focus::before,.bx--number__control-btn:hover:focus::after{
  background-color:transparent
}

.bx--number__control-btn:disabled{
  border-bottom-color:transparent;
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--number__control-btn.down-icon{
  order:1
}

.bx--number__control-btn.up-icon{
  order:2
}

.bx--number input[type=number]:focus~.bx--number__controls .bx--number__control-btn{
  border-bottom-width:0
}

.bx--number input[type=number]:focus~.bx--number__controls .bx--number__control-btn:hover{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  border:0
}

@media screen and (prefers-contrast){
  .bx--number input[type=number]:focus~.bx--number__controls .bx--number__control-btn:hover{
    outline-style:dotted
  }
}

.bx--number input[type=number][data-invalid]~.bx--number__controls .bx--number__control-btn{
  border-bottom-width:0
}

.bx--number input[type=number][data-invalid]:not(:focus)~.bx--number__controls .bx--number__control-btn:hover{
  outline:2px solid #da1e28;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--number input[type=number][data-invalid]:not(:focus)~.bx--number__controls .bx--number__control-btn:hover{
    outline-style:dotted
  }
}

.bx--number input[type=number]:focus~.bx--number__controls .bx--number__control-btn.up-icon::after{
  background-color:transparent
}

.bx--number input[type=number][data-invalid]~.bx--number__controls .bx--number__control-btn.up-icon::after{
  background-color:#da1e28
}

.bx--number input[type=number][data-invalid]:focus~.bx--number__controls .bx--number__control-btn.up-icon::after,.bx--number input[type=number][data-invalid]~.bx--number__controls .bx--number__control-btn.up-icon:focus::after{
  background-color:#0f62fe
}

.bx--number__rule-divider{
  position:absolute;
  z-index:6000;
  width:.0625rem;
  height:1rem;
  background-color:#e0e0e0
}

.bx--number__rule-divider:first-of-type{
  order:0
}

.bx--number__controls .bx--number__rule-divider:first-of-type{
  left:0;
  background-color:transparent
}

.bx--number__invalid+.bx--number__controls .bx--number__rule-divider:first-of-type{
  background-color:#e0e0e0
}

.bx--number--light .bx--number__rule-divider,.bx--number--light .bx--number__invalid+.bx--number__controls .bx--number__rule-divider:first-of-type{
  background-color:#e0e0e0
}

.bx--number input[type=number]:disabled+.bx--number__controls .bx--number__rule-divider:first-of-type{
  background-color:transparent
}

.bx--number input[type=number]:disabled+.bx--number__controls .bx--number__rule-divider{
  background-color:#c6c6c6
}

.bx--number__control-btn:focus~.bx--number__rule-divider{
  background-color:transparent
}

.bx--number__invalid{
  position:absolute;
  right:6rem;
  fill:#da1e28
}

.bx--number--xl .bx--number__invalid,.bx--number--lg .bx--number__invalid{
  right:7rem
}

.bx--number--sm .bx--number__invalid{
  right:5rem
}

.bx--number__invalid+.bx--number__rule-divider{
  position:absolute;
  right:5rem
}

.bx--number--xl .bx--number__invalid+.bx--number__rule-divider,.bx--number--lg .bx--number__invalid+.bx--number__rule-divider{
  right:6rem
}

.bx--number--sm .bx--number__invalid+.bx--number__rule-divider{
  right:4rem
}

.bx--number__control-btn.down-icon:hover~.bx--number__rule-divider,.bx--number__control-btn.up-icon:hover+.bx--number__rule-divider,.bx--number__control-btn.down-icon:focus~.bx--number__rule-divider,.bx--number__control-btn.up-icon:focus+.bx--number__rule-divider{
  background-color:transparent
}

.bx--number__invalid--warning{
  fill:#f1c21b
}

.bx--number__invalid--warning path:first-of-type{
  fill:#000;
  opacity:1
}

.bx--number--light input[type=number]{
  background-color:#f4f4f4
}

.bx--number--light input[type=number]:disabled{
  background-color:#f4f4f4
}

.bx--number--light .bx--number__control-btn::before,.bx--number--light .bx--number__control-btn::after{
  background-color:#f4f4f4
}

.bx--number--light .bx--number__control-btn:focus::before,.bx--number--light .bx--number__control-btn:focus::after{
  background-color:transparent
}

.bx--number--light .bx--number__control-btn:hover,.bx--number--light .bx--number__control-btn:not(:focus):hover::before,.bx--number--light .bx--number__control-btn:not(:focus):hover::after{
  background-color:#e5e5e5
}

.bx--number--xl input[type=number],.bx--number--lg input[type=number]{
  height:3rem
}

.bx--number--xl .bx--number__controls,.bx--number--lg .bx--number__controls{
  width:6rem
}

.bx--number--xl .bx--number__control-btn,.bx--number--lg .bx--number__control-btn{
  width:3rem
}

.bx--number--xl .bx--number__control-btn::before,.bx--number--xl .bx--number__control-btn::after,.bx--number--lg .bx--number__control-btn::before,.bx--number--lg .bx--number__control-btn::after{
  height:2.75rem
}

.bx--number--sm input[type=number]{
  height:2rem
}

.bx--number--sm .bx--number__controls{
  width:4rem
}

.bx--number--sm .bx--number__control-btn{
  width:2rem
}

.bx--number--sm .bx--number__control-btn::before,.bx--number--sm .bx--number__control-btn::after{
  height:1.75rem
}

.bx--number--nolabel .bx--label+.bx--form__helper-text{
  margin-top:0
}

.bx--number--nosteppers input[type=number]{
  padding-right:3rem
}

.bx--number--nosteppers .bx--number__invalid{
  right:1rem
}

.bx--number--readonly input[type=number]{
  background:transparent
}

.bx--number--readonly .bx--number__controls{
  display:none
}

.bx--number__readonly-icon{
  position:absolute;
  right:1rem
}

.bx--number.bx--skeleton{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:100%;
  height:2.5rem
}

.bx--number.bx--skeleton:hover,.bx--number.bx--skeleton:focus,.bx--number.bx--skeleton:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--number.bx--skeleton::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--number.bx--skeleton::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--number.bx--skeleton input[type=number]{
  display:none
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--number__control-btn:hover,.bx--number__control-btn:focus{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--number__control-btn{
    outline:1px solid transparent
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--number__control-btn svg{
    fill:ButtonText
  }
}

.bx--overflow-menu,.bx--overflow-menu__trigger{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  outline:2px solid transparent;
  outline-offset:-2px;
  position:relative;
  display:flex;
  width:2.5rem;
  height:2.5rem;
  align-items:center;
  justify-content:center;
  cursor:pointer;
  transition:outline 110ms cubic-bezier(0, 0, 0.38, 0.9),background-color 110ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--overflow-menu::-moz-focus-inner,.bx--overflow-menu__trigger::-moz-focus-inner{
  border:0
}

.bx--overflow-menu:focus,.bx--overflow-menu__trigger:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--overflow-menu:focus,.bx--overflow-menu__trigger:focus{
    outline-style:dotted
  }
}

.bx--overflow-menu:hover,.bx--overflow-menu__trigger:hover{
  background-color:#e5e5e5
}

.bx--overflow-menu--sm{
  width:2rem;
  height:2rem
}

.bx--overflow-menu--xl,.bx--overflow-menu--lg{
  width:3rem;
  height:3rem
}

.bx--overflow-menu__trigger.bx--tooltip--a11y.bx--tooltip__trigger:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--overflow-menu__trigger.bx--tooltip--a11y.bx--tooltip__trigger:focus{
    outline-style:dotted
  }
}

.bx--overflow-menu__trigger.bx--tooltip--a11y.bx--tooltip__trigger:focus svg{
  outline:none
}

.bx--overflow-menu.bx--overflow-menu--open,.bx--overflow-menu.bx--overflow-menu--open .bx--overflow-menu__trigger{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  background-color:#fff;
  transition:none
}

.bx--overflow-menu--light.bx--overflow-menu--open,.bx--overflow-menu--light.bx--overflow-menu--open .bx--overflow-menu__trigger{
  background-color:#f4f4f4
}

.bx--overflow-menu__icon{
  width:1rem;
  height:1rem;
  fill:#161616
}

.bx--overflow-menu-options{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  position:absolute;
  z-index:6000;
  top:32px;
  left:0;
  display:none;
  width:10rem;
  flex-direction:column;
  align-items:flex-start;
  background-color:#fff;
  list-style:none
}

.bx--overflow-menu-options::after{
  position:absolute;
  display:block;
  background-color:#fff;
  content:"";
  transition:background-color 110ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--overflow-menu.bx--overflow-menu--open:hover{
  background-color:#fff
}

.bx--overflow-menu-options--light{
  background-color:#f4f4f4
}

.bx--overflow-menu-options--light::after{
  background-color:#f4f4f4
}

.bx--overflow-menu.bx--overflow-menu--light.bx--overflow-menu--open:hover{
  background-color:#f4f4f4
}

.bx--overflow-menu-options[data-floating-menu-direction=bottom]::after{
  top:-0.1875rem;
  left:0;
  width:2.5rem;
  height:.1875rem
}

.bx--overflow-menu-options[data-floating-menu-direction=top]::after{
  bottom:-0.5rem;
  left:0;
  width:2.5rem;
  height:.5rem
}

.bx--overflow-menu-options[data-floating-menu-direction=left]::after{
  top:0;
  right:-0.375rem;
  width:.375rem;
  height:2.5rem
}

.bx--overflow-menu-options[data-floating-menu-direction=right]::after{
  top:0;
  left:-0.375rem;
  width:.375rem;
  height:2.5rem
}

.bx--overflow-menu-options--sm.bx--overflow-menu-options[data-floating-menu-direction=bottom]::after,.bx--overflow-menu-options--sm.bx--overflow-menu-options[data-floating-menu-direction=top]::after{
  width:2rem
}

.bx--overflow-menu-options--sm.bx--overflow-menu-options[data-floating-menu-direction=left]::after,.bx--overflow-menu-options--sm.bx--overflow-menu-options[data-floating-menu-direction=right]::after{
  height:2rem
}

.bx--overflow-menu-options--xl.bx--overflow-menu-options[data-floating-menu-direction=bottom]::after,.bx--overflow-menu-options--xl.bx--overflow-menu-options[data-floating-menu-direction=top]::after,.bx--overflow-menu-options--lg.bx--overflow-menu-options[data-floating-menu-direction=bottom]::after,.bx--overflow-menu-options--lg.bx--overflow-menu-options[data-floating-menu-direction=top]::after{
  width:3rem
}

.bx--overflow-menu-options--xl.bx--overflow-menu-options[data-floating-menu-direction=left]::after,.bx--overflow-menu-options--xl.bx--overflow-menu-options[data-floating-menu-direction=right]::after,.bx--overflow-menu-options--lg.bx--overflow-menu-options[data-floating-menu-direction=left]::after,.bx--overflow-menu-options--lg.bx--overflow-menu-options[data-floating-menu-direction=right]::after{
  height:3rem
}

.bx--overflow-menu--flip.bx--overflow-menu-options[data-floating-menu-direction=top]::after,.bx--overflow-menu--flip.bx--overflow-menu-options[data-floating-menu-direction=bottom]::after{
  right:0;
  left:auto
}

.bx--overflow-menu--flip.bx--overflow-menu-options[data-floating-menu-direction=left]::after,.bx--overflow-menu--flip.bx--overflow-menu-options[data-floating-menu-direction=right]::after{
  top:auto;
  bottom:0
}

.bx--overflow-menu-options--open{
  display:flex
}

.bx--overflow-menu-options__content{
  width:100%
}

.bx--overflow-menu-options__option{
  display:flex;
  width:100%;
  height:2.5rem;
  align-items:center;
  padding:0;
  background-color:transparent;
  transition:background-color 110ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--overflow-menu-options--sm .bx--overflow-menu-options__option{
  height:2rem
}

.bx--overflow-menu-options--xl .bx--overflow-menu-options__option,.bx--overflow-menu-options--lg .bx--overflow-menu-options__option{
  height:3rem
}

.bx--overflow-menu--divider{
  border-top:1px solid #e0e0e0
}

.bx--overflow-menu--light .bx--overflow-menu--divider{
  border-top:1px solid #e0e0e0
}

a.bx--overflow-menu-options__btn::before{
  display:inline-block;
  height:100%;
  content:"";
  vertical-align:middle
}

.bx--overflow-menu-options__btn{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  outline:2px solid transparent;
  outline-offset:-2px;
  display:inline-flex;
  width:100%;
  max-width:11.25rem;
  height:100%;
  align-items:center;
  padding:0 1rem;
  border:none;
  background-color:transparent;
  color:#525252;
  cursor:pointer;
  font-weight:400;
  text-align:left;
  transition:outline 110ms cubic-bezier(0, 0, 0.38, 0.9),background-color 110ms cubic-bezier(0, 0, 0.38, 0.9),color 110ms cubic-bezier(0, 0, 0.38, 0.9)
}

.bx--overflow-menu-options__btn:hover{
  color:#161616
}

.bx--overflow-menu-options__btn:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--overflow-menu-options__btn:focus{
    outline-style:dotted
  }
}

.bx--overflow-menu-options__btn::-moz-focus-inner{
  border:none
}

.bx--overflow-menu-options__btn svg{
  fill:#525252
}

.bx--overflow-menu-options__btn:hover svg{
  fill:#161616
}

.bx--overflow-menu-options__option-content{
  overflow:hidden;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--overflow-menu-options__option:hover{
  background-color:#e5e5e5
}

.bx--overflow-menu-options__option--danger .bx--overflow-menu-options__btn:hover,.bx--overflow-menu-options__option--danger .bx--overflow-menu-options__btn:focus{
  background-color:#da1e28;
  color:#fff
}

.bx--overflow-menu-options__option--danger .bx--overflow-menu-options__btn:hover svg,.bx--overflow-menu-options__option--danger .bx--overflow-menu-options__btn:focus svg{
  fill:currentColor
}

.bx--overflow-menu-options__option--disabled:hover{
  background-color:#fff;
  cursor:not-allowed
}

.bx--overflow-menu-options__option--disabled .bx--overflow-menu-options__btn{
  color:#c6c6c6;
  pointer-events:none
}

.bx--overflow-menu-options__option--disabled .bx--overflow-menu-options__btn:hover,.bx--overflow-menu-options__option--disabled .bx--overflow-menu-options__btn:active,.bx--overflow-menu-options__option--disabled .bx--overflow-menu-options__btn:focus{
  outline:2px solid transparent;
  outline-offset:-2px;
  background-color:#fff
}

.bx--overflow-menu-options__option--disabled .bx--overflow-menu-options__btn svg{
  fill:#c6c6c6
}

.bx--overflow-menu--flip{
  left:-140px
}

.bx--overflow-menu--flip::before{
  left:145px
}

.bx--overflow-menu__container{
  display:inline-block
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--overflow-menu:focus,.bx--overflow-menu-options__btn:focus{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--overflow-menu svg{
    fill:ButtonText
  }
}

.bx--pagination-nav{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  line-height:0
}

.bx--pagination-nav__list{
  display:flex;
  align-items:center;
  list-style:none
}

.bx--pagination-nav__list-item{
  padding:0
}

.bx--pagination-nav__list-item:first-child{
  padding-left:0
}

.bx--pagination-nav__list-item:last-child{
  padding-right:0
}

.bx--pagination-nav__page{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  position:relative;
  display:block;
  min-width:3rem;
  padding:1.0625rem .25rem;
  border-radius:0;
  color:#525252;
  font-weight:400;
  line-height:1;
  outline:0;
  text-align:center;
  text-decoration:none;
  transition:background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9),color 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none
}

.bx--pagination-nav__page::-moz-focus-inner{
  border:0
}

.bx--pagination-nav__page:hover{
  background-color:#e5e5e5;
  color:#525252
}

.bx--pagination-nav__page:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--pagination-nav__page:focus{
    outline-style:dotted
  }
}

.bx--pagination-nav__page:disabled,.bx--pagination-nav__page.bx--pagination-nav__page--disabled{
  background:none;
  color:rgba(82,82,82,.5);
  outline:none;
  pointer-events:none
}

.bx--pagination-nav__page:not(.bx--pagination-nav__page--direction)::after{
  position:absolute;
  bottom:0;
  left:50%;
  display:block;
  width:0;
  height:.25rem;
  background-color:#0f62fe;
  content:"";
  opacity:0;
  transition:width 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--pagination-nav__page--active+.bx--pagination-nav__page::after,.bx--pagination-nav__page.bx--pagination-nav__page--active::after{
  left:calc(50% - 0.5rem);
  width:1rem;
  opacity:1
}

.bx--pagination-nav__page.bx--pagination-nav__page--active{
  background-color:initial;
  color:#525252;
  font-weight:600
}

.bx--pagination-nav__page .bx--pagination-nav__icon{
  fill:currentColor;
  pointer-events:none
}

.bx--pagination-nav__page--direction{
  display:flex;
  width:3rem;
  height:3rem;
  align-items:center;
  justify-content:center;
  line-height:0
}

.bx--pagination-nav__select{
  position:relative
}

.bx--pagination-nav__page--select{
  max-height:3rem;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  text-indent:calc(50% - 4.5px)
}

@-moz-document url-prefix(){
  .bx--pagination-nav__page--select{
    text-indent:0
  }
}

.bx--pagination-nav__select-icon-wrapper{
  position:absolute;
  top:0;
  width:100%;
  height:100%;
  pointer-events:none
}

.bx--pagination-nav__select-icon-wrapper:not(.bx--pagination-nav__page--direction)::after{
  position:absolute;
  bottom:0;
  left:50%;
  display:block;
  width:0;
  height:.25rem;
  background-color:#0f62fe;
  content:"";
  opacity:0;
  transition:width 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--pagination-nav__page--active+.bx--pagination-nav__select-icon-wrapper::after,.bx--pagination-nav__select-icon-wrapper.bx--pagination-nav__page--active::after{
  left:calc(50% - 0.5rem);
  width:1rem;
  opacity:1
}

.bx--pagination-nav__page--active+.bx--pagination-nav__select-icon-wrapper .bx--pagination-nav__select-icon{
  display:none
}

.bx--pagination-nav__select-icon{
  position:absolute;
  top:calc(50% - 0.5rem);
  left:calc(50% - 0.5rem);
  pointer-events:none
}

.bx--pagination-nav__accessibility-label{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap
}

.bx--select{
  position:relative;
  display:flex;
  width:100%;
  flex-direction:column;
  align-items:flex-start
}

.bx--select-input__wrapper{
  position:relative;
  display:flex;
  width:100%;
  align-items:center
}

.bx--select-input{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  outline:2px solid transparent;
  outline-offset:-2px;
  display:block;
  width:100%;
  height:2.5rem;
  padding:0 3rem 0 1rem;
  border:none;
  border-bottom:1px solid #8d8d8d;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background-color:#fff;
  border-radius:0;
  color:#161616;
  cursor:pointer;
  font-family:inherit;
  opacity:1;
  transition:outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--select-input:hover{
  background-color:#e5e5e5
}

.bx--select-input::-ms-expand{
  display:none
}

@-moz-document url-prefix(){
  .bx--select-input:-moz-focusring,.bx--select-input::-moz-focus-inner{
    background-image:none;
    color:transparent;
    text-shadow:0 0 0 #000
  }
}

.bx--select-input:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  color:#161616
}

@media screen and (prefers-contrast){
  .bx--select-input:focus{
    outline-style:dotted
  }
}

.bx--select-input:disabled,.bx--select-input:hover:disabled{
  border-bottom-color:#fff;
  background-color:#fff;
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--select-input--sm{
  height:2rem;
  max-height:2rem
}

.bx--select-input--xl,.bx--select-input--lg{
  height:3rem;
  max-height:3rem
}

.bx--select--disabled .bx--label,.bx--select--disabled .bx--form__helper-text{
  color:#c6c6c6
}

.bx--select-input__wrapper[data-invalid] .bx--select-input,.bx--select--warning .bx--select-input{
  padding-right:4.5rem
}

.bx--select-input:disabled~.bx--select__arrow{
  fill:#c6c6c6
}

.bx--select--light .bx--select-input{
  background-color:#f4f4f4
}

.bx--select--light .bx--select-input:hover{
  background-color:#e5e5e5
}

.bx--select--light .bx--select-input:disabled,.bx--select--light .bx--select-input:hover:disabled{
  background-color:#f4f4f4;
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--select__arrow{
  position:absolute;
  top:0;
  right:1rem;
  height:100%;
  fill:#161616;
  pointer-events:none
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--select__arrow path{
    fill:ButtonText
  }
}

.bx--select__invalid-icon{
  position:absolute;
  right:2.5rem
}

.bx--select-input__wrapper[data-invalid] .bx--select-input~.bx--select__invalid-icon{
  fill:#da1e28
}

.bx--select__invalid-icon--warning{
  fill:#f1c21b
}

.bx--select__invalid-icon--warning path[fill]{
  fill:#000;
  opacity:1
}

optgroup.bx--select-optgroup,.bx--select-option{
  background-color:#e5e5e5;
  color:#161616
}

optgroup.bx--select-optgroup:disabled,.bx--select-option:disabled{
  color:#c6c6c6
}

.bx--select--inline{
  display:flex;
  flex-direction:row;
  align-items:center
}

.bx--select--inline.bx--select--invalid .bx--label,.bx--select--inline.bx--select--invalid .bx--form__helper-text{
  align-self:flex-start;
  margin-top:.8125rem
}

.bx--select--inline .bx--form__helper-text{
  margin-bottom:0;
  margin-left:.5rem
}

.bx--select--inline .bx--label{
  margin:0 .5rem 0 0;
  white-space:nowrap
}

.bx--select--inline .bx--select-input{
  width:auto;
  padding-right:2rem;
  padding-left:.5rem;
  border-bottom:none;
  background-color:transparent;
  color:#161616
}

.bx--select--inline .bx--select-input:focus,.bx--select--inline .bx--select-input:focus option,.bx--select--inline .bx--select-input:focus optgroup{
  background-color:#f4f4f4
}

.bx--select--inline .bx--select-input[disabled],.bx--select--inline .bx--select-input[disabled]:hover{
  background-color:#fff
}

.bx--select--inline .bx--select__arrow{
  right:.5rem
}

.bx--select--inline.bx--select--invalid .bx--select-input{
  padding-right:3.5rem
}

.bx--select--inline.bx--select--invalid .bx--select-input~.bx--select__invalid-icon{
  right:2rem
}

.bx--select--inline .bx--select-input:disabled{
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--select--inline .bx--select-input:disabled~*{
  cursor:not-allowed
}

.bx--select.bx--skeleton{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:100%;
  height:2.5rem
}

.bx--select.bx--skeleton:hover,.bx--select.bx--skeleton:focus,.bx--select.bx--skeleton:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--select.bx--skeleton::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--select.bx--skeleton::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--select.bx--skeleton .bx--select-input{
  display:none
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--select__arrow{
    fill:ButtonText
  }
}

.bx--text-input{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  outline:2px solid transparent;
  outline-offset:-2px;
  width:100%;
  height:2.5rem;
  padding:0 1rem;
  border:none;
  border-bottom:1px solid #8d8d8d;
  background-color:#fff;
  color:#161616;
  transition:background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--text-input:focus,.bx--text-input:active{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--text-input:focus,.bx--text-input:active{
    outline-style:dotted
  }
}

.bx--text-input-wrapper svg[hidden]{
  display:none
}

.bx--text-input--xl,.bx--text-input--lg{
  height:3rem
}

.bx--text-input--sm{
  height:2rem
}

.bx--password-input{
  padding-right:2.5rem
}

.bx--text-input--sm.bx--password-input{
  padding-right:2rem
}

.bx--text-input--lg.bx--password-input{
  padding-right:3rem
}

.bx--text-input::-moz-placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--text-input:-ms-input-placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--text-input::placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--text-input--light{
  background-color:#f4f4f4
}

.bx--text-input__field-wrapper{
  position:relative;
  display:flex;
  width:100%
}

.bx--text-input__invalid-icon,.bx--text-input__readonly-icon{
  position:absolute;
  top:50%;
  right:1rem;
  transform:translateY(-50%)
}

.bx--text-input__invalid-icon{
  fill:#da1e28
}

.bx--text-input__invalid-icon--warning{
  fill:#f1c21b
}

.bx--text-input__invalid-icon--warning path:first-of-type{
  fill:#000;
  opacity:1
}

.bx--text-input--password__visibility{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:pointer
}

.bx--text-input--password__visibility:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--text-input--password__visibility:focus{
    outline-style:dotted
  }
}

.bx--text-input--password__visibility:focus{
  outline:1px solid transparent
}

.bx--text-input--password__visibility:focus svg{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--text-input--password__visibility:focus svg{
    outline-style:dotted
  }
}

.bx--text-input--password__visibility::before,.bx--text-input--password__visibility::after,.bx--text-input--password__visibility .bx--assistive-text,.bx--text-input--password__visibility+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--text-input--password__visibility::before,.bx--text-input--password__visibility::after,.bx--text-input--password__visibility .bx--assistive-text,.bx--text-input--password__visibility+.bx--assistive-text{
    display:inline-block
  }
}

.bx--text-input--password__visibility::before,.bx--text-input--password__visibility::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--text-input--password__visibility.bx--tooltip--a11y::before,.bx--text-input--password__visibility.bx--tooltip--a11y::after{
  transition:none
}

.bx--text-input--password__visibility::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--text-input--password__visibility .bx--assistive-text,.bx--text-input--password__visibility+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--text-input--password__visibility::after,.bx--text-input--password__visibility .bx--assistive-text,.bx--text-input--password__visibility+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--text-input--password__visibility::after,.bx--text-input--password__visibility .bx--assistive-text,.bx--text-input--password__visibility+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--text-input--password__visibility::after,.bx--text-input--password__visibility .bx--assistive-text,.bx--text-input--password__visibility+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--text-input--password__visibility::after,.bx--text-input--password__visibility .bx--assistive-text,.bx--text-input--password__visibility+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--text-input--password__visibility::after,.bx--text-input--password__visibility .bx--assistive-text,.bx--text-input--password__visibility+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--text-input--password__visibility::after{
  content:attr(aria-label)
}

.bx--text-input--password__visibility.bx--tooltip--a11y::after{
  content:none
}

.bx--text-input--password__visibility.bx--tooltip--visible::before,.bx--text-input--password__visibility.bx--tooltip--visible::after,.bx--text-input--password__visibility:hover::before,.bx--text-input--password__visibility:hover::after,.bx--text-input--password__visibility:focus::before,.bx--text-input--password__visibility:focus::after{
  opacity:1
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--text-input--password__visibility.bx--tooltip--visible .bx--assistive-text,.bx--text-input--password__visibility.bx--tooltip--visible+.bx--assistive-text,.bx--text-input--password__visibility:hover .bx--assistive-text,.bx--text-input--password__visibility:hover+.bx--assistive-text,.bx--text-input--password__visibility:focus .bx--assistive-text,.bx--text-input--password__visibility:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--text-input--password__visibility.bx--tooltip--visible .bx--assistive-text,.bx--text-input--password__visibility.bx--tooltip--visible+.bx--assistive-text,.bx--text-input--password__visibility.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--text-input--password__visibility:hover .bx--assistive-text,.bx--text-input--password__visibility:hover+.bx--assistive-text,.bx--text-input--password__visibility:hover.bx--tooltip--a11y::before,.bx--text-input--password__visibility:focus .bx--assistive-text,.bx--text-input--password__visibility:focus+.bx--assistive-text,.bx--text-input--password__visibility:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--text-input--password__visibility.bx--tooltip--hidden .bx--assistive-text,.bx--text-input--password__visibility.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--text-input--password__visibility.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--text-input--password__visibility .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--text-input--password__visibility::before,.bx--text-input--password__visibility::after,.bx--text-input--password__visibility .bx--assistive-text,.bx--text-input--password__visibility+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--text-input--password__visibility::before{
  bottom:-0.5rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--text-input--password__visibility::after,.bx--text-input--password__visibility .bx--assistive-text,.bx--text-input--password__visibility+.bx--assistive-text{
  bottom:-0.8125rem;
  transform:translate(-50%, 100%)
}

.bx--text-input--password__visibility,.bx--btn.bx--text-input--password__visibility__toggle.bx--tooltip__trigger{
  outline:2px solid transparent;
  outline-offset:-2px;
  position:absolute;
  right:0;
  display:flex;
  width:2.5rem;
  height:100%;
  min-height:auto;
  align-items:center;
  justify-content:center;
  padding:0;
  border:0;
  background:none;
  cursor:pointer;
  transition:outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--text-input--sm+.bx--btn.bx--text-input--password__visibility__toggle.bx--tooltip__trigger{
  width:2rem
}

.bx--text-input--lg+.bx--btn.bx--text-input--password__visibility__toggle.bx--tooltip__trigger{
  width:3rem
}

.bx--btn.bx--text-input--password__visibility__toggle.bx--tooltip__trigger svg{
  fill:#525252;
  transition:fill 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--btn.bx--text-input--password__visibility__toggle.bx--tooltip__trigger svg{
    fill:ButtonText
  }
}

.bx--btn.bx--text-input--password__visibility__toggle.bx--tooltip__trigger:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--btn.bx--text-input--password__visibility__toggle.bx--tooltip__trigger:focus{
    outline-style:dotted
  }
}

.bx--btn.bx--text-input--password__visibility__toggle.bx--tooltip__trigger:hover svg,.bx--btn.bx--text-input--password__visibility__toggle.bx--tooltip__trigger:focus svg{
  fill:#161616
}

.bx--text-input--invalid,.bx--text-input--warning,.bx--text-input-wrapper--readonly .bx--text-input{
  padding-right:2.5rem
}

.bx--text-input--invalid.bx--password-input{
  padding-right:4rem
}

.bx--text-input--invalid+.bx--text-input--password__visibility,.bx--text-input--invalid+.bx--text-input--password__visibility__toggle{
  right:1rem
}

.bx--password-input-wrapper .bx--text-input__invalid-icon{
  right:2.5rem
}

.bx--text-input:disabled+.bx--text-input--password__visibility svg,.bx--text-input:disabled+.bx--text-input--password__visibility__toggle.bx--tooltip__trigger svg{
  cursor:not-allowed;
  fill:#c6c6c6
}

.bx--text-input:disabled+.bx--text-input--password__visibility svg:hover,.bx--text-input:disabled+.bx--text-input--password__visibility__toggle.bx--tooltip__trigger svg:hover{
  fill:#c6c6c6
}

.bx--text-input:disabled{
  outline:2px solid transparent;
  outline-offset:-2px;
  border-bottom:1px solid transparent;
  background-color:#fff;
  color:#c6c6c6;
  cursor:not-allowed;
  -webkit-text-fill-color:#c6c6c6
}

.bx--text-input--light:disabled{
  background-color:#f4f4f4
}

.bx--text-input:disabled::-moz-placeholder{
  color:#c6c6c6;
  opacity:1
}

.bx--text-input:disabled:-ms-input-placeholder{
  color:#c6c6c6;
  opacity:1
}

.bx--text-input:disabled::placeholder{
  color:#c6c6c6;
  opacity:1
}

.bx--text-input--invalid{
  outline:2px solid #da1e28;
  outline-offset:-2px;
  box-shadow:none
}

@media screen and (prefers-contrast){
  .bx--text-input--invalid{
    outline-style:dotted
  }
}

.bx--text-input--invalid .bx--text-input--password__visibility,.bx--text-input--invalid .bx--text-input--password__visibility__toggle{
  right:2.5rem
}

.bx--skeleton.bx--text-input{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none
}

.bx--skeleton.bx--text-input:hover,.bx--skeleton.bx--text-input:focus,.bx--skeleton.bx--text-input:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--skeleton.bx--text-input::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--skeleton.bx--text-input::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--form--fluid .bx--text-input-wrapper{
  position:relative;
  background:#fff;
  transition:background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--form--fluid .bx--label{
  position:absolute;
  z-index:1;
  top:.8125rem;
  left:1rem;
  margin:0
}

.bx--form--fluid .bx--form__helper-text{
  display:none
}

.bx--form--fluid .bx--text-input{
  min-height:4rem;
  padding:2rem 1rem .8125rem
}

.bx--text-input__divider,.bx--form--fluid .bx--text-input__divider{
  display:none
}

.bx--form--fluid .bx--text-input--invalid,.bx--form--fluid .bx--text-input--warn{
  border-bottom:none
}

.bx--form--fluid .bx--text-input--invalid+.bx--text-input__divider,.bx--form--fluid .bx--text-input--warn+.bx--text-input__divider{
  display:block;
  border-style:solid;
  border-color:#e0e0e0;
  border-bottom:none;
  margin:0 1rem
}

.bx--form--fluid .bx--text-input__invalid-icon{
  top:5rem
}

.bx--form--fluid .bx--text-input-wrapper--light{
  background:#f4f4f4
}

.bx--form--fluid .bx--text-input__field-wrapper[data-invalid]>.bx--text-input--invalid{
  outline:2px solid transparent;
  outline-offset:-2px
}

.bx--form--fluid .bx--text-input__field-wrapper[data-invalid]:not(:focus){
  outline:2px solid #da1e28;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--form--fluid .bx--text-input__field-wrapper[data-invalid]:not(:focus){
    outline-style:dotted
  }
}

.bx--form--fluid .bx--text-input__field-wrapper[data-invalid]>.bx--text-input--invalid:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--form--fluid .bx--text-input__field-wrapper[data-invalid]>.bx--text-input--invalid:focus{
    outline-style:dotted
  }
}

.bx--text-input-wrapper.bx--text-input-wrapper--inline{
  flex-flow:row wrap
}

.bx--text-input-wrapper .bx--label--inline{
  flex:1;
  margin:.8125rem 0 0 0;
  overflow-wrap:break-word;
  word-break:break-word
}

.bx--text-input-wrapper .bx--label--inline--sm{
  margin-top:.5625rem
}

.bx--text-input-wrapper .bx--label--inline--xl,.bx--text-input-wrapper .bx--label--inline--lg{
  margin-top:1.0625rem
}

.bx--text-input__label-helper-wrapper{
  max-width:8rem;
  flex:2;
  flex-direction:column;
  margin-right:1.5rem;
  overflow-wrap:break-word
}

.bx--text-input-wrapper .bx--form__helper-text--inline{
  margin-top:.125rem
}

.bx--text-input__field-outer-wrapper{
  display:flex;
  width:100%;
  flex:1 1 auto;
  flex-direction:column;
  align-items:flex-start
}

.bx--text-input__field-outer-wrapper--inline{
  flex:8;
  flex-direction:column
}

.bx--form--fluid .bx--text-input-wrapper--readonly,.bx--text-input-wrapper--readonly .bx--text-input{
  background:transparent
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--text-input--password__visibility,.bx--btn.bx--btn--icon-only.bx--text-input--password__visibility__toggle.bx--tooltip__trigger svg,.bx--btn.bx--btn--icon-only.bx--text-input--password__visibility__toggle.bx--tooltip__trigger:hover svg{
    fill:ButtonText
  }
}

.bx--data-table-container+.bx--pagination{
  border-top:0
}

.bx--pagination{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:flex;
  width:calc(100% - 1px);
  min-height:2.5rem;
  align-items:center;
  justify-content:space-between;
  border-top:1px solid #e0e0e0;
  background-color:#fff;
  overflow-x:auto
}

@media(min-width: 42rem){
  .bx--pagination{
    overflow:initial
  }

  .bx--pagination .bx--pagination__control-buttons{
    display:flex
  }
}

@media(max-width: 41.98rem){
  .bx--pagination .bx--pagination__left>*,.bx--pagination .bx--pagination__right>*{
    display:none
  }

  .bx--pagination .bx--pagination__items-count{
    display:initial
  }

  .bx--pagination .bx--pagination__control-buttons{
    display:flex
  }
}

.bx--pagination--sm{
  min-height:2rem
}

.bx--pagination--lg{
  min-height:3rem
}

.bx--pagination .bx--select{
  height:100%;
  align-items:center
}

.bx--pagination .bx--select-input--inline__wrapper{
  display:flex;
  height:100%
}

.bx--pagination .bx--select-input{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  width:auto;
  min-width:auto;
  height:100%;
  padding:0 2.25rem 0 1rem;
  background-color:#fff;
  line-height:2.5rem
}

.bx--pagination--sm .bx--select-input{
  line-height:2rem
}

.bx--pagination--lg .bx--select-input{
  line-height:3rem
}

.bx--pagination .bx--select-input:hover{
  background:#e5e5e5
}

.bx--pagination .bx--select--inline .bx--select-input:focus,.bx--pagination .bx--select--inline .bx--select-input:focus option,.bx--pagination .bx--select--inline .bx--select-input:focus optgroup{
  background-color:#fff
}

.bx--pagination .bx--select__arrow{
  top:50%;
  transform:translate(-0.5rem, -50%)
}

.bx--pagination .bx--select__item-count .bx--select-input{
  border-right:.0625rem solid #e0e0e0
}

.bx--pagination .bx--select__page-number .bx--select-input{
  border-left:1px solid #e0e0e0
}

.bx--pagination__left,.bx--pagination__right{
  display:flex;
  height:100%;
  align-items:center
}

.bx--pagination__left>.bx--form-item,.bx--pagination__right>.bx--form-item{
  height:100%
}

.bx--pagination__left .bx--pagination__text,.bx--pagination__right .bx--pagination__text{
  white-space:nowrap
}

.bx--pagination__left .bx--pagination__text{
  margin-right:.0625rem
}

.bx--pagination__right .bx--pagination__text{
  margin-right:1rem;
  margin-left:.0625rem
}

.bx--pagination__left{
  padding:0 1rem 0 0
}

@media(min-width: 42rem){
  .bx--pagination__left{
    padding:0 1rem
  }
}

@media(min-width: 42rem){
  .bx--pagination__text{
    display:inline-block
  }
}

span.bx--pagination__text{
  margin-left:1rem;
  color:#525252
}

.bx--pagination__button,.bx--btn--ghost.bx--pagination__button{
  display:flex;
  width:2.5rem;
  height:2.5rem;
  min-height:2rem;
  align-items:center;
  justify-content:center;
  border:none;
  border-left:1px solid #e0e0e0;
  margin:0;
  background:none;
  cursor:pointer;
  fill:#161616;
  transition:outline 110ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--pagination--sm .bx--pagination__button,.bx--pagination--sm .bx--btn--ghost.bx--pagination__button{
  width:2rem;
  height:2rem
}

.bx--pagination--lg .bx--pagination__button,.bx--pagination--lg .bx--btn--ghost.bx--pagination__button{
  width:3rem;
  height:3rem
}

.bx--pagination__button:focus,.bx--btn--ghost:focus.bx--pagination__button{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  border-left:0
}

@media screen and (prefers-contrast){
  .bx--pagination__button:focus,.bx--btn--ghost:focus.bx--pagination__button{
    outline-style:dotted
  }
}

.bx--pagination__button:hover,.bx--btn--ghost:hover.bx--pagination__button{
  background:#e5e5e5
}

.bx--pagination__button--no-index,.bx--btn--ghost.bx--pagination__button--no-index{
  cursor:not-allowed;
  fill:#c6c6c6
}

.bx--pagination__button:disabled:hover,.bx--pagination__button--no-index:hover,.bx--btn--ghost:disabled:hover.bx--pagination__button,.bx--btn--ghost:hover.bx--pagination__button--no-index{
  border-color:#e0e0e0;
  background:#fff;
  cursor:not-allowed;
  fill:#c6c6c6
}

.bx--pagination.bx--skeleton .bx--skeleton__text{
  margin-right:1rem;
  margin-bottom:0
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--pagination__button,.bx--btn--ghost.bx--pagination__button{
    outline:1px solid transparent
  }
}

.bx--progress-bar__label{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:block;
  margin-bottom:.5rem;
  color:#161616
}

.bx--progress-bar__track{
  position:relative;
  width:100%;
  height:.5rem;
  background-color:#fff
}

.bx--progress-bar--big .bx--progress-bar__track{
  height:.5rem
}

.bx--progress-bar--small .bx--progress-bar__track{
  height:.25rem
}

.bx--progress-bar__bar{
  display:block;
  width:100%;
  height:100%;
  background-color:#0f62fe;
  transform:scaleX(0);
  transform-origin:0 50%;
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--progress-bar--indeterminate .bx--progress-bar__track::after{
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  -webkit-animation-duration:1400ms;
  animation-duration:1400ms;
  -webkit-animation-iteration-count:infinite;
  animation-iteration-count:infinite;
  -webkit-animation-name:progress-bar-indeterminate;
  animation-name:progress-bar-indeterminate;
  -webkit-animation-timing-function:linear;
  animation-timing-function:linear;
  background-image:linear-gradient(90deg, #0f62fe 12.5%, transparent 12.5%);
  background-position-x:0%;
  background-size:200% 100%;
  content:""
}

.bx--progress-bar__helper-text{
  font-size:.75rem;
  line-height:1.33333;
  letter-spacing:.32px;
  margin-top:.25rem;
  color:#525252
}

@-webkit-keyframes progress-bar-indeterminate{
  0%{
    background-position-x:25%
  }

  80%,100%{
    background-position-x:-105%
  }
}

@keyframes progress-bar-indeterminate{
  0%{
    background-position-x:25%
  }

  80%,100%{
    background-position-x:-105%
  }
}

.bx--tooltip__label{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  display:inline-flex;
  align-items:center;
  color:#525252
}

.bx--tooltip__label:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__label:focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger svg{
  fill:#525252
}

.bx--tooltip__trigger:not(.bx--btn--icon-only){
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  display:inline-flex;
  align-items:center;
  font-size:1rem
}

.bx--tooltip__trigger:not(.bx--btn--icon-only)::-moz-focus-inner{
  border:0
}

.bx--tooltip__trigger:not(.bx--btn--icon-only):focus{
  outline:1px solid #0f62fe;
  fill:#0353e9
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger:not(.bx--btn--icon-only):focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger:not(.bx--btn--icon-only)[disabled] svg{
  fill:#c6c6c6
}

.bx--tooltip__label .bx--tooltip__trigger{
  margin-left:.5rem
}

.bx--tooltip__label--bold{
  font-weight:600
}

.bx--tooltip{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  position:absolute;
  z-index:6000;
  display:none;
  min-width:13rem;
  max-width:18rem;
  padding:1rem;
  margin-top:.25rem;
  background:#393939;
  border-radius:.125rem;
  color:#fff;
  word-wrap:break-word
}

.bx--tooltip:focus{
  box-shadow:inset 0 0 0 1px #393939,inset 0 0 0 2px #f4f4f4;
  outline:0
}

.bx--tooltip.bx--tooltip--top.bx--tooltip--align-start,.bx--tooltip.bx--tooltip--bottom.bx--tooltip--align-start{
  transform:translate(calc(50% - 22px), 0)
}

.bx--tooltip.bx--tooltip--top.bx--tooltip--align-start .bx--tooltip__caret,.bx--tooltip.bx--tooltip--bottom.bx--tooltip--align-start .bx--tooltip__caret{
  margin-left:15px
}

.bx--tooltip.bx--tooltip--top.bx--tooltip--align-end,.bx--tooltip.bx--tooltip--bottom.bx--tooltip--align-end{
  transform:translate(calc(22px - 50%), 0)
}

.bx--tooltip.bx--tooltip--top.bx--tooltip--align-end .bx--tooltip__caret,.bx--tooltip.bx--tooltip--bottom.bx--tooltip--align-end .bx--tooltip__caret{
  margin-right:15px
}

.bx--tooltip.bx--tooltip--left.bx--tooltip--align-start{
  transform:translate(0, calc(-15px + 50%))
}

.bx--tooltip.bx--tooltip--left.bx--tooltip--align-start .bx--tooltip__caret{
  top:14px
}

.bx--tooltip.bx--tooltip--left.bx--tooltip--align-end{
  transform:translate(0, calc(31px - 50%))
}

.bx--tooltip.bx--tooltip--left.bx--tooltip--align-end .bx--tooltip__caret{
  top:initial;
  bottom:25px
}

.bx--tooltip.bx--tooltip--right.bx--tooltip--align-start{
  transform:translate(0, calc(-26px + 50%))
}

.bx--tooltip.bx--tooltip--right.bx--tooltip--align-start .bx--tooltip__caret{
  top:26px
}

.bx--tooltip.bx--tooltip--right.bx--tooltip--align-end{
  transform:translate(0, calc(20px - 50%))
}

.bx--tooltip.bx--tooltip--right.bx--tooltip--align-end .bx--tooltip__caret{
  top:initial;
  bottom:12px
}

.bx--tooltip p{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  text-align:left
}

.bx--tooltip button{
  padding-right:2rem
}

.bx--tooltip .bx--btn:focus{
  border-color:#fff;
  outline-color:#393939
}

.bx--tooltip .bx--link{
  color:#78a9ff;
  font-size:.875rem
}

.bx--tooltip .bx--link:focus{
  outline:1px solid #fff;
  outline-offset:2px
}

.bx--tooltip .bx--link:active,.bx--tooltip .bx--link:active:visited,.bx--tooltip .bx--link:active:visited:hover{
  color:#fff
}

.bx--tooltip .bx--link:visited{
  color:#78a9ff
}

.bx--tooltip .bx--tooltip__content[tabindex="-1"]:focus{
  outline:none
}

.bx--tooltip .bx--tooltip__caret{
  position:absolute;
  top:calc(-0.4296875rem + 1px);
  right:0;
  left:0;
  width:0;
  height:0;
  border-right:.4296875rem solid transparent;
  border-bottom:.4296875rem solid #393939;
  border-left:.4296875rem solid transparent;
  margin:0 auto;
  content:""
}

.bx--tooltip .bx--tooltip__footer{
  display:flex;
  align-items:center;
  justify-content:space-between;
  margin-top:1rem
}

.bx--tooltip[data-floating-menu-direction=left]{
  margin-left:calc(0.5rem * -1)
}

.bx--tooltip[data-floating-menu-direction=left] .bx--tooltip__caret{
  top:50%;
  right:calc(-0.4296875rem + 1px);
  left:auto;
  transform:rotate(90deg) translate(50%, -50%)
}

.bx--tooltip[data-floating-menu-direction=top]{
  margin-top:calc(0.5rem * -1)
}

.bx--tooltip[data-floating-menu-direction=top] .bx--tooltip__caret{
  top:auto;
  bottom:calc(-0.4296875rem + 1px);
  transform:rotate(180deg)
}

.bx--tooltip[data-floating-menu-direction=right]{
  margin-left:.5rem
}

.bx--tooltip[data-floating-menu-direction=right] .bx--tooltip__caret{
  top:50%;
  right:auto;
  left:calc(-0.4296875rem + 1px);
  transform:rotate(270deg) translate(50%, -50%)
}

.bx--tooltip[data-floating-menu-direction=bottom]{
  margin-top:.5rem
}

.bx--tooltip__heading{
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  margin-bottom:.5rem
}

.bx--tooltip--shown{
  display:block;
  margin-top:0
}

.bx--tooltip--definition{
  position:relative
}

.bx--tooltip--definition .bx--tooltip__trigger{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  position:relative;
  display:inline-flex;
  border-bottom:1px dotted #0f62fe;
  color:#161616
}

.bx--tooltip--definition .bx--tooltip__trigger:hover+.bx--tooltip--definition__top,.bx--tooltip--definition .bx--tooltip__trigger:hover+.bx--tooltip--definition__bottom{
  display:block
}

.bx--tooltip--definition .bx--tooltip__trigger:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip--definition .bx--tooltip__trigger:focus{
    outline-style:dotted
  }
}

.bx--tooltip--definition .bx--tooltip__trigger:focus+.bx--tooltip--definition__top,.bx--tooltip--definition .bx--tooltip__trigger:focus+.bx--tooltip--definition__bottom{
  display:block
}

.bx--tooltip--definition__bottom,.bx--tooltip--definition__top{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  position:absolute;
  z-index:1;
  display:none;
  width:13rem;
  padding:.5rem 1rem;
  margin-top:.75rem;
  background:#393939;
  border-radius:.125rem;
  pointer-events:none
}

.bx--tooltip--definition__bottom p,.bx--tooltip--definition__top p{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  color:#fff
}

.bx--tooltip--definition__bottom .bx--tooltip__caret,.bx--tooltip--definition__top .bx--tooltip__caret{
  position:absolute;
  right:0;
  left:0;
  width:.6rem;
  height:.6rem;
  margin-left:1rem;
  background:#393939
}

.bx--tooltip--definition__bottom .bx--tooltip__caret{
  top:-0.2rem;
  transform:rotate(-135deg)
}

.bx--tooltip--definition__top{
  margin-top:-2rem;
  transform:translateY(-100%)
}

.bx--tooltip--definition__top .bx--tooltip__caret{
  bottom:-0.2rem;
  transform:rotate(45deg)
}

.bx--tooltip--definition__align-end{
  right:0
}

.bx--tooltip--definition__align-center{
  margin-left:50%;
  transform:translateX(-50%)
}

.bx--tooltip--definition__top.bx--tooltip--definition__align-center{
  margin-left:50%;
  transform:translate(-50%, -100%)
}

.bx--tooltip--definition__align-center .bx--tooltip__caret{
  left:auto;
  margin-right:calc(50% - 6px);
  margin-left:auto
}

.bx--tooltip--definition__align-end .bx--tooltip__caret{
  left:auto;
  margin-right:1rem;
  margin-left:auto
}

.bx--tooltip--definition.bx--tooltip--a11y{
  display:inline-flex
}

.bx--tooltip--definition button.bx--tooltip--a11y{
  margin:0
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  border-bottom:.0625rem dotted #525252;
  transition:border-color 110ms
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition:hover,.bx--tooltip__trigger.bx--tooltip__trigger--definition:focus{
  border-bottom-color:#0f62fe
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:default
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top+.bx--assistive-text{
    display:inline-block
  }
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--a11y::after{
  transition:none
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.5rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::after{
  content:attr(aria-label)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--a11y::after{
  content:none
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--visible::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--visible::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:hover::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:hover::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:focus::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:focus::after{
  opacity:1
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:hover.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:focus+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--hidden .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::before{
  top:-0.25rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top+.bx--assistive-text{
  top:-0.5625rem;
  left:0;
  transform:translate(0, -100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-start .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-start::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-start+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-start::before{
  top:-0.25rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-start+.bx--assistive-text{
  top:-0.5625rem;
  left:0;
  transform:translate(0, -100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-center .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-center::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-center+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-center::before{
  top:-0.25rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-center+.bx--assistive-text{
  top:-0.5625rem;
  left:50%;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-end .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-end::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-end+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-end::before{
  top:-0.25rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--top.bx--tooltip--align-end+.bx--assistive-text{
  top:-0.5625rem;
  right:0;
  left:auto;
  transform:translate(0, -100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:default
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom+.bx--assistive-text{
    display:inline-block
  }
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--a11y::after{
  transition:none
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.5rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::after{
  content:attr(aria-label)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--a11y::after{
  content:none
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--visible::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--visible::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:hover::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:hover::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:focus::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:focus::after{
  opacity:1
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:hover.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:focus+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--hidden .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::before{
  bottom:-0.25rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom+.bx--assistive-text{
  bottom:-0.5625rem;
  left:0;
  transform:translate(0, 100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--a11y+.bx--assistive-text{
  bottom:-0.5rem;
  transform:translate(0, 100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-start .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-start::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-start+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-start::before{
  bottom:-0.25rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-start+.bx--assistive-text{
  bottom:-0.5625rem;
  left:0;
  transform:translate(0, 100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-start.bx--tooltip--a11y+.bx--assistive-text{
  bottom:-0.5rem;
  transform:translate(0, 100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-center .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-center::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-center+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-center::before{
  bottom:-0.25rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-center+.bx--assistive-text{
  bottom:-0.5625rem;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-center.bx--tooltip--a11y+.bx--assistive-text{
  bottom:-0.5rem;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-end .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-end::before,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-end+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-end::before{
  bottom:-0.25rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-end+.bx--assistive-text{
  bottom:-0.5625rem;
  right:0;
  left:auto;
  transform:translate(0, 100%)
}

.bx--tooltip__trigger.bx--tooltip__trigger--definition.bx--tooltip--bottom.bx--tooltip--align-end.bx--tooltip--a11y+.bx--assistive-text{
  bottom:-0.5rem;
  transform:translate(0, 100%)
}

.bx--tooltip--icon{
  display:inline-flex;
  align-items:center
}

.bx--tooltip--icon__top,.bx--tooltip--icon__bottom{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:pointer
}

.bx--tooltip--icon__top::before,.bx--tooltip--icon__top::after,.bx--tooltip--icon__bottom::before,.bx--tooltip--icon__bottom::after{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  position:absolute;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none;
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip--icon__top::before,.bx--tooltip--icon__bottom::before{
  right:0;
  left:0;
  width:0;
  height:0;
  border-width:0 .25rem .3125rem .25rem;
  border-style:solid;
  border-color:transparent transparent #393939 transparent;
  margin:0 auto;
  margin-top:1px;
  margin-left:50%;
  content:""
}

.bx--tooltip--icon__top::after,.bx--tooltip--icon__bottom::after{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  min-width:1.5rem;
  max-width:13rem;
  height:1.5rem;
  padding:0 1rem;
  margin-left:50%;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  content:attr(aria-label);
  font-weight:400;
  pointer-events:none;
  transform:translateX(-50%);
  white-space:nowrap
}

.bx--tooltip--icon__top:hover::before,.bx--tooltip--icon__top:hover::after,.bx--tooltip--icon__top:focus::before,.bx--tooltip--icon__top:focus::after,.bx--tooltip--icon__bottom:hover::before,.bx--tooltip--icon__bottom:hover::after,.bx--tooltip--icon__bottom:focus::before,.bx--tooltip--icon__bottom:focus::after{
  opacity:1
}

.bx--tooltip--icon__top:hover svg,.bx--tooltip--icon__top:focus svg,.bx--tooltip--icon__bottom:hover svg,.bx--tooltip--icon__bottom:focus svg{
  fill:#525252
}

.bx--tooltip--icon__top:focus,.bx--tooltip--icon__bottom:focus{
  outline:1px solid transparent
}

.bx--tooltip--icon__top:focus svg,.bx--tooltip--icon__bottom:focus svg{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip--icon__top:focus svg,.bx--tooltip--icon__bottom:focus svg{
    outline-style:dotted
  }
}

.bx--tooltip--icon__top::before{
  transform:translate(-50%, calc(-100% - 9px)) rotate(180deg);
  top:1px
}

.bx--tooltip--icon__top::after{
  transform:translate(-50%, calc(-100% - 12px));
  top:0
}

.bx--tooltip--icon__bottom::before{
  transform:translate(-50%, 10px) rotate(0);
  bottom:0
}

.bx--tooltip--icon__bottom::after{
  transform:translate(-50%, calc(100% + 10px));
  bottom:0
}

.bx--tooltip--icon__top.bx--tooltip--icon__align-start::before{
  transform:translate(0, calc(-100% - 9px)) rotate(180deg);
  top:1px;
  margin-left:4px
}

.bx--tooltip--icon__top.bx--tooltip--icon__align-start::after{
  transform:translate(0, calc(-100% - 12px));
  top:0;
  margin-left:0
}

.bx--tooltip--icon__top.bx--tooltip--icon__align-end::before{
  transform:translate(0, calc(-100% - 9px)) rotate(180deg);
  top:1px;
  right:0;
  left:auto;
  margin-right:4px
}

.bx--tooltip--icon__top.bx--tooltip--icon__align-end::after{
  transform:translate(0, calc(-100% - 12px));
  top:0;
  margin-left:0;
  right:0
}

.bx--tooltip--icon__bottom.bx--tooltip--icon__align-start::before{
  transform:translate(0, 10px) rotate(0);
  bottom:0;
  margin-left:4px
}

.bx--tooltip--icon__bottom.bx--tooltip--icon__align-start::after{
  transform:translate(0, calc(100% + 10px));
  bottom:0;
  margin-left:0
}

.bx--tooltip--icon__bottom.bx--tooltip--icon__align-end::before{
  transform:translate(0, 10px) rotate(0);
  bottom:0;
  right:0;
  left:auto;
  margin-right:4px
}

.bx--tooltip--icon__bottom.bx--tooltip--icon__align-end::after{
  transform:translate(0, calc(100% + 10px));
  bottom:0;
  margin-left:0;
  right:0
}

.bx--tooltip--icon .bx--tooltip__trigger svg{
  margin-left:0
}

.bx--tooltip__trigger:hover svg,.bx--tooltip__trigger:focus svg{
  fill:#525252
}

.bx--tooltip__trigger.bx--tooltip--top{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:pointer
}

.bx--tooltip__trigger.bx--tooltip--top:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--top:focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--tooltip--top:focus{
  outline:1px solid transparent
}

.bx--tooltip__trigger.bx--tooltip--top:focus svg{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--top:focus svg{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--tooltip--top::before,.bx--tooltip__trigger.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip--top::before,.bx--tooltip__trigger.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top+.bx--assistive-text{
    display:inline-block
  }
}

.bx--tooltip__trigger.bx--tooltip--top::before,.bx--tooltip__trigger.bx--tooltip--top::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--a11y::after{
  transition:none
}

.bx--tooltip__trigger.bx--tooltip--top::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--tooltip__trigger.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--tooltip__trigger.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--tooltip__trigger.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--tooltip__trigger.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--tooltip__trigger.bx--tooltip--top::after{
  content:attr(aria-label)
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--a11y::after{
  content:none
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--visible::before,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--visible::after,.bx--tooltip__trigger.bx--tooltip--top:hover::before,.bx--tooltip__trigger.bx--tooltip--top:hover::after,.bx--tooltip__trigger.bx--tooltip--top:focus::before,.bx--tooltip__trigger.bx--tooltip--top:focus::after{
  opacity:1
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--top:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top:hover.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--top:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top:focus+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--hidden .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--tooltip__trigger.bx--tooltip--top .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--top::before,.bx--tooltip__trigger.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip--top::before{
  top:-0.5rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--tooltip--top::after,.bx--tooltip__trigger.bx--tooltip--top .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top+.bx--assistive-text{
  top:-0.8125rem;
  left:50%;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-start .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-start::before,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-start+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-start::before{
  top:-0.5rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-start+.bx--assistive-text{
  top:-0.8125rem;
  left:0;
  transform:translate(0, -100%)
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-center .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-center::before,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-center+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-center::before{
  top:-0.5rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-center+.bx--assistive-text{
  top:-0.8125rem;
  left:50%;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-end .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  bottom:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-end::before,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-end+.bx--assistive-text{
  top:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-end::before{
  top:-0.5rem;
  border-width:.3125rem .25rem 0 .25rem;
  border-color:#393939 transparent transparent transparent;
  transform:translate(-50%, -100%)
}

.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--top.bx--tooltip--align-end+.bx--assistive-text{
  top:-0.8125rem;
  right:0;
  left:auto;
  transform:translate(0, -100%)
}

.bx--tooltip__trigger.bx--tooltip--right{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:pointer
}

.bx--tooltip__trigger.bx--tooltip--right:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--right:focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--tooltip--right:focus{
  outline:1px solid transparent
}

.bx--tooltip__trigger.bx--tooltip--right:focus svg{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--right:focus svg{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--tooltip--right::before,.bx--tooltip__trigger.bx--tooltip--right::after,.bx--tooltip__trigger.bx--tooltip--right .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip--right::before,.bx--tooltip__trigger.bx--tooltip--right::after,.bx--tooltip__trigger.bx--tooltip--right .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right+.bx--assistive-text{
    display:inline-block
  }
}

.bx--tooltip__trigger.bx--tooltip--right::before,.bx--tooltip__trigger.bx--tooltip--right::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--a11y::after{
  transition:none
}

.bx--tooltip__trigger.bx--tooltip--right::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--tooltip__trigger.bx--tooltip--right .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--tooltip__trigger.bx--tooltip--right::after,.bx--tooltip__trigger.bx--tooltip--right .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip--right::after,.bx--tooltip__trigger.bx--tooltip--right .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--tooltip__trigger.bx--tooltip--right::after,.bx--tooltip__trigger.bx--tooltip--right .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--tooltip__trigger.bx--tooltip--right::after,.bx--tooltip__trigger.bx--tooltip--right .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--right::after,.bx--tooltip__trigger.bx--tooltip--right .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--tooltip__trigger.bx--tooltip--right::after{
  content:attr(aria-label)
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--a11y::after{
  content:none
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--visible::before,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--visible::after,.bx--tooltip__trigger.bx--tooltip--right:hover::before,.bx--tooltip__trigger.bx--tooltip--right:hover::after,.bx--tooltip__trigger.bx--tooltip--right:focus::before,.bx--tooltip__trigger.bx--tooltip--right:focus::after{
  opacity:1
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--right:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right:hover.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--right:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right:focus+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--hidden .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--tooltip__trigger.bx--tooltip--right .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  left:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--right::before,.bx--tooltip__trigger.bx--tooltip--right::after,.bx--tooltip__trigger.bx--tooltip--right .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right+.bx--assistive-text{
  top:50%;
  right:0
}

.bx--tooltip__trigger.bx--tooltip--right::before{
  right:-0.5rem;
  border-width:.25rem .3125rem .25rem 0;
  border-color:transparent #393939 transparent transparent;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--right::after,.bx--tooltip__trigger.bx--tooltip--right .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right+.bx--assistive-text{
  right:-0.8125rem;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-start .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  left:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-start::before,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-start+.bx--assistive-text{
  top:50%;
  right:0
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-start::before{
  right:-0.5rem;
  border-width:.25rem .3125rem .25rem 0;
  border-color:transparent #393939 transparent transparent;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-start+.bx--assistive-text{
  right:-0.8125rem;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-center .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  left:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-center::before,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-center+.bx--assistive-text{
  top:50%;
  right:0
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-center::before{
  right:-0.5rem;
  border-width:.25rem .3125rem .25rem 0;
  border-color:transparent #393939 transparent transparent;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-center+.bx--assistive-text{
  right:-0.8125rem;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-end .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  left:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-end::before,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-end+.bx--assistive-text{
  top:50%;
  right:0
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-end::before{
  right:-0.5rem;
  border-width:.25rem .3125rem .25rem 0;
  border-color:transparent #393939 transparent transparent;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--right.bx--tooltip--align-end+.bx--assistive-text{
  right:-0.8125rem;
  transform:translate(100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--bottom{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:pointer
}

.bx--tooltip__trigger.bx--tooltip--bottom:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--bottom:focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--tooltip--bottom:focus{
  outline:1px solid transparent
}

.bx--tooltip__trigger.bx--tooltip--bottom:focus svg{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--bottom:focus svg{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--tooltip--bottom::before,.bx--tooltip__trigger.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip--bottom::before,.bx--tooltip__trigger.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom+.bx--assistive-text{
    display:inline-block
  }
}

.bx--tooltip__trigger.bx--tooltip--bottom::before,.bx--tooltip__trigger.bx--tooltip--bottom::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--a11y::after{
  transition:none
}

.bx--tooltip__trigger.bx--tooltip--bottom::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--tooltip__trigger.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--tooltip__trigger.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--tooltip__trigger.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--tooltip__trigger.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--tooltip__trigger.bx--tooltip--bottom::after{
  content:attr(aria-label)
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--a11y::after{
  content:none
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--visible::before,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--visible::after,.bx--tooltip__trigger.bx--tooltip--bottom:hover::before,.bx--tooltip__trigger.bx--tooltip--bottom:hover::after,.bx--tooltip__trigger.bx--tooltip--bottom:focus::before,.bx--tooltip__trigger.bx--tooltip--bottom:focus::after{
  opacity:1
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--bottom:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom:hover.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--bottom:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom:focus+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--hidden .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--tooltip__trigger.bx--tooltip--bottom .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--bottom::before,.bx--tooltip__trigger.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip--bottom::before{
  bottom:-0.5rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip--bottom::after,.bx--tooltip__trigger.bx--tooltip--bottom .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom+.bx--assistive-text{
  bottom:-0.8125rem;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-start .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-start::before,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-start+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-start::before{
  bottom:-0.5rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-start+.bx--assistive-text{
  bottom:-0.8125rem;
  left:0;
  transform:translate(0, 100%)
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-center .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-center::before,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-center+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-center::before{
  bottom:-0.5rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-center+.bx--assistive-text{
  bottom:-0.8125rem;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-end .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  left:0;
  width:100%;
  height:.75rem;
  top:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-end::before,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-end+.bx--assistive-text{
  bottom:0;
  left:50%
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-end::before{
  bottom:-0.5rem;
  border-width:0 .25rem .3125rem .25rem;
  border-color:transparent transparent #393939 transparent;
  transform:translate(-50%, 100%)
}

.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--bottom.bx--tooltip--align-end+.bx--assistive-text{
  bottom:-0.8125rem;
  right:0;
  left:auto;
  transform:translate(0, 100%)
}

.bx--tooltip__trigger.bx--tooltip--left{
  position:relative;
  display:inline-flex;
  overflow:visible;
  align-items:center;
  cursor:pointer
}

.bx--tooltip__trigger.bx--tooltip--left:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--left:focus{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--tooltip--left:focus{
  outline:1px solid transparent
}

.bx--tooltip__trigger.bx--tooltip--left:focus svg{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--left:focus svg{
    outline-style:dotted
  }
}

.bx--tooltip__trigger.bx--tooltip--left::before,.bx--tooltip__trigger.bx--tooltip--left::after,.bx--tooltip__trigger.bx--tooltip--left .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left+.bx--assistive-text{
  position:absolute;
  z-index:6000;
  display:flex;
  align-items:center;
  opacity:0;
  pointer-events:none
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip--left::before,.bx--tooltip__trigger.bx--tooltip--left::after,.bx--tooltip__trigger.bx--tooltip--left .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left+.bx--assistive-text{
    display:inline-block
  }
}

.bx--tooltip__trigger.bx--tooltip--left::before,.bx--tooltip__trigger.bx--tooltip--left::after{
  transition:opacity 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--a11y::after{
  transition:none
}

.bx--tooltip__trigger.bx--tooltip--left::before{
  width:0;
  height:0;
  border-style:solid;
  content:""
}

.bx--tooltip__trigger.bx--tooltip--left .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left+.bx--assistive-text{
  box-sizing:content-box;
  color:inherit;
  opacity:1;
  white-space:normal;
  word-break:break-word
}

.bx--tooltip__trigger.bx--tooltip--left::after,.bx--tooltip__trigger.bx--tooltip--left .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left+.bx--assistive-text{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  z-index:6000;
  width:-webkit-max-content;
  width:-moz-max-content;
  width:max-content;
  min-width:1.5rem;
  max-width:13rem;
  height:auto;
  padding:.1875rem 1rem;
  background-color:#393939;
  border-radius:.125rem;
  color:#fff;
  font-weight:400;
  text-align:left;
  transform:translateX(-50%);
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px
}

@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){
  .bx--tooltip__trigger.bx--tooltip--left::after,.bx--tooltip__trigger.bx--tooltip--left .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-accelerator: true){
  .bx--tooltip__trigger.bx--tooltip--left::after,.bx--tooltip__trigger.bx--tooltip--left .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left+.bx--assistive-text{
    width:auto
  }
}

@supports(-ms-ime-align: auto){
  .bx--tooltip__trigger.bx--tooltip--left::after,.bx--tooltip__trigger.bx--tooltip--left .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left+.bx--assistive-text{
    width:auto
  }
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tooltip__trigger.bx--tooltip--left::after,.bx--tooltip__trigger.bx--tooltip--left .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left+.bx--assistive-text{
    border:1px solid transparent
  }
}

.bx--tooltip__trigger.bx--tooltip--left::after{
  content:attr(aria-label)
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--a11y::after{
  content:none
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--visible::before,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--visible::after,.bx--tooltip__trigger.bx--tooltip--left:hover::before,.bx--tooltip__trigger.bx--tooltip--left:hover::after,.bx--tooltip__trigger.bx--tooltip--left:focus::before,.bx--tooltip__trigger.bx--tooltip--left:focus::after{
  opacity:1
}

@keyframes tooltip-fade{
  from{
    opacity:0
  }

  to{
    opacity:1
  }
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left:focus+.bx--assistive-text{
  overflow:visible;
  margin:auto;
  clip:auto
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--visible .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--visible+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--visible.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--left:hover .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left:hover+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left:hover.bx--tooltip--a11y::before,.bx--tooltip__trigger.bx--tooltip--left:focus .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left:focus+.bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left:focus.bx--tooltip--a11y::before{
  -webkit-animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  animation:tooltip-fade 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--hidden .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--hidden+.bx--assistive-text{
  overflow:hidden;
  margin:-1px;
  clip:rect(0, 0, 0, 0)
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--hidden.bx--tooltip--a11y::before{
  -webkit-animation:none;
  animation:none;
  opacity:0
}

.bx--tooltip__trigger.bx--tooltip--left .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  right:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--left::before,.bx--tooltip__trigger.bx--tooltip--left::after,.bx--tooltip__trigger.bx--tooltip--left .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left+.bx--assistive-text{
  top:50%;
  left:0
}

.bx--tooltip__trigger.bx--tooltip--left::before{
  left:-0.5rem;
  border-width:.25rem 0 .25rem .3125rem;
  border-color:transparent transparent transparent #393939;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--left::after,.bx--tooltip__trigger.bx--tooltip--left .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left+.bx--assistive-text{
  left:-0.8125rem;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-start .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  right:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-start::before,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-start+.bx--assistive-text{
  top:50%;
  left:0
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-start::before{
  left:-0.5rem;
  border-width:.25rem 0 .25rem .3125rem;
  border-color:transparent transparent transparent #393939;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-start::after,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-start .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-start+.bx--assistive-text{
  left:-0.8125rem;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-center .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  right:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-center::before,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-center+.bx--assistive-text{
  top:50%;
  left:0
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-center::before{
  left:-0.5rem;
  border-width:.25rem 0 .25rem .3125rem;
  border-color:transparent transparent transparent #393939;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-center::after,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-center .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-center+.bx--assistive-text{
  left:-0.8125rem;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-end .bx--assistive-text::after{
  position:absolute;
  display:block;
  content:"";
  top:0;
  width:.75rem;
  height:100%;
  right:-0.75rem
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-end::before,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-end+.bx--assistive-text{
  top:50%;
  left:0
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-end::before{
  left:-0.5rem;
  border-width:.25rem 0 .25rem .3125rem;
  border-color:transparent transparent transparent #393939;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-end::after,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-end .bx--assistive-text,.bx--tooltip__trigger.bx--tooltip--left.bx--tooltip--align-end+.bx--assistive-text{
  left:-0.8125rem;
  transform:translate(-100%, -50%)
}

.bx--tooltip__trigger:not(.bx--tooltip--hidden) .bx--assistive-text{
  pointer-events:all
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--tooltip__trigger svg,.bx--tooltip__trigger:hover svg,.bx--tooltip__trigger:focus svg{
    fill:ButtonText
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--tooltip__trigger:focus svg{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--tooltip{
    outline:1px solid transparent
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--assistive-text{
    outline:1px solid transparent
  }
}

.bx--progress{
  display:flex;
  list-style:none
}

.bx--progress-step{
  position:relative;
  display:inline-flex;
  overflow:visible;
  width:8rem;
  min-width:7rem;
  flex-direction:row
}

.bx--progress-step .bx--tooltip__label{
  display:block
}

.bx--progress--space-equal .bx--progress-step{
  min-width:8rem;
  flex-grow:1
}

.bx--progress-line{
  position:absolute;
  left:0;
  width:8rem;
  height:1px;
  border:1px inset transparent
}

.bx--progress--space-equal .bx--progress-line{
  width:100%;
  min-width:8rem
}

.bx--progress-step svg{
  position:relative;
  z-index:1;
  width:1rem;
  height:1rem;
  flex-shrink:0;
  margin:.625rem .5rem 0 0;
  border-radius:50%;
  fill:#0f62fe
}

.bx--progress-label{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  overflow:hidden;
  max-width:5.5rem;
  margin:.5rem 0 0 0;
  color:#161616;
  line-height:1.45;
  text-overflow:ellipsis;
  transition:box-shadow 110ms cubic-bezier(0.2, 0, 0.38, 0.9),color 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  white-space:nowrap
}

.bx--progress-label::before{
  display:block;
  content:""
}

.bx--progress-label:hover{
  box-shadow:0 .0625rem #0f62fe;
  color:#0f62fe;
  cursor:pointer
}

.bx--progress-label:focus{
  box-shadow:0 .1875rem 0 0 #0f62fe;
  color:#0f62fe;
  outline:none
}

.bx--progress--space-equal .bx--progress-label{
  max-width:100%;
  margin-right:.75rem
}

.bx--progress-step-button:not(.bx--progress-step-button--unclickable) .bx--progress-label:active{
  box-shadow:0 .1875rem 0 0 #0f62fe;
  color:#0f62fe
}

.bx--progress-label-overflow:hover~.bx--tooltip,.bx--progress-label-overflow:focus~.bx--tooltip{
  visibility:inherit
}

.bx--progress-step .bx--tooltip .bx--tooltip__caret{
  margin-left:.625rem
}

.bx--tooltip__text{
  padding:0;
  margin:0;
  font-weight:normal
}

.bx--progress-step .bx--tooltip{
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px;
  display:block;
  width:7.8125rem;
  min-width:7.1875rem;
  min-height:1.5rem;
  padding:.5rem 1rem;
  margin-top:2.5rem;
  margin-left:1.375rem;
  color:#fff;
  visibility:hidden
}

.bx--progress-step .bx--tooltip_multi{
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px;
  width:9.375rem;
  height:auto;
  color:#fff
}

.bx--progress-optional{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  position:absolute;
  left:0;
  margin-top:1.75rem;
  margin-left:1.5rem;
  color:#525252;
  text-align:start
}

.bx--progress-step--current .bx--progress-line{
  background-color:#0f62fe
}

.bx--progress-step--incomplete svg{
  fill:#161616
}

.bx--progress-step--incomplete .bx--progress-line{
  background-color:#e0e0e0
}

.bx--progress-step--complete .bx--progress-line{
  background-color:#0f62fe
}

.bx--progress-step-button{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  display:flex;
  text-align:left
}

.bx--progress-step-button::-moz-focus-inner{
  border:0
}

.bx--progress-step-button--unclickable{
  cursor:default;
  outline:none
}

.bx--progress-step-button--unclickable .bx--progress-label:hover{
  box-shadow:none;
  color:#161616;
  cursor:default
}

.bx--progress-step-button--unclickable .bx--tooltip__label:hover{
  box-shadow:0 .0625rem #0f62fe;
  color:#0f62fe;
  cursor:pointer
}

.bx--progress-step--disabled{
  cursor:not-allowed;
  pointer-events:none
}

.bx--progress-step--disabled svg{
  cursor:not-allowed;
  fill:#c6c6c6
}

.bx--progress-step--disabled .bx--progress-label,.bx--progress-step--disabled .bx--progress-label:hover{
  box-shadow:none;
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--progress-step--disabled .bx--progress-label:focus,.bx--progress-step--disabled .bx--progress-label:active{
  box-shadow:none;
  outline:none
}

.bx--progress-step--disabled .bx--progress-line{
  cursor:not-allowed
}

.bx--progress-step--disabled .bx--progress-label-overflow:hover~.bx--tooltip--definition .bx--tooltip--definition__bottom{
  display:none
}

.bx--progress__warning>*{
  fill:#da1e28
}

.bx--progress.bx--skeleton .bx--progress-label{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:2.5rem;
  height:.875rem;
  margin-top:.625rem
}

.bx--progress.bx--skeleton .bx--progress-label:hover,.bx--progress.bx--skeleton .bx--progress-label:focus,.bx--progress.bx--skeleton .bx--progress-label:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--progress.bx--skeleton .bx--progress-label::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--progress.bx--skeleton .bx--progress-label::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--progress--vertical{
  display:flex;
  flex-direction:column
}

.bx--progress--vertical,.bx--progress-text{
  display:flex;
  flex-direction:column
}

.bx--progress--vertical .bx--progress-step,.bx--progress--vertical .bx--progress-step-button{
  width:initial;
  min-width:initial;
  min-height:3.625rem;
  align-content:flex-start
}

.bx--progress--vertical .bx--progress-step svg,.bx--progress--vertical .bx--progress-step-button svg{
  display:inline-block;
  margin:.0625rem .5rem 0
}

.bx--progress--vertical .bx--progress-label{
  display:inline-block;
  width:initial;
  max-width:10rem;
  margin:0;
  vertical-align:top;
  white-space:initial
}

.bx--progress--vertical .bx--progress-step .bx--tooltip{
  margin-top:.5rem
}

.bx--progress--vertical .bx--progress-optional{
  position:static;
  width:100%;
  margin:auto 0
}

.bx--progress--vertical .bx--progress-line{
  position:absolute;
  top:0;
  left:0;
  width:1px;
  height:100%
}

.bx--radio-button-group{
  position:relative;
  display:flex;
  align-items:center
}

.bx--label+.bx--form-item .bx--radio-button-group{
  margin-top:0
}

.bx--radio-button-group--vertical{
  flex-direction:column;
  align-items:flex-start
}

.bx--radio-button-group--vertical.bx--radio-button-group--label-left{
  align-items:flex-end
}

.bx--radio-button-group--vertical .bx--radio-button__label{
  margin-right:0;
  line-height:1.25rem
}

.bx--radio-button-group--vertical .bx--radio-button__label:not(:last-of-type){
  margin-bottom:.5rem
}

.bx--radio-button{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap;
  visibility:inherit
}

.bx--radio-button__label{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:flex;
  align-items:center;
  margin-right:1rem;
  cursor:pointer
}

.bx--radio-button__appearance{
  width:1.125rem;
  height:1.125rem;
  flex-shrink:0;
  border:1px solid #161616;
  margin:.0625rem .5rem .125rem .125rem;
  background-color:transparent;
  border-radius:50%
}

.bx--radio-button:checked+.bx--radio-button__label .bx--radio-button__appearance{
  display:flex;
  align-items:center;
  justify-content:center;
  border-color:#161616
}

.bx--radio-button:checked+.bx--radio-button__label .bx--radio-button__appearance::before{
  position:relative;
  display:inline-block;
  width:100%;
  height:100%;
  background-color:#161616;
  border-radius:50%;
  content:"";
  transform:scale(0.5)
}

@media screen and (-ms-high-contrast: active){
  .bx--radio-button:checked+.bx--radio-button__label .bx--radio-button__appearance::before{
    background-color:WindowText
  }
}

@media screen and (prefers-contrast){
  .bx--radio-button:checked+.bx--radio-button__label .bx--radio-button__appearance::before{
    border:2px solid WindowText
  }
}

.bx--radio-button:disabled+.bx--radio-button__label{
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--radio-button:disabled+.bx--radio-button__label .bx--radio-button__appearance,.bx--radio-button:disabled:checked+.bx--radio-button__label .bx--radio-button__appearance{
  border-color:#c6c6c6
}

.bx--radio-button:disabled+.bx--radio-button__label .bx--radio-button__appearance::before,.bx--radio-button:disabled:checked+.bx--radio-button__label .bx--radio-button__appearance::before{
  background-color:#c6c6c6
}

.bx--radio-button:focus+.bx--radio-button__label .bx--radio-button__appearance{
  outline:2px solid #0f62fe;
  outline-offset:1.5px
}

.bx--radio-button__label.bx--skeleton{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:6.25rem;
  height:1.125rem
}

.bx--radio-button__label.bx--skeleton:hover,.bx--radio-button__label.bx--skeleton:focus,.bx--radio-button__label.bx--skeleton:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--radio-button__label.bx--skeleton::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--radio-button__label.bx--skeleton::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--radio-button__label.bx--skeleton .bx--radio-button__appearance{
  display:none
}

.bx--radio-button-wrapper .bx--radio-button__label{
  display:flex;
  align-items:flex-start;
  justify-content:center;
  margin:0
}

.bx--radio-button-wrapper:not(:last-of-type){
  margin-right:1rem
}

.bx--radio-button-group--vertical .bx--radio-button-wrapper:not(:last-of-type){
  margin-right:0;
  margin-bottom:.5rem
}

.bx--radio-button-group--label-right .bx--radio-button__label,.bx--radio-button-wrapper.bx--radio-button-wrapper--label-right .bx--radio-button__label{
  flex-direction:row
}

.bx--radio-button-group--label-left .bx--radio-button__label,.bx--radio-button-wrapper.bx--radio-button-wrapper--label-left .bx--radio-button__label{
  flex-direction:row-reverse
}

.bx--radio-button-group--label-left .bx--radio-button__appearance,.bx--radio-button-wrapper.bx--radio-button-wrapper--label-left .bx--radio-button__appearance{
  margin-right:0;
  margin-left:.5rem
}

.bx--search{
  position:relative;
  display:flex;
  width:100%;
  align-items:center
}

.bx--search .bx--label{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap
}

.bx--search-input{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  outline:2px solid transparent;
  outline-offset:-2px;
  width:100%;
  order:1;
  padding:0 2.5rem;
  border:none;
  border-bottom:1px solid #8d8d8d;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background-color:#fff;
  color:#161616;
  text-overflow:ellipsis;
  transition:background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9),outline 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--search-input:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--search-input:focus{
    outline-style:dotted
  }
}

.bx--search-input::-moz-placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--search-input:-ms-input-placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--search-input::placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--search-input::-ms-clear{
  display:none
}

.bx--search-input[disabled]{
  border-bottom:1px solid transparent;
  background-color:#fff;
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--search-input[disabled]::-moz-placeholder{
  color:#c6c6c6
}

.bx--search-input[disabled]:-ms-input-placeholder{
  color:#c6c6c6
}

.bx--search-input[disabled]::placeholder{
  color:#c6c6c6
}

.bx--search--light .bx--search-input{
  background:#f4f4f4
}

.bx--search--light .bx--search-close::before{
  background:#f4f4f4
}

.bx--search--sm .bx--search-input,.bx--search--sm.bx--search--expandable.bx--search--expanded .bx--search-input{
  height:2rem;
  padding:0 2rem
}

.bx--search--sm .bx--search-magnifier-icon{
  left:.5rem
}

.bx--search--lg .bx--search-input,.bx--search--lg.bx--search--expandable.bx--search--expanded .bx--search-input{
  height:2.5rem;
  padding:0 2.5rem
}

.bx--search--lg .bx--search-magnifier-icon{
  left:.75rem
}

.bx--search--xl .bx--search-input,.bx--search--xl.bx--search--expandable.bx--search--expanded .bx--search-input{
  height:3rem;
  padding:0 3rem
}

.bx--search-magnifier-icon{
  position:absolute;
  z-index:2;
  top:50%;
  left:1rem;
  width:1rem;
  height:1rem;
  fill:#525252;
  pointer-events:none;
  transform:translateY(-50%)
}

.bx--search-close{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  outline:2px solid transparent;
  outline-offset:-2px;
  position:absolute;
  top:0;
  right:0
}

.bx--search-close::-moz-focus-inner{
  border:0
}

.bx--search-close::before{
  position:absolute;
  top:.0625rem;
  left:0;
  display:block;
  width:2px;
  height:calc(100% - 2px);
  background-color:#fff;
  content:"";
  transition:background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--search-close:hover{
  border-bottom:1px solid #8d8d8d
}

.bx--search-close:hover::before{
  background-color:#e5e5e5
}

.bx--search-button{
  flex-shrink:0;
  margin-left:.125rem;
  background-color:#fff
}

.bx--search-button svg{
  fill:currentColor;
  vertical-align:middle
}

.bx--search-close svg{
  fill:inherit
}

.bx--search-close,.bx--search-button{
  display:flex;
  width:2.5rem;
  height:2.5rem;
  align-items:center;
  justify-content:center;
  border-width:1px 0;
  border-style:solid;
  border-color:transparent;
  cursor:pointer;
  fill:#161616;
  opacity:1;
  transition:opacity 110ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9),outline 110ms cubic-bezier(0.2, 0, 0.38, 0.9),border 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  visibility:inherit
}

.bx--search-close:hover,.bx--search-button:hover{
  background-color:#e5e5e5
}

.bx--search-close:focus,.bx--search-button:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--search-close:focus,.bx--search-button:focus{
    outline-style:dotted
  }
}

.bx--search-close:active,.bx--search-button:active{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  background-color:#e0e0e0
}

@media screen and (prefers-contrast){
  .bx--search-close:active,.bx--search-button:active{
    outline-style:dotted
  }
}

.bx--search--disabled .bx--search-close,.bx--search--disabled.bx--search--expandable .bx--search-magnifier{
  cursor:not-allowed;
  outline:none
}

.bx--search--disabled .bx--search-close:hover,.bx--search--disabled.bx--search--expandable .bx--search-magnifier:hover{
  border-bottom-color:transparent;
  background-color:transparent
}

.bx--search--disabled .bx--search-close:hover::before,.bx--search--disabled.bx--search--expandable .bx--search-magnifier:hover::before{
  background-color:transparent
}

.bx--search--disabled svg{
  fill:#c6c6c6
}

.bx--search-close:focus::before,.bx--search-close:active::before{
  background-color:#0f62fe
}

.bx--search-input:focus~.bx--search-close:hover{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--search-input:focus~.bx--search-close:hover{
    outline-style:dotted
  }
}

.bx--search--sm .bx--search-close,.bx--search--sm~.bx--search-button,.bx--search--sm.bx--search--expandable,.bx--search--sm.bx--search--expandable .bx--search-magnifier{
  width:2rem;
  height:2rem
}

.bx--search--sm.bx--search--expandable .bx--search-input::-moz-placeholder{
  padding:0 2rem
}

.bx--search--sm.bx--search--expandable .bx--search-input:-ms-input-placeholder{
  padding:0 2rem
}

.bx--search--sm.bx--search--expandable .bx--search-input::placeholder{
  padding:0 2rem
}

.bx--search--lg .bx--search-close,.bx--search--lg~.bx--search-button,.bx--search--lg.bx--search--expandable,.bx--search--lg.bx--search--expandable .bx--search-magnifier{
  width:2.5rem;
  height:2.5rem
}

.bx--search--lg.bx--search--expandable .bx--search-input::-moz-placeholder{
  padding:0 2.5rem
}

.bx--search--lg.bx--search--expandable .bx--search-input:-ms-input-placeholder{
  padding:0 2.5rem
}

.bx--search--lg.bx--search--expandable .bx--search-input::placeholder{
  padding:0 2.5rem
}

.bx--search--xl .bx--search-close,.bx--search--xl~.bx--search-button,.bx--search--xl.bx--search--expandable,.bx--search--xl.bx--search--expandable .bx--search-magnifier{
  width:3rem;
  height:3rem
}

.bx--search--xl.bx--search--expandable .bx--search-input::-moz-placeholder{
  padding:0 3rem
}

.bx--search--xl.bx--search--expandable .bx--search-input:-ms-input-placeholder{
  padding:0 3rem
}

.bx--search--xl.bx--search--expandable .bx--search-input::placeholder{
  padding:0 3rem
}

.bx--search-close--hidden{
  opacity:0;
  visibility:hidden
}

.bx--search--xl.bx--skeleton .bx--search-input,.bx--search--lg.bx--skeleton .bx--search-input,.bx--search--sm.bx--skeleton .bx--search-input{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:100%
}

.bx--search--xl.bx--skeleton .bx--search-input:hover,.bx--search--xl.bx--skeleton .bx--search-input:focus,.bx--search--xl.bx--skeleton .bx--search-input:active,.bx--search--lg.bx--skeleton .bx--search-input:hover,.bx--search--lg.bx--skeleton .bx--search-input:focus,.bx--search--lg.bx--skeleton .bx--search-input:active,.bx--search--sm.bx--skeleton .bx--search-input:hover,.bx--search--sm.bx--skeleton .bx--search-input:focus,.bx--search--sm.bx--skeleton .bx--search-input:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--search--xl.bx--skeleton .bx--search-input::before,.bx--search--lg.bx--skeleton .bx--search-input::before,.bx--search--sm.bx--skeleton .bx--search-input::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--search--xl.bx--skeleton .bx--search-input::before,.bx--search--lg.bx--skeleton .bx--search-input::before,.bx--search--sm.bx--skeleton .bx--search-input::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--search--xl.bx--skeleton .bx--search-input::-moz-placeholder, .bx--search--lg.bx--skeleton .bx--search-input::-moz-placeholder, .bx--search--sm.bx--skeleton .bx--search-input::-moz-placeholder{
  color:transparent
}

.bx--search--xl.bx--skeleton .bx--search-input:-ms-input-placeholder, .bx--search--lg.bx--skeleton .bx--search-input:-ms-input-placeholder, .bx--search--sm.bx--skeleton .bx--search-input:-ms-input-placeholder{
  color:transparent
}

.bx--search--xl.bx--skeleton .bx--search-input::placeholder,.bx--search--lg.bx--skeleton .bx--search-input::placeholder,.bx--search--sm.bx--skeleton .bx--search-input::placeholder{
  color:transparent
}

.bx--search--expandable{
  transition:width 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--search--expandable.bx--search--expanded{
  width:100%
}

.bx--search--expandable .bx--search-input{
  width:0;
  padding:0;
  transition:padding 70ms cubic-bezier(0.2, 0, 0.38, 0.9),width 0s linear 70ms
}

.bx--search--expandable .bx--search-input::-moz-placeholder{
  position:relative;
  opacity:0;
  transition-duration:70ms;
  -moz-transition-property:padding,opacity;
  transition-property:padding,opacity;
  transition-timing-function:cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--search--expandable .bx--search-input:-ms-input-placeholder{
  position:relative;
  opacity:0;
  transition-duration:70ms;
  -ms-transition-property:padding,opacity;
  transition-property:padding,opacity;
  transition-timing-function:cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--search--expandable .bx--search-input::placeholder{
  position:relative;
  opacity:0;
  transition-duration:70ms;
  transition-property:padding,opacity;
  transition-timing-function:cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--search--expandable.bx--search--expanded .bx--search-input{
  width:100%;
  transition:padding 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--search--expandable.bx--search--expanded .bx--search-input::-moz-placeholder{
  position:relative;
  padding:0;
  opacity:1
}

.bx--search--expandable.bx--search--expanded .bx--search-input:-ms-input-placeholder{
  position:relative;
  padding:0;
  opacity:1
}

.bx--search--expandable.bx--search--expanded .bx--search-input::placeholder{
  position:relative;
  padding:0;
  opacity:1
}

.bx--search--expandable .bx--search-magnifier{
  position:absolute;
  cursor:pointer
}

.bx--search--expandable .bx--search-magnifier:hover{
  background-color:#e5e5e5
}

.bx--search--expandable.bx--search--expanded .bx--search-magnifier{
  pointer-events:none
}

.bx--search--expandable .bx--search-magnifier-icon{
  fill:#161616
}

.bx--search--expandable.bx--search--expanded .bx--search-magnifier-icon{
  fill:#525252
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--search-close svg,.bx--search-magnifier-icon{
    fill:ButtonText
  }
}

.bx--skeleton__text{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:100%;
  height:1rem;
  margin-bottom:.5rem
}

.bx--skeleton__text:hover,.bx--skeleton__text:focus,.bx--skeleton__text:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--skeleton__text::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--skeleton__text::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--skeleton__heading{
  height:1.5rem
}

.bx--icon--skeleton{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  display:inline-block;
  width:1rem;
  height:1rem
}

.bx--icon--skeleton:hover,.bx--icon--skeleton:focus,.bx--icon--skeleton:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--icon--skeleton::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--icon--skeleton::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--skeleton__placeholder{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:6.25rem;
  height:6.25rem
}

.bx--skeleton__placeholder:hover,.bx--skeleton__placeholder:focus,.bx--skeleton__placeholder:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--skeleton__placeholder::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--skeleton__placeholder::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--slider-container{
  display:flex;
  align-items:center;
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none
}

.bx--slider{
  position:relative;
  width:100%;
  min-width:12.5rem;
  max-width:40rem;
  padding:1rem 0;
  margin:0 1rem;
  cursor:pointer
}

.bx--slider__range-label{
  font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace;
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.32px;
  color:#161616;
  white-space:nowrap
}

.bx--slider__range-label:last-of-type{
  margin-right:1rem
}

.bx--slider__track{
  position:absolute;
  width:100%;
  height:.125rem;
  background:#e0e0e0;
  transform:translate(0%, -50%)
}

.bx--slider__track:before{
  position:absolute;
  top:-0.3125rem;
  left:50%;
  display:inline-block;
  width:.125rem;
  height:.25rem;
  background:#e0e0e0;
  content:"";
  transform:translate(-50%, 0)
}

.bx--slider__filled-track{
  position:absolute;
  width:100%;
  height:.125rem;
  background:#161616;
  pointer-events:none;
  transform:translate(0%, -50%);
  transform-origin:left;
  transition:background 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--slider__thumb{
  position:absolute;
  z-index:3;
  width:.875rem;
  height:.875rem;
  background:#161616;
  border-radius:50%;
  box-shadow:inset 0 0 0 1px transparent,inset 0 0 0 2px transparent;
  outline:none;
  transform:translate(-50%, -50%);
  transition:transform 110ms cubic-bezier(0.2, 0, 0.38, 0.9),background 110ms cubic-bezier(0.2, 0, 0.38, 0.9),box-shadow 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--slider__thumb:hover{
  transform:translate(-50%, -50%) scale(1.4286)
}

.bx--slider__thumb:focus{
  background-color:#0f62fe;
  box-shadow:inset 0 0 0 2px #0f62fe,inset 0 0 0 3px #fff;
  transform:translate(-50%, -50%) scale(1.4286)
}

.bx--slider__thumb:active{
  box-shadow:inset 0 0 0 2px #0f62fe;
  transform:translate(-50%, -50%) scale(1.4286)
}

.bx--slider__input{
  display:none
}

.bx--slider-text-input,.bx-slider-text-input{
  width:4rem;
  height:2.5rem;
  -moz-appearance:textfield;
  text-align:center
}

.bx--slider-text-input::-webkit-outer-spin-button,.bx--slider-text-input::-webkit-inner-spin-button,.bx-slider-text-input::-webkit-outer-spin-button,.bx-slider-text-input::-webkit-inner-spin-button{
  display:none
}

.bx--slider-text-input.bx--text-input--invalid{
  padding-right:1rem
}

.bx--slider__thumb:focus~.bx--slider__filled-track{
  background-color:#0f62fe
}

.bx--label--disabled~.bx--slider-container>.bx--slider__range-label{
  color:#c6c6c6
}

.bx--slider--disabled.bx--slider{
  cursor:not-allowed
}

.bx--slider--disabled .bx--slider__thumb{
  background-color:#e0e0e0
}

.bx--slider--disabled .bx--slider__thumb:hover{
  cursor:not-allowed;
  transform:translate(-50%, -50%)
}

.bx--slider--disabled .bx--slider__thumb:focus{
  background-color:#e0e0e0;
  box-shadow:none;
  outline:none;
  transform:translate(-50%, -50%)
}

.bx--slider--disabled .bx--slider__thumb:active{
  background:#e0e0e0;
  transform:translate(-50%, -50%)
}

.bx--slider--disabled .bx--slider__track,.bx--slider--disabled .bx--slider__filled-track,.bx--slider--disabled .bx--slider__thumb:focus~.bx--slider__filled-track{
  background-color:#e0e0e0
}

.bx--slider--disabled~.bx--form-item .bx--slider-text-input,.bx--slider--disabled~.bx--slider-text-input{
  border:none;
  background-color:#fff;
  color:#c6c6c6;
  cursor:not-allowed;
  transition:none
}

.bx--slider--disabled~.bx--form-item .bx--slider-text-input:active,.bx--slider--disabled~.bx--form-item .bx--slider-text-input:focus,.bx--slider--disabled~.bx--form-item .bx--slider-text-input:hover,.bx--slider--disabled~.bx--slider-text-input:active,.bx--slider--disabled~.bx--slider-text-input:focus,.bx--slider--disabled~.bx--slider-text-input:hover{
  color:#c6c6c6;
  outline:none
}

.bx--slider-container.bx--skeleton .bx--slider__range-label{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:1.25rem;
  height:.75rem
}

.bx--slider-container.bx--skeleton .bx--slider__range-label:hover,.bx--slider-container.bx--skeleton .bx--slider__range-label:focus,.bx--slider-container.bx--skeleton .bx--slider__range-label:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--slider-container.bx--skeleton .bx--slider__range-label::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--slider-container.bx--skeleton .bx--slider__range-label::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--slider-container.bx--skeleton .bx--slider__track{
  cursor:default;
  pointer-events:none
}

.bx--slider-container.bx--skeleton .bx--slider__thumb{
  left:50%;
  cursor:default;
  pointer-events:none
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--slider__thumb{
    outline:1px solid transparent
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--slider__thumb:focus{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--slider__track{
    outline:1px solid transparent
  }
}

.bx--structured-list--selection .bx--structured-list-td,.bx--structured-list--selection .bx--structured-list-th{
  padding-right:1rem;
  padding-left:1rem
}

.bx--structured-list--selection .bx--structured-list-td:first-child,.bx--structured-list--selection .bx--structured-list-th:first-child{
  padding-right:1rem;
  padding-left:1rem
}

.bx--structured-list-input{
  display:none
}

.bx--structured-list{
  display:table;
  width:100%;
  margin-bottom:5rem;
  background-color:transparent;
  border-collapse:collapse;
  border-spacing:0;
  overflow-x:auto
}

.bx--structured-list.bx--structured-list--condensed .bx--structured-list-td,.bx--structured-list.bx--structured-list--condensed .bx--structured-list-th{
  padding:.5rem
}

.bx--structured-list .bx--structured-list-row .bx--structured-list-td:first-of-type,.bx--structured-list .bx--structured-list-row .bx--structured-list-th:first-of-type{
  padding-left:1rem
}

.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-td,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-th,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-td:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-th:first-of-type{
  padding-right:1rem;
  padding-left:0
}

.bx--structured-list-row{
  display:table-row;
  border-bottom:1px solid #e0e0e0;
  transition:background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row):not(.bx--structured-list-row--selected){
  border-bottom:1px solid #e5e5e5;
  background-color:#e5e5e5;
  cursor:pointer
}

.bx--structured-list-row.bx--structured-list-row--selected{
  background-color:#e0e0e0
}

.bx--structured-list-row.bx--structured-list-row--header-row{
  border-bottom:1px solid #e0e0e0;
  cursor:inherit
}

.bx--structured-list-row:focus:not(.bx--structured-list-row--header-row){
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--structured-list-row:focus:not(.bx--structured-list-row--header-row){
    outline-style:dotted
  }
}

.bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td,.bx--structured-list-row.bx--structured-list-row--selected>.bx--structured-list-td{
  color:#161616
}

.bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td{
  border-top:1px solid #fff
}

.bx--structured-list-thead{
  display:table-header-group;
  vertical-align:middle
}

.bx--structured-list-th{
  padding:1rem .5rem .5rem .5rem;
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  display:table-cell;
  height:2.5rem;
  color:#161616;
  font-weight:600;
  text-align:left;
  text-transform:none;
  vertical-align:top
}

.bx--structured-list-tbody{
  display:table-row-group;
  vertical-align:middle
}

.bx--structured-list-td{
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px;
  padding:1rem .5rem 1.5rem .5rem;
  position:relative;
  display:table-cell;
  max-width:36rem;
  color:#525252;
  transition:color 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--structured-list-content--nowrap{
  white-space:nowrap
}

.bx--structured-list-svg{
  display:inline-block;
  fill:transparent;
  transition:all 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  vertical-align:middle
}

.bx--structured-list-input:checked+.bx--structured-list-row .bx--structured-list-svg,.bx--structured-list-input:checked+.bx--structured-list-td .bx--structured-list-svg{
  fill:#161616
}

.bx--structured-list.bx--skeleton .bx--structured-list-th:first-child{
  width:8%
}

.bx--structured-list.bx--skeleton .bx--structured-list-th:nth-child(3n+2){
  width:30%
}

.bx--structured-list.bx--skeleton .bx--structured-list-th:nth-child(3n+3){
  width:15%
}

.bx--structured-list.bx--skeleton span{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  display:block;
  width:75%;
  height:1rem
}

.bx--structured-list.bx--skeleton span:hover,.bx--structured-list.bx--skeleton span:focus,.bx--structured-list.bx--skeleton span:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--structured-list.bx--skeleton span::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--structured-list.bx--skeleton span::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--structured-list.bx--structured-list--selection.bx--skeleton .bx--structured-list-th:first-child{
  width:5%
}

.bx--structured-list.bx--structured-list--selection.bx--skeleton .bx--structured-list-th:first-child span{
  display:none
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--structured-list-input:checked+.bx--structured-list-td .bx--structured-list-svg{
    fill:ButtonText
  }
}

.bx--tabs{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  position:relative;
  width:100%;
  height:auto;
  color:#161616
}

@media(min-width: 42rem){
  .bx--tabs{
    min-height:2.5rem;
    background:none
  }
}

@media(min-width: 42rem){
  .bx--tabs--container{
    min-height:3rem
  }
}

.bx--tabs-trigger{
  display:flex;
  height:2.5rem;
  align-items:center;
  justify-content:space-between;
  padding:0 3rem 0 1rem;
  border-bottom:1px solid #8d8d8d;
  background-color:#fff;
  color:#161616;
  cursor:pointer;
  outline:2px solid transparent
}

@media(min-width: 42rem){
  .bx--tabs-trigger{
    display:none
  }
}

.bx--tabs-trigger:focus,.bx--tabs-trigger:active{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--tabs-trigger:focus,.bx--tabs-trigger:active{
    outline-style:dotted
  }
}

.bx--tabs-trigger svg{
  position:absolute;
  right:1rem;
  fill:#161616;
  transition:transform 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tabs-trigger--open:focus,.bx--tabs-trigger--open:active{
  outline:2px solid transparent;
  outline-offset:-2px;
  transition:outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tabs-trigger--open{
  background:#e0e0e0
}

.bx--tabs-trigger--open svg{
  transform:rotate(-180deg);
  transform-origin:50% 45%;
  transition:transform 70ms
}

.bx--tabs--light.bx--tabs-trigger{
  background-color:#f4f4f4
}

.bx--tabs-trigger-text{
  overflow:hidden;
  padding-top:2px;
  color:#161616;
  font-weight:400;
  text-decoration:none;
  text-overflow:ellipsis;
  white-space:nowrap
}

.bx--tabs-trigger-text:hover{
  color:#161616
}

.bx--tabs-trigger-text:focus{
  outline:none
}

.bx--tabs__nav{
  box-shadow:0 2px 6px rgba(0,0,0,.3);
  position:absolute;
  z-index:9100;
  display:flex;
  width:100%;
  max-height:600px;
  flex-direction:column;
  padding:0;
  margin:0;
  background:#fff;
  list-style:none;
  transition:max-height 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

@media(min-width: 42rem){
  .bx--tabs__nav{
    z-index:auto;
    width:auto;
    flex-direction:row;
    background:none;
    box-shadow:none;
    transition:inherit
  }
}

.bx--tabs__nav--hidden{
  overflow:hidden;
  max-height:0;
  transition:max-height 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

@media(min-width: 42rem){
  .bx--tabs__nav--hidden{
    display:flex;
    max-width:100%;
    max-height:none;
    overflow-x:auto;
    transition:inherit
  }
}

.bx--tabs__nav-item{
  display:flex;
  width:100%;
  height:2.5rem;
  padding:0;
  background-color:#fff;
  cursor:pointer;
  transition:background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

@media(min-width: 42rem){
  .bx--tabs__nav-item{
    height:auto;
    background:transparent
  }

  .bx--tabs__nav-item+.bx--tabs__nav-item{
    margin-left:.0625rem
  }
}

@media(min-width: 42rem){
  .bx--tabs--container .bx--tabs__nav-item{
    background-color:#e0e0e0
  }

  .bx--tabs--container .bx--tabs__nav-item+.bx--tabs__nav-item{
    margin-left:0;
    box-shadow:-1px 0 0 0 #8d8d8d
  }

  .bx--tabs--container .bx--tabs__nav-item+.bx--tabs__nav-item.bx--tabs__nav-item--selected,.bx--tabs--container .bx--tabs__nav-item.bx--tabs__nav-item--selected+.bx--tabs__nav-item{
    box-shadow:none
  }
}

.bx--tabs__nav-item .bx--tabs__nav-link{
  transition:color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),border-bottom-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

@media(min-width: 42rem){
  .bx--tabs__nav-item:hover:not(.bx--tabs__nav-item--selected){
    background:transparent
  }
}

.bx--tabs__nav-item:hover:not(.bx--tabs__nav-item--disabled){
  background-color:#e5e5e5;
  box-shadow:0 -1px 0 #e5e5e5
}

@media(min-width: 42rem){
  .bx--tabs__nav-item:hover:not(.bx--tabs__nav-item--disabled){
    background-color:transparent
  }

  .bx--tabs__nav-item:hover:not(.bx--tabs__nav-item--disabled)+.bx--tabs__nav-item{
    box-shadow:none
  }
}

@media(min-width: 42rem){
  .bx--tabs--container .bx--tabs__nav-item:hover:not(.bx--tabs__nav-item--disabled){
    background-color:#cacaca
  }
}

.bx--tabs__nav-item--disabled,.bx--tabs__nav-item--disabled:hover{
  cursor:not-allowed;
  outline:none
}

@media(min-width: 42rem){
  .bx--tabs--container .bx--tabs__nav-item.bx--tabs__nav-item--disabled,.bx--tabs--container .bx--tabs__nav-item.bx--tabs__nav-item--disabled:hover{
    background-color:#c6c6c6
  }
}

@media(min-width: 42rem){
  .bx--tabs--container .bx--tabs__nav-item--disabled .bx--tabs__nav-link{
    border-bottom:none;
    color:#8d8d8d
  }
}

.bx--tabs__nav-item--selected:not(.bx--tabs__nav-item--disabled){
  display:none;
  border:none;
  transition:color 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

@media(min-width: 42rem){
  .bx--tabs__nav-item--selected:not(.bx--tabs__nav-item--disabled){
    display:flex
  }

  .bx--tabs__nav-item--selected:not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link,.bx--tabs__nav-item--selected:not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link:focus,.bx--tabs__nav-item--selected:not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link:active{
    font-size:.875rem;
    font-weight:600;
    line-height:1.28572;
    letter-spacing:.16px;
    border-bottom:2px solid #0f62fe;
    color:#161616
  }
}

@media(min-width: 42rem){
  .bx--tabs--container .bx--tabs__nav-item--selected:not(.bx--tabs__nav-item--disabled),.bx--tabs--container .bx--tabs__nav-item--selected:hover:not(.bx--tabs__nav-item--disabled){
    background-color:#fff
  }

  .bx--tabs--container .bx--tabs__nav-item--selected:not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link,.bx--tabs--container .bx--tabs__nav-item--selected:hover:not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link{
    padding:.5rem 1rem;
    border-bottom:none;
    box-shadow:inset 0 2px 0 0 #0f62fe;
    line-height:calc(3rem - (0.5rem * 2))
  }

  .bx--tabs--container .bx--tabs__nav-item--selected:not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link:focus,.bx--tabs--container .bx--tabs__nav-item--selected:not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link:active,.bx--tabs--container .bx--tabs__nav-item--selected:hover:not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link:focus,.bx--tabs--container .bx--tabs__nav-item--selected:hover:not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link:active{
    box-shadow:none
  }
}

a.bx--tabs__nav-link{
  outline:2px solid transparent;
  outline-offset:-2px;
  display:inline-block;
  overflow:hidden;
  width:calc(100% - 32px);
  height:2.5rem;
  padding:.75rem 0;
  border-bottom:1px solid #e0e0e0;
  margin:0 1rem;
  color:#525252;
  font-weight:400;
  line-height:1rem;
  text-decoration:none;
  text-overflow:ellipsis;
  transition:border 70ms cubic-bezier(0.2, 0, 0.38, 0.9),outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  white-space:nowrap
}

a.bx--tabs__nav-link:focus,a.bx--tabs__nav-link:active{
  outline:2px solid #0f62fe;
  outline-offset:-2px;
  width:100%;
  padding-left:16px;
  margin:0
}

@media screen and (prefers-contrast){
  a.bx--tabs__nav-link:focus,a.bx--tabs__nav-link:active{
    outline-style:dotted
  }
}

@media(min-width: 42rem){
  a.bx--tabs__nav-link{
    width:10rem;
    padding:.75rem 1rem .5rem;
    border-bottom:2px solid #e0e0e0;
    margin:0;
    line-height:inherit
  }

  a.bx--tabs__nav-link:focus,a.bx--tabs__nav-link:active{
    width:10rem;
    border-bottom:2px
  }
}

@media(min-width: 42rem){
  .bx--tabs--container a.bx--tabs__nav-link{
    height:3rem;
    padding:.5rem 1rem;
    border-bottom:none;
    line-height:calc(3rem - (0.5rem * 2))
  }
}

.bx--tabs__nav-item:hover:not(.bx--tabs__nav-item--selected):not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link{
  color:#161616
}

@media(min-width: 42rem){
  .bx--tabs__nav-item:hover:not(.bx--tabs__nav-item--selected):not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link{
    border-bottom:2px solid #8d8d8d;
    color:#161616
  }
}

@media(min-width: 42rem){
  .bx--tabs--container .bx--tabs__nav-item:hover:not(.bx--tabs__nav-item--selected):not(.bx--tabs__nav-item--disabled) .bx--tabs__nav-link{
    border-bottom:none
  }
}

.bx--tabs__nav-item--disabled .bx--tabs__nav-link{
  border-bottom:2px solid #fff;
  color:#c6c6c6;
  pointer-events:none
}

.bx--tabs__nav-item--disabled:hover .bx--tabs__nav-link{
  border-bottom:2px solid #fff;
  cursor:no-drop
}

.bx--tabs__nav-item--disabled .bx--tabs__nav-link:focus,.bx--tabs__nav-item--disabled a.bx--tabs__nav-link:active{
  border-bottom:2px solid #fff;
  outline:none
}

.bx--tabs__nav-item:not(.bx--tabs__nav-item--selected):not(.bx--tabs__nav-item--disabled):not(.bx--tabs__nav-item--selected) .bx--tabs__nav-link:focus,.bx--tabs__nav-item:not(.bx--tabs__nav-item--selected):not(.bx--tabs__nav-item--disabled):not(.bx--tabs__nav-item--selected) a.bx--tabs__nav-link:active{
  color:#525252
}

.bx--tab-content{
  padding:1rem
}

.bx--tab-content:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--tab-content:focus{
    outline-style:dotted
  }
}

.bx--tabs.bx--skeleton{
  cursor:default;
  pointer-events:none
}

.bx--skeleton.bx--tabs--scrollable:not(.bx--tabs--scrollable--container) .bx--tabs--scrollable__nav-item{
  border-bottom:2px solid #c6c6c6
}

.bx--tabs.bx--skeleton .bx--tabs__nav-link{
  display:flex;
  width:10rem;
  height:100%;
  align-items:center;
  padding:0 1rem
}

.bx--tabs.bx--skeleton .bx--tabs__nav-link span{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  display:block;
  width:100%;
  height:.875rem
}

.bx--tabs.bx--skeleton .bx--tabs__nav-link span:hover,.bx--tabs.bx--skeleton .bx--tabs__nav-link span:focus,.bx--tabs.bx--skeleton .bx--tabs__nav-link span:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--tabs.bx--skeleton .bx--tabs__nav-link span::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--tabs.bx--skeleton .bx--tabs__nav-link span::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--tabs.bx--skeleton .bx--tabs-trigger{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:6.25rem
}

.bx--tabs.bx--skeleton .bx--tabs-trigger:hover,.bx--tabs.bx--skeleton .bx--tabs-trigger:focus,.bx--tabs.bx--skeleton .bx--tabs-trigger:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--tabs.bx--skeleton .bx--tabs-trigger::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--tabs.bx--skeleton .bx--tabs-trigger::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--tabs.bx--skeleton .bx--tabs-trigger svg{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap
}

.bx--tabs--scrollable{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:flex;
  width:100%;
  height:auto;
  min-height:2.5rem;
  color:#161616
}

.bx--tabs--scrollable.bx--tabs--scrollable--container{
  min-height:3rem
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav{
  display:flex;
  overflow:auto hidden;
  width:auto;
  max-width:100%;
  flex-direction:row;
  padding:0;
  margin:0;
  list-style:none;
  outline:0;
  scrollbar-width:none;
  transition:max-height 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav::-webkit-scrollbar{
  display:none
}

.bx--tabs--scrollable .bx--tabs__overflow-indicator--left,.bx--tabs--scrollable .bx--tabs__overflow-indicator--right{
  z-index:1;
  width:.5rem;
  flex:1 0 auto
}

.bx--tabs--scrollable .bx--tabs__overflow-indicator--left{
  margin-right:-0.5rem;
  background-image:linear-gradient(to left, transparent, #f4f4f4)
}

.bx--tabs--scrollable .bx--tabs__overflow-indicator--right{
  margin-left:-0.5rem;
  background-image:linear-gradient(to right, transparent, #f4f4f4)
}

.bx--tabs--scrollable .bx--tabs--scrollable--light .bx--tabs__overflow-indicator--left{
  background-image:linear-gradient(to left, transparent, #ffffff)
}

.bx--tabs--scrollable .bx--tabs--scrollable--light .bx--tabs__overflow-indicator--right{
  background-image:linear-gradient(to right, transparent, #ffffff)
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs__overflow-indicator--left{
  background-image:linear-gradient(to left, transparent, #e0e0e0)
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs__overflow-indicator--right{
  background-image:linear-gradient(to right, transparent, #e0e0e0)
}

@media not all and (-webkit-min-device-pixel-ratio: 0), not all and (min-resolution: 0.001dpcm){
  @supports(-webkit-appearance: none) and (stroke-color: transparent){
    .bx--tabs--scrollable .bx--tabs__overflow-indicator--left{
      background-image:linear-gradient(to left, rgba(244, 244, 244, 0), #f4f4f4)
    }

    .bx--tabs--scrollable .bx--tabs__overflow-indicator--right{
      background-image:linear-gradient(to right, rgba(244, 244, 244, 0), #f4f4f4)
    }

    .bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs__overflow-indicator--left{
      background-image:linear-gradient(to left, rgba(224, 224, 224, 0), #e0e0e0)
    }

    .bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs__overflow-indicator--right{
      background-image:linear-gradient(to right, rgba(224, 224, 224, 0), #e0e0e0)
    }
  }
}

.bx--tabs--scrollable .bx--tab--overflow-nav-button{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  display:flex;
  width:2.5rem;
  flex-shrink:0;
  align-items:center;
  justify-content:center
}

.bx--tabs--scrollable .bx--tab--overflow-nav-button::-moz-focus-inner{
  border:0
}

.bx--tabs--scrollable .bx--tab--overflow-nav-button:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--tabs--scrollable .bx--tab--overflow-nav-button:focus{
    outline-style:dotted
  }
}

.bx--tabs--scrollable .bx--tab--overflow-nav-button--hidden{
  display:none
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tab--overflow-nav-button{
  width:3rem;
  margin:0;
  background-color:#e0e0e0
}

.bx--tabs--scrollable .bx--tab--overflow-nav-button svg{
  fill:#161616
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-item{
  display:flex;
  padding:0;
  cursor:pointer;
  transition:background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-item+.bx--tabs--scrollable__nav-item{
  margin-left:.0625rem
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item{
  background-color:#e0e0e0
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item+.bx--tabs--scrollable__nav-item{
  margin-left:0;
  box-shadow:-0.0625rem 0 0 0 #8d8d8d
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item+.bx--tabs--scrollable__nav-item.bx--tabs--scrollable__nav-item--selected,.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item.bx--tabs--scrollable__nav-item--selected+.bx--tabs--scrollable__nav-item{
  box-shadow:none
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-item .bx--tabs--scrollable__nav-link{
  transition:color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),border-bottom-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item:hover{
  background-color:#cacaca
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-item--disabled,.bx--tabs--scrollable .bx--tabs--scrollable__nav-item--disabled:hover{
  background-color:transparent;
  cursor:not-allowed;
  outline:none
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item.bx--tabs--scrollable__nav-item--disabled,.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item.bx--tabs--scrollable__nav-item--disabled:hover{
  background-color:#c6c6c6
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-item--selected{
  transition:color 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-item--selected .bx--tabs--scrollable__nav-link,.bx--tabs--scrollable .bx--tabs--scrollable__nav-item--selected .bx--tabs--scrollable__nav-link:focus,.bx--tabs--scrollable .bx--tabs--scrollable__nav-item--selected .bx--tabs--scrollable__nav-link:active{
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  border-bottom:2px solid #0f62fe;
  color:#161616
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item--selected,.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item--selected:hover{
  background-color:#fff
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item--selected .bx--tabs--scrollable__nav-link:focus,.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item--selected .bx--tabs--scrollable__nav-link:active,.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item--selected:hover .bx--tabs--scrollable__nav-link:focus,.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item--selected:hover .bx--tabs--scrollable__nav-link:active{
  box-shadow:none
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item--selected .bx--tabs--scrollable__nav-link{
  box-shadow:inset 0 2px 0 0 #0f62fe;
  line-height:calc(3rem - (0.5rem * 2))
}

.bx--tabs--scrollable.bx--tabs--scrollable--light.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item--selected,.bx--tabs--scrollable.bx--tabs--scrollable--light.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item--selected:hover{
  background-color:#f4f4f4
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-link{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  outline:2px solid transparent;
  outline-offset:-2px;
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  width:10rem;
  overflow:hidden;
  padding:.75rem 1rem .5rem;
  border-bottom:2px solid #e0e0e0;
  color:#525252;
  text-align:left;
  text-decoration:none;
  text-overflow:ellipsis;
  transition:border 70ms cubic-bezier(0.2, 0, 0.38, 0.9),outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
  white-space:nowrap
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-link::-moz-focus-inner{
  border:0
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-link:focus,.bx--tabs--scrollable .bx--tabs--scrollable__nav-link:active{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--tabs--scrollable .bx--tabs--scrollable__nav-link:focus,.bx--tabs--scrollable .bx--tabs--scrollable__nav-link:active{
    outline-style:dotted
  }
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-link{
  height:3rem;
  padding:.5rem 1rem;
  border-bottom:0;
  line-height:calc(3rem - (0.5rem * 2))
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-item:hover .bx--tabs--scrollable__nav-link{
  border-bottom:2px solid #8d8d8d;
  color:#161616
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item .bx--tabs--scrollable__nav-link{
  border-bottom:none
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-item--disabled .bx--tabs--scrollable__nav-link{
  border-bottom:2px solid #fff;
  color:#c6c6c6
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-item--disabled:hover .bx--tabs--scrollable__nav-link{
  border-bottom:2px solid #fff;
  color:#c6c6c6;
  cursor:not-allowed;
  pointer-events:none
}

.bx--tabs--scrollable .bx--tabs--scrollable__nav-item--disabled .bx--tabs--scrollable__nav-link:focus,.bx--tabs--scrollable .bx--tabs--scrollable__nav-item--disabled .bx--tabs--scrollable__nav-link:active{
  border-bottom:2px solid #fff;
  outline:none
}

.bx--tabs--scrollable .bx--tabs--scrollable--light .bx--tabs--scrollable__nav-item--disabled .bx--tabs--scrollable__nav-link{
  border-bottom-color:#e0e0e0
}

.bx--tabs--scrollable .bx--tabs--scrollable--light .bx--tabs--scrollable__nav-item--disabled:hover .bx--tabs--scrollable__nav-link{
  border-bottom-color:#e0e0e0
}

.bx--tabs--scrollable .bx--tabs--scrollable--light .bx--tabs--scrollable__nav-item--disabled .bx--tabs--scrollable__nav-link:focus,.bx--tabs--scrollable .bx--tabs--scrollable--light .bx--tabs--scrollable__nav-item--disabled .bx--tabs--scrollable__nav-link:active{
  border-bottom-color:#e0e0e0
}

.bx--tabs--scrollable.bx--tabs--scrollable--container .bx--tabs--scrollable__nav-item--disabled .bx--tabs--scrollable__nav-link{
  border-bottom:none;
  color:#8d8d8d
}

.bx--tabs--scrollable .bx--tab-content{
  padding:1rem
}

.bx--tabs--scrollable .bx--tabs.bx--skeleton{
  cursor:default;
  pointer-events:none
}

.bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs--scrollable__nav-link{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:4.6875rem
}

.bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs--scrollable__nav-link:hover,.bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs--scrollable__nav-link:focus,.bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs--scrollable__nav-link:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs--scrollable__nav-link::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs--scrollable__nav-link::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs-trigger{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:4.6875rem;
  margin-right:.0625rem
}

.bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs-trigger:hover,.bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs-trigger:focus,.bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs-trigger:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs-trigger::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs-trigger::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--tabs--scrollable .bx--tabs.bx--skeleton .bx--tabs-trigger svg{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--tabs--scrollable__nav-item .bx--tabs__nav-item--selected .bx--tabs--scrollable__nav-item--selected{
    color:Highlight;
    outline:1px solid Highlight
  }
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--tabs--scrollable .bx--tabs--scrollable__nav-item--disabled .bx--tabs--scrollable__nav-link{
    color:GrayText;
    fill:GrayText
  }
}

.bx--text-area{
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px;
  outline:2px solid transparent;
  outline-offset:-2px;
  width:100%;
  min-width:10rem;
  height:100%;
  min-height:2.5rem;
  padding:.6875rem 1rem;
  border:none;
  border-bottom:1px solid #8d8d8d;
  background-color:#fff;
  color:#161616;
  resize:vertical;
  transition:background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--text-area:focus,.bx--text-area:active{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--text-area:focus,.bx--text-area:active{
    outline-style:dotted
  }
}

.bx--text-area::-moz-placeholder{
  color:#6f6f6f;
  opacity:1;
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px
}

.bx--text-area:-ms-input-placeholder{
  color:#6f6f6f;
  opacity:1;
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px
}

.bx--text-area::placeholder{
  color:#6f6f6f;
  opacity:1;
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.16px
}

.bx--text-area--light{
  background-color:#f4f4f4
}

.bx--text-area--invalid{
  padding-right:2.5rem
}

.bx--text-area__wrapper{
  position:relative;
  display:flex;
  width:100%
}

.bx--text-area__invalid-icon{
  position:absolute;
  top:.75rem;
  right:1rem;
  fill:#da1e28
}

.bx--text-area:disabled{
  border-bottom:1px solid transparent;
  background-color:#fff;
  color:#c6c6c6;
  cursor:not-allowed;
  outline:none
}

.bx--text-area:disabled::-moz-placeholder{
  color:#c6c6c6
}

.bx--text-area:disabled:-ms-input-placeholder{
  color:#c6c6c6
}

.bx--text-area:disabled::placeholder{
  color:#c6c6c6
}

.bx--text-area.bx--text-area--light:disabled{
  background-color:#f4f4f4
}

.bx--text-area.bx--skeleton{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  height:6.25rem
}

.bx--text-area.bx--skeleton:hover,.bx--text-area.bx--skeleton:focus,.bx--text-area.bx--skeleton:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--text-area.bx--skeleton::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--text-area.bx--skeleton::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--text-area.bx--skeleton::-moz-placeholder{
  color:transparent
}

.bx--text-area.bx--skeleton:-ms-input-placeholder{
  color:transparent
}

.bx--text-area.bx--skeleton::placeholder{
  color:transparent
}

.bx--text-area__label-wrapper{
  display:flex;
  width:100%;
  justify-content:space-between
}

.bx--tile{
  display:block;
  min-width:8rem;
  min-height:4rem;
  padding:1rem;
  background-color:#fff;
  outline:2px solid transparent;
  outline-offset:-2px
}

.bx--tile:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--tile:focus{
    outline-style:dotted
  }
}

.bx--tile--light{
  background-color:#f4f4f4
}

.bx--tile--clickable,.bx--tile--selectable,.bx--tile--expandable{
  cursor:pointer;
  transition:150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tile--clickable:hover,.bx--tile--selectable:hover,.bx--tile--expandable:hover{
  background:#e5e5e5
}

.bx--tile--expandable .bx--link{
  color:#0043ce
}

.bx--tile--clickable:focus,.bx--tile--expandable:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--tile--clickable:focus,.bx--tile--expandable:focus{
    outline-style:dotted
  }
}

.bx--tile--clickable:hover .bx--tile__checkmark,.bx--tile--clickable:focus .bx--tile__checkmark,.bx--tile--expandable:hover .bx--tile__checkmark,.bx--tile--expandable:focus .bx--tile__checkmark{
  opacity:1
}

.bx--tile--expandable::-moz-focus-inner{
  border:0
}

.bx--tile--clickable{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  color:#161616;
  text-decoration:none
}

.bx--tile--clickable:hover,.bx--tile--clickable:active,.bx--tile--clickable:visited,.bx--tile--clickable:visited:hover{
  color:#161616;
  text-decoration:none
}

.bx--tile--clickable.bx--link--disabled{
  color:#c6c6c6
}

.bx--tile--clickable:hover.bx--link--disabled{
  display:block;
  background-color:#fff;
  color:#c6c6c6
}

.bx--tile--selectable{
  position:relative;
  padding-right:3rem;
  border:1px solid transparent
}

.bx--tile__checkmark,.bx--tile__chevron{
  position:absolute;
  border:none;
  background:transparent;
  transition:110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tile__checkmark{
  top:1rem;
  right:1rem;
  height:1rem;
  opacity:0
}

.bx--tile__checkmark svg{
  border-radius:50%;
  fill:#525252
}

.bx--tile__checkmark:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--tile__checkmark:focus{
    outline-style:dotted
  }
}

.bx--tile__checkmark--persistent{
  opacity:1
}

.bx--tile__chevron{
  position:absolute;
  right:1rem;
  bottom:1rem;
  display:flex;
  height:1rem;
  align-items:flex-end
}

.bx--tile__chevron svg{
  margin-left:.5rem;
  fill:#161616;
  transform-origin:center;
  transition:110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tile__chevron svg{
    fill:ButtonText
  }
}

.bx--tile__chevron:hover{
  cursor:pointer
}

.bx--tile__chevron:focus{
  outline:none
}

.bx--tile--expandable{
  position:relative;
  overflow:hidden;
  width:100%;
  border:0;
  color:inherit;
  font-size:inherit;
  text-align:left;
  transition:max-height 150ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tile-content__above-the-fold{
  display:block
}

.bx--tile-content__below-the-fold{
  display:block;
  opacity:0;
  transition:opacity 110ms cubic-bezier(0.2, 0, 0.38, 0.9),visibility 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  visibility:hidden
}

.bx--tile--is-expanded{
  overflow:visible;
  transition:max-height 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tile--is-expanded .bx--tile__chevron svg{
  transform:rotate(180deg)
}

.bx--tile--is-expanded .bx--tile-content__below-the-fold{
  opacity:1;
  transition:opacity 110ms cubic-bezier(0.2, 0, 0.38, 0.9),visibility 110ms cubic-bezier(0.2, 0, 0.38, 0.9);
  visibility:inherit
}

@media not all and (-webkit-min-device-pixel-ratio: 0), not all and (min-resolution: 0.001dpcm){
  @supports(-webkit-appearance: none) and (stroke-color: transparent){
    .bx--tile--is-expanded .bx--tile-content__below-the-fold{
      overflow-y:auto
    }
  }
}

.bx--tile--is-selected{
  border:1px solid #161616
}

.bx--tile--is-selected .bx--tile__checkmark{
  opacity:1
}

.bx--tile--is-selected .bx--tile__checkmark svg{
  fill:#161616
}

@media screen and (-ms-high-contrast: active),screen and (prefers-contrast){
  .bx--tile--is-selected .bx--tile__checkmark svg{
    fill:ButtonText
  }
}

.bx--tile-content{
  width:100%;
  height:100%
}

.bx--tile-input{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap
}

.bx--tile-input:focus+.bx--tile{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--tile-input:focus+.bx--tile{
    outline-style:dotted
  }
}

.bx--tile--disabled.bx--tile--selectable{
  background-color:#fff;
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--tile--disabled.bx--tile--selectable.bx--tile--light{
  background-color:#f4f4f4
}

.bx--tile--disabled.bx--tile--is-selected{
  outline-color:#c6c6c6
}

.bx--tile--disabled.bx--tile--is-selected .bx--tile__checkmark svg{
  fill:#c6c6c6
}

.bx--time-picker{
  display:flex;
  align-items:flex-end
}

.bx--time-picker__select{
  justify-content:center
}

.bx--time-picker__select:not(:last-of-type){
  margin:0 .125rem
}

.bx--time-picker__input{
  display:flex;
  flex-direction:column
}

.bx--time-picker .bx--select-input{
  width:auto;
  min-width:auto;
  padding-right:3rem;
  margin:0
}

.bx--time-picker__input-field{
  outline:2px solid transparent;
  outline-offset:-2px;
  font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace;
  font-size:.875rem;
  font-weight:400;
  line-height:1.42857;
  letter-spacing:.32px;
  display:flex;
  width:4.875rem;
  height:2.5rem;
  align-items:center;
  transition:outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--time-picker__input-field::-moz-placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--time-picker__input-field:-ms-input-placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--time-picker__input-field::placeholder{
  color:#6f6f6f;
  opacity:1
}

.bx--time-picker--light .bx--select-input{
  background-color:#f4f4f4
}

.bx--time-picker--light .bx--select-input:hover{
  background-color:#e5e5e5
}

.bx--time-picker--light .bx--select-input:disabled,.bx--time-picker--light .bx--select-input:hover:disabled{
  border-bottom:1px solid transparent;
  background-color:transparent;
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--time-picker--sm .bx--select-input,.bx--time-picker--sm .bx--time-picker__input-field{
  height:2rem;
  max-height:2rem
}

.bx--time-picker--xl .bx--select-input,.bx--time-picker--xl .bx--time-picker__input-field,.bx--time-picker--lg .bx--select-input,.bx--time-picker--lg .bx--time-picker__input-field{
  height:3rem;
  max-height:3rem
}

.bx--toggle{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap
}

.bx--toggle:focus{
  outline:none
}

.bx--toggle__label{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  position:relative;
  display:flex;
  align-items:center;
  margin:.5rem 0;
  cursor:pointer
}

.bx--toggle__appearance{
  position:relative;
  width:3rem;
  height:1.5rem
}

.bx--toggle__appearance::before{
  position:absolute;
  top:0;
  display:block;
  width:3rem;
  height:1.5rem;
  box-sizing:border-box;
  background-color:#8d8d8d;
  border-radius:.9375rem;
  box-shadow:0 0 0 1px transparent,0 0 0 3px transparent;
  content:"";
  cursor:pointer;
  transition:box-shadow 70ms cubic-bezier(0.2, 0, 1, 0.9),background-color 70ms cubic-bezier(0.2, 0, 1, 0.9);
  will-change:box-shadow
}

.bx--toggle__appearance::after{
  position:absolute;
  top:.1875rem;
  left:.1875rem;
  display:block;
  width:1.125rem;
  height:1.125rem;
  box-sizing:border-box;
  background-color:#fff;
  border-radius:50%;
  content:"";
  cursor:pointer;
  transition:transform 70ms cubic-bezier(0.2, 0, 1, 0.9)
}

.bx--toggle__check{
  position:absolute;
  z-index:1;
  top:.375rem;
  left:.375rem;
  width:.375rem;
  height:.3125rem;
  fill:#fff;
  transform:scale(0.2);
  transition:70ms cubic-bezier(0.2, 0, 1, 0.9)
}

.bx--toggle__text--left,.bx--toggle__text--right{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  position:relative;
  margin-left:.5rem
}

.bx--toggle__text--left{
  position:absolute;
  left:3rem
}

.bx--toggle:checked+.bx--toggle__label .bx--toggle__text--left,.bx--toggle:not(:checked)+.bx--toggle__label .bx--toggle__text--right{
  visibility:hidden
}

.bx--toggle:checked+.bx--toggle__label .bx--toggle__text--right,.bx--toggle:not(:checked)+.bx--toggle__label .bx--toggle__text--left{
  display:inline
}

.bx--toggle:checked+.bx--toggle__label .bx--toggle__appearance::before{
  background-color:#198038
}

.bx--toggle:checked+.bx--toggle__label .bx--toggle__appearance::after{
  background-color:#fff;
  transform:translateX(1.5rem)
}

.bx--toggle+.bx--toggle__label .bx--toggle__appearance::before{
  box-shadow:0 0 0 1px transparent,0 0 0 3px transparent
}

.bx--toggle:focus+.bx--toggle__label,.bx--toggle:active+.bx--toggle__label .bx--toggle__appearance::before{
  box-shadow:0 0 0 1px #e0e0e0,0 0 0 3px #0f62fe
}

.bx--toggle:disabled+.bx--toggle__label{
  cursor:not-allowed
}

.bx--toggle:disabled+.bx--toggle__label .bx--toggle__appearance::before{
  background-color:#fff
}

.bx--toggle:disabled+.bx--toggle__label .bx--toggle__appearance::after{
  background-color:#c6c6c6
}

.bx--toggle:disabled+.bx--toggle__label .bx--toggle__appearance::before,.bx--toggle:disabled+.bx--toggle__label .bx--toggle__appearance::after{
  cursor:not-allowed;
  transition:70ms cubic-bezier(0.2, 0, 1, 0.9)
}

.bx--toggle:disabled+.bx--toggle__label .bx--toggle__text--left,.bx--toggle:disabled+.bx--toggle__label .bx--toggle__text--right{
  color:#c6c6c6
}

.bx--toggle:disabled:active+.bx--toggle__label .bx--toggle__appearance:before{
  box-shadow:none
}

.bx--toggle:disabled+.bx--toggle__label .bx--toggle__check{
  fill:#c6c6c6
}

.bx--toggle--small+.bx--toggle__label .bx--toggle__appearance{
  width:2rem;
  height:1rem
}

.bx--toggle--small+.bx--toggle__label .bx--toggle__appearance::before{
  top:0;
  width:2rem;
  height:1rem;
  box-sizing:border-box;
  border-radius:.9375rem
}

.bx--toggle--small+.bx--toggle__label .bx--toggle__appearance::after{
  top:.1875rem;
  left:.1875rem;
  width:.625rem;
  height:.625rem
}

.bx--toggle--small:checked+.bx--toggle__label .bx--toggle__check{
  fill:#198038;
  transform:scale(1) translateX(1rem)
}

.bx--toggle--small+.bx--toggle__label .bx--toggle__text--left{
  left:2rem
}

.bx--toggle--small:checked+.bx--toggle__label .bx--toggle__appearance::after{
  margin-left:0;
  transform:translateX(1.0625rem)
}

.bx--toggle-input{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap
}

.bx--toggle-input:focus{
  outline:none
}

.bx--toggle-input__label{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  display:flex;
  flex-direction:column;
  align-items:flex-start;
  color:#525252;
  cursor:pointer
}

.bx--toggle__switch{
  position:relative;
  display:flex;
  width:3rem;
  height:1.5rem;
  align-items:center;
  cursor:pointer
}

.bx--toggle__switch::before{
  position:absolute;
  top:0;
  display:block;
  width:3rem;
  height:1.5rem;
  box-sizing:border-box;
  background-color:#8d8d8d;
  border-radius:.9375rem;
  box-shadow:0 0 0 1px transparent,0 0 0 3px transparent;
  content:"";
  transition:box-shadow 70ms cubic-bezier(0.2, 0, 1, 0.9),background-color 70ms cubic-bezier(0.2, 0, 1, 0.9);
  will-change:box-shadow
}

.bx--toggle__switch::after{
  position:absolute;
  top:.1875rem;
  left:.1875rem;
  display:block;
  width:1.125rem;
  height:1.125rem;
  box-sizing:border-box;
  background-color:#fff;
  border-radius:50%;
  content:"";
  transition:transform 70ms cubic-bezier(0.2, 0, 1, 0.9)
}

.bx--toggle-input__label .bx--toggle__switch{
  margin-top:1rem
}

.bx--toggle__text--off,.bx--toggle__text--on{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  position:absolute;
  top:50%;
  margin-left:3.5rem;
  transform:translateY(-50%);
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none;
  white-space:nowrap
}

.bx--toggle-input:checked+.bx--toggle-input__label>.bx--toggle__switch>.bx--toggle__text--off,.bx--toggle-input:not(:checked)+.bx--toggle-input__label>.bx--toggle__switch>.bx--toggle__text--on{
  visibility:hidden
}

.bx--toggle-input:checked+.bx--toggle-input__label>.bx--toggle__switch::before{
  background-color:#198038
}

.bx--toggle-input:checked+.bx--toggle-input__label>.bx--toggle__switch::after{
  background-color:#fff;
  transform:translateX(1.5rem)
}

.bx--toggle-input:focus+.bx--toggle-input__label>.bx--toggle__switch::before,.bx--toggle-input:active+.bx--toggle-input__label>.bx--toggle__switch::before{
  box-shadow:0 0 0 1px #f4f4f4,0 0 0 3px #0f62fe
}

.bx--toggle-input:disabled+.bx--toggle-input__label{
  color:#c6c6c6;
  cursor:not-allowed
}

.bx--toggle-input:disabled+.bx--toggle-input__label>.bx--toggle__switch{
  cursor:not-allowed
}

.bx--toggle-input:disabled+.bx--toggle-input__label>.bx--toggle__switch::before{
  background-color:#c6c6c6
}

.bx--toggle-input:disabled+.bx--toggle-input__label>.bx--toggle__switch::after{
  background-color:#8d8d8d
}

.bx--toggle-input:disabled+.bx--toggle-input__label>.bx--toggle__switch::before,.bx--toggle-input:disabled+.bx--toggle-input__label>.bx--toggle__switch::after{
  cursor:not-allowed;
  transition:70ms cubic-bezier(0.2, 0, 1, 0.9)
}

.bx--toggle-input:disabled:active+.bx--toggle-input__label>.bx--toggle__switch::before{
  box-shadow:none
}

.bx--toggle-input--small+.bx--toggle-input__label>.bx--toggle__switch{
  width:2rem;
  height:1rem
}

.bx--toggle-input--small+.bx--toggle-input__label>.bx--toggle__switch::before{
  width:2rem;
  height:1rem;
  border-radius:.9375rem
}

.bx--toggle-input--small+.bx--toggle-input__label>.bx--toggle__switch::after{
  width:.625rem;
  height:.625rem
}

.bx--toggle-input--small+.bx--toggle-input__label .bx--toggle__text--off,.bx--toggle-input--small+.bx--toggle-input__label .bx--toggle__text--on{
  margin-left:2.5rem
}

.bx--toggle-input--small:checked+.bx--toggle-input__label>.bx--toggle__switch::after{
  transform:translateX(1.0625rem)
}

.bx--toggle-input--small:checked+.bx--toggle-input__label .bx--toggle__check{
  fill:#198038;
  transform:scale(1) translateX(1rem)
}

.bx--toggle-input--small:disabled:checked+.bx--toggle-input__label .bx--toggle__check{
  fill:#fff
}

.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:3rem;
  margin-top:.5rem
}

.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch:hover,.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch:focus,.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--toggle.bx--skeleton+.bx--toggle-input__label>div{
  overflow:hidden;
  width:1.5rem;
  height:.5rem;
  font-size:0%;
  line-height:0;
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none
}

.bx--toggle.bx--skeleton+.bx--toggle-input__label>div:hover,.bx--toggle.bx--skeleton+.bx--toggle-input__label>div:focus,.bx--toggle.bx--skeleton+.bx--toggle-input__label>div:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--toggle.bx--skeleton+.bx--toggle-input__label>div::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--toggle.bx--skeleton+.bx--toggle-input__label>div::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  width:2rem;
  margin-top:.5rem
}

.bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch:hover,.bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch:focus,.bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label>div{
  overflow:hidden;
  width:1rem;
  height:.5rem;
  font-size:0%;
  line-height:0;
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none
}

.bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label>div:hover,.bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label>div:focus,.bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label>div:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label>div::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label>div::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch .bx--toggle__text--left{
  position:relative;
  padding:0;
  border:none;
  background:#e5e5e5;
  box-shadow:none;
  pointer-events:none;
  position:absolute;
  width:1rem;
  height:.5rem
}

.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch .bx--toggle__text--left:hover,.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch .bx--toggle__text--left:focus,.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch .bx--toggle__text--left:active{
  border:none;
  cursor:default;
  outline:none
}

.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch .bx--toggle__text--left::before{
  position:absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  -webkit-animation:3000ms ease-in-out skeleton infinite;
  animation:3000ms ease-in-out skeleton infinite;
  background:#c6c6c6;
  content:"";
  will-change:transform-origin,transform,opacity
}

@media(prefers-reduced-motion: reduce){
  .bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch .bx--toggle__text--left::before{
    -webkit-animation:none;
    animation:none
  }
}

.bx--toggle-input--small.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch .bx--toggle__text--left{
  left:2rem
}

.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch::after,.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__appearance::after,.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__appearance::before{
  display:none
}

.bx--toggle.bx--skeleton+.bx--toggle-input__label .bx--toggle__switch::before{
  border-radius:0
}

.bx--toolbar{
  display:flex;
  flex-flow:row nowrap;
  align-items:center;
  margin:1rem 0
}

.bx--toolbar>div{
  margin:0 .25rem
}

.bx--toolbar .bx--search-input{
  height:2rem;
  background-color:transparent;
  outline:none
}

.bx--toolbar .bx--search-close{
  display:none
}

.bx--toolbar .bx--overflow-menu__icon{
  fill:#525252;
  transition:fill 50ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--toolbar .bx--search-magnifier{
  top:.5rem;
  left:.375rem;
  cursor:pointer;
  fill:#525252;
  transform:scale(1.15);
  transition:all 175ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--toolbar fieldset{
  padding:0;
  border:0
}

.bx--toolbar .bx--toolbar-search--active{
  width:15.625rem
}

.bx--toolbar .bx--toolbar-search--active .bx--search-magnifier{
  top:.5625rem;
  transform:scale(1)
}

.bx--toolbar .bx--toolbar-search--active .bx--search-input{
  background-color:#f4f4f4
}

.bx--toolbar .bx--toolbar-search--active .bx--search-close{
  display:block
}

.bx--toolbar .bx--checkbox-label{
  margin-bottom:0
}

.bx--toolbar .bx--overflow-menu--open>.bx--overflow-menu__icon{
  fill:#0f62fe
}

.bx--toolbar-search{
  width:1.8rem;
  transition:all 175ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--toolbar-search__btn{
  position:absolute;
  top:0;
  left:0;
  width:2rem;
  height:2rem;
  border:0;
  background:transparent
}

.bx--toolbar-search__btn:focus{
  outline:1px solid #0f62fe
}

@media screen and (prefers-contrast){
  .bx--toolbar-search__btn:focus{
    outline-style:dotted
  }
}

.bx--toolbar-filter-icon{
  padding-right:0;
  padding-left:0
}

.bx--toolbar-menu__title{
  font-size:.75rem;
  font-weight:400;
  line-height:1.33333;
  letter-spacing:.32px;
  padding:.5rem 1.25rem;
  font-weight:600
}

.bx--toolbar-menu__option{
  padding:.5rem 1.25rem
}

.bx--toolbar-menu__divider{
  width:100%;
  border:0;
  border-top:1px solid #e0e0e0
}

.bx--radio-button-group{
  border:none
}

.bx--toolbar-search:not(.bx--toolbar-search--active) .bx--search-input{
  border-bottom:none
}

.bx--unstable-pagination{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:flex;
  width:100%;
  height:3rem;
  align-items:center;
  justify-content:space-between;
  border-top:1px solid #e0e0e0;
  border-bottom:1px solid transparent;
  background-color:#fff
}

.bx--unstable-pagination__text{
  margin:0 1rem;
  color:#525252
}

@media(min-width: 42rem){
  .bx--unstable-pagination__text{
    display:inline-block
  }
}

.bx--unstable-pagination__left,.bx--unstable-pagination__right{
  display:flex;
  height:100%;
  align-items:center
}

.bx--unstable-pagination__left{
  padding:0 1rem 0 0
}

.bx--unstable-pagination__left>.bx--form-item,.bx--unstable-pagination__right>.bx--form-item{
  height:100%
}

.bx--unstable-pagination__left .bx--unstable-pagination__text{
  margin-right:.0625rem
}

.bx--unstable-pagination__right .bx--unstable-pagination__text{
  margin-right:1rem;
  margin-left:.0625rem
}

.bx--unstable-pagination__button{
  display:flex;
  height:100%;
  align-items:center;
  justify-content:center;
  padding:0 .875rem;
  border:none;
  border-left:1px solid #e0e0e0;
  margin:0;
  background:none;
  color:#161616;
  cursor:pointer;
  fill:#161616;
  transition:outline 110ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--unstable-pagination__button .bx--btn__icon{
  width:initial;
  height:initial
}

.bx--unstable-pagination__button.bx--btn--icon-only.bx--tooltip__trigger:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--unstable-pagination__button.bx--btn--icon-only.bx--tooltip__trigger:focus{
    outline-style:dotted
  }
}

.bx--unstable-pagination__button:hover{
  background:#e5e5e5;
  color:#161616
}

.bx--unstable-pagination__button--no-index{
  cursor:not-allowed;
  fill:#c6c6c6
}

.bx--unstable-pagination__button.bx--btn:disabled{
  border-color:#e0e0e0;
  background:transparent
}

.bx--unstable-pagination__button:disabled:hover,.bx--unstable-pagination__button--no-index:hover{
  background:transparent;
  cursor:not-allowed;
  fill:#c6c6c6
}

.bx--unstable-pagination__page-selector,.bx--unstable-pagination__page-sizer{
  height:100%;
  align-items:center
}

.bx--unstable-pagination__page-selector .bx--select-input--inline__wrapper,.bx--unstable-pagination__page-sizer .bx--select-input--inline__wrapper{
  display:flex;
  height:100%
}

.bx--unstable-pagination__page-selector .bx--select-input,.bx--unstable-pagination__page-sizer .bx--select-input{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  width:auto;
  min-width:auto;
  height:100%;
  padding:0 2.5rem 0 1rem;
  margin-right:-0.65rem
}

@media(min-width: 42rem){
  .bx--unstable-pagination__page-selector .bx--select-input,.bx--unstable-pagination__page-sizer .bx--select-input{
    padding-right:2.25rem;
    margin-right:0
  }
}

.bx--unstable-pagination__page-selector .bx--select-input:hover,.bx--unstable-pagination__page-sizer .bx--select-input:hover{
  background:#e5e5e5
}

.bx--unstable-pagination__page-selector .bx--select__arrow,.bx--unstable-pagination__page-sizer .bx--select__arrow{
  top:50%;
  transform:translateY(-50%)
}

@media(min-width: 42rem){
  .bx--unstable-pagination__page-selector .bx--select__arrow,.bx--unstable-pagination__page-sizer .bx--select__arrow{
    right:1rem
  }
}

.bx--unstable-pagination__page-selector{
  border-left:1px solid #e0e0e0
}

.bx--unstable-pagination__page-sizer{
  border-right:1px solid #e0e0e0
}

.bx--header{
  position:fixed;
  z-index:8000;
  top:0;
  right:0;
  left:0;
  display:flex;
  height:3rem;
  align-items:center;
  border-bottom:1px solid #393939;
  background-color:#161616
}

.bx--header__action{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  width:3rem;
  height:3rem;
  border:.0625rem solid transparent;
  transition:background-color 110ms,border-color 110ms
}

.bx--header__action::-moz-focus-inner{
  border:0
}

.bx--header__action>svg.bx--navigation-menu-panel-collapse-icon,.bx--header__action--active>svg.bx--navigation-menu-panel-expand-icon{
  display:none
}

.bx--header__action--active>svg.bx--navigation-menu-panel-collapse-icon{
  display:inline
}

.bx--header__action:hover{
  background-color:#353535
}

.bx--header__action--active{
  border-right:1px solid #393939;
  border-bottom:1px solid #161616;
  border-left:1px solid #393939
}

.bx--header__action:focus{
  border-color:#fff;
  outline:none
}

.bx--header__action:active{
  background-color:#393939
}

.bx--header__action.bx--btn--icon-only.bx--tooltip__trigger{
  justify-content:center
}

.bx--header__action>svg{
  fill:#fff
}

.bx--header__menu-trigger>svg{
  fill:#f4f4f4
}

.bx--header__menu-trigger:hover{
  fill:#2c2c2c
}

.bx--header__menu-toggle{
  display:flex;
  align-items:center;
  justify-content:center
}

@media(min-width: 66rem){
  .bx--header__menu-toggle__hidden{
    display:none
  }
}

a.bx--header__name{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:flex;
  height:100%;
  align-items:center;
  padding:0 2rem 0 1rem;
  border:.125rem solid transparent;
  font-weight:600;
  letter-spacing:.1px;
  line-height:1.25rem;
  outline:none;
  text-decoration:none;
  transition:border-color 110ms;
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none
}

a.bx--header__name:focus{
  border-color:#fff
}

.bx--header__name--prefix{
  font-weight:400
}

a.bx--header__name,a.bx--header__name:hover{
  color:#f4f4f4
}

.bx--header__menu-toggle:not(.bx--header__menu-toggle__hidden)~.bx--header__name{
  padding-left:.5rem
}

.bx--header__nav{
  position:relative;
  display:none;
  height:100%;
  padding-left:1rem
}

@media(min-width: 66rem){
  .bx--header__nav{
    display:block
  }
}

.bx--header__nav::before{
  position:absolute;
  top:50%;
  left:0;
  display:block;
  width:.0625rem;
  height:1.5rem;
  background-color:#393939;
  content:"";
  transform:translateY(-50%)
}

.bx--header__menu-bar{
  display:flex;
  height:100%;
  padding:0;
  margin:0;
  list-style:none
}

a.bx--header__menu-item{
  position:relative;
  display:flex;
  height:100%;
  align-items:center;
  padding:0 1rem;
  border:2px solid transparent;
  color:#c6c6c6;
  font-size:.875rem;
  font-weight:400;
  letter-spacing:0;
  line-height:1.125rem;
  text-decoration:none;
  transition:background-color 110ms,border-color 110ms,color 110ms;
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none
}

a.bx--header__menu-item:hover{
  background-color:#2c2c2c;
  color:#f4f4f4
}

.bx--header__action:active,a.bx--header__menu-item:active{
  background-color:#393939;
  color:#f4f4f4
}

a.bx--header__menu-item:focus{
  border-color:#fff;
  color:#f4f4f4;
  outline:none
}

a.bx--header__menu-item:hover>svg,a.bx--header__menu-item:active>svg,a.bx--header__menu-item:focus>svg{
  fill:#f4f4f4
}

a.bx--header__menu-item[aria-current=page]::after,.bx--header__menu-item--current::after{
  position:absolute;
  top:0;
  right:0;
  bottom:-2px;
  left:0;
  width:100%;
  border-bottom:3px solid #4589ff;
  content:""
}

a.bx--header__menu-item[aria-current=page]:focus::after,.bx--header__menu-item--current:focus::after{
  border:0
}

a.bx--header__menu-item[aria-current=page]:focus,a.bx--header__menu-item.bx--header__menu-item--current:focus{
  border:2px solid #fff
}

.bx--header__submenu{
  position:relative
}

.bx--header__submenu--current::after{
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
  width:100%;
  border-bottom:3px solid #0f62fe;
  content:""
}

.bx--header__submenu--current:focus{
  border:2px solid #0f62fe
}

.bx--header__submenu--current:focus::after{
  border:0
}

.bx--header__menu-title[aria-haspopup=true]{
  position:relative
}

.bx--header__menu-title[aria-expanded=true]{
  z-index:8001;
  background-color:#262626;
  color:#fff
}

.bx--header__menu-title[aria-expanded=true]>.bx--header__menu-arrow{
  transform:rotate(180deg)
}

.bx--header__menu{
  display:none;
  padding:0;
  margin:0;
  list-style:none
}

.bx--header__menu-title[aria-expanded=true]+.bx--header__menu{
  position:absolute;
  z-index:8000;
  bottom:0;
  left:0;
  display:flex;
  width:12.5rem;
  flex-direction:column;
  background-color:#262626;
  box-shadow:0 4px 8px 0 rgba(0,0,0,.5);
  transform:translateY(100%)
}

.bx--header__menu-title[aria-expanded=true]+.bx--header__menu .bx--header__menu-item:hover{
  background-color:#353535
}

.bx--header__menu-title[aria-expanded=true]+.bx--header__menu .bx--header__menu-item:active{
  background-color:#393939
}

.bx--header__menu .bx--header__menu-item{
  height:3rem
}

.bx--header__menu .bx--header__menu-item:hover{
  background-color:#262626;
  color:#f4f4f4
}

.bx--header__menu-arrow{
  margin-left:.5rem;
  fill:#c6c6c6;
  transition:transform 110ms,fill 110ms
}

.bx--header__global{
  display:flex;
  height:100%;
  flex:1 1 0%;
  justify-content:flex-end
}

.bx--skip-to-content{
  position:absolute;
  overflow:hidden;
  width:1px;
  height:1px;
  padding:0;
  border:0;
  margin:-1px;
  clip:rect(0, 0, 0, 0);
  visibility:inherit;
  white-space:nowrap
}

.bx--skip-to-content:focus{
  z-index:9999;
  top:0;
  left:0;
  display:flex;
  width:auto;
  height:3rem;
  align-items:center;
  padding:0 1rem;
  border:4px solid #0f62fe;
  background-color:#161616;
  clip:auto;
  color:#f4f4f4;
  outline:none
}

.bx--header-panel{
  transition-timing-function:cubic-bezier(0.2, 0, 1, 0.9);
  position:fixed;
  z-index:8000;
  top:3rem;
  right:0;
  bottom:0;
  overflow:hidden;
  width:0;
  border:none;
  background-color:#161616;
  color:#c6c6c6;
  transition:width .11s;
  will-change:width
}

.bx--header-panel--expanded{
  width:16rem;
  border-right:1px solid #393939;
  border-left:1px solid #393939
}

.bx--panel--overlay{
  position:fixed;
  z-index:1000;
  top:3rem;
  right:0;
  bottom:0;
  width:16rem;
  height:100%;
  padding:1rem 0;
  background-color:#161616;
  overflow-x:hidden;
  overflow-y:auto;
  transform:translate3d(100%, 0, 0);
  transition:transform .11s cubic-bezier(0.2, 0, 0.38, 0.9);
  will-change:transform
}

.bx--panel--expanded{
  box-shadow:0 8px 16px 0 rgba(0,0,0,.25);
  transform:translate3d(0, 0, 0)
}

.bx--product-switcher__search{
  padding:0 1rem;
  margin-bottom:1.5rem
}

.bx--search--shell input{
  background-color:#e0e0e0
}

.bx--product-switcher__subheader,.bx--product-switcher__all-btn{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  padding:.5rem;
  color:#c6c6c6
}

.bx--product-switcher__subheader{
  padding-left:3.5rem
}

.bx--product-switcher__all-btn{
  padding-left:3.5rem
}

.bx--product-switcher__all-btn,.bx--product-switcher__back-btn{
  display:inline-block;
  width:100%;
  border:none;
  background:transparent;
  color:#0f62fe;
  cursor:pointer;
  text-align:left
}

.bx--product-switcher__all-btn:hover,.bx--product-switcher__back-btn:hover{
  text-decoration:underline
}

.bx--product-switcher__all-btn:focus,.bx--product-switcher__back-btn:focus{
  box-shadow:inset 0 0 0 3px #0f62fe;
  outline:none
}

.bx--product-switcher__back-btn{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  display:flex;
  align-items:center;
  padding:.5rem 1rem
}

.bx--product-switcher__back-arrow{
  margin-right:1rem;
  fill:#0f62fe
}

.bx--product-list__item{
  display:flex;
  align-items:center;
  justify-content:space-between;
  cursor:pointer
}

.bx--product-list__item:hover{
  background:#e0e0e0
}

.bx--product-link{
  display:flex;
  width:100%;
  flex-direction:row;
  align-items:center;
  padding:.5rem 1rem;
  text-decoration:none
}

.bx--product-link:focus{
  box-shadow:inset 0 0 0 3px #0f62fe;
  outline:none
}

.bx--product-switcher__icon{
  margin-right:1rem
}

.bx--product-link__name{
  font-size:.875rem;
  font-weight:400;
  line-height:1.28572;
  letter-spacing:.16px;
  margin-left:.25rem;
  color:#c6c6c6;
  font-weight:400
}

.bx--product-switcher__product-list .bx--overflow-menu{
  display:none;
  width:2.5rem;
  align-items:center;
  justify-content:center
}

.bx--product-switcher__product-list .bx--overflow-menu.bx--overflow-menu--open{
  display:flex
}

.bx--product-switcher__product-list .bx--overflow-menu>svg{
  fill:#c6c6c6
}

.bx--product-switcher__product-list .bx--overflow-menu:hover{
  background:#c6c6c6
}

.bx--product-switcher__product-list .bx--overflow-menu:hover>svg{
  fill:#c6c6c6
}

.bx--product-switcher__product-list .bx--overflow-menu:focus{
  display:flex;
  box-shadow:inset 0 0 0 3px #0f62fe;
  outline:none
}

.bx--product-switcher__product-list .bx--overflow-menu-options__option:hover{
  background:#fff
}

.bx--product-list__item:hover .bx--overflow-menu{
  display:flex
}

.bx--switcher{
  display:flex;
  flex-direction:column;
  align-items:center;
  justify-content:center;
  color:#c6c6c6
}

.bx--switcher__item{
  width:100%;
  height:2rem
}

.bx--switcher__item:nth-child(1){
  margin-top:1rem
}

.bx--switcher__item--divider{
  display:block;
  width:14rem;
  height:1px;
  border:none;
  margin:.5rem 1rem;
  background:#393939
}

.bx--switcher__item-link{
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  display:block;
  height:2rem;
  padding:.375rem 1rem;
  color:#c6c6c6;
  text-decoration:none
}

.bx--switcher__item-link:hover:not(.bx--switcher__item-link--selected){
  background:#2c2c2c;
  color:#f4f4f4;
  cursor:pointer
}

.bx--switcher__item-link:focus{
  outline:2px solid #fff;
  outline-offset:-2px
}

.bx--switcher__item-link:active{
  background:#393939;
  color:#f4f4f4
}

.bx--switcher__item-link--selected{
  background:#262626;
  color:#f4f4f4
}

.bx--side-nav{
  position:fixed;
  z-index:8000;
  top:0;
  bottom:0;
  left:0;
  overflow:hidden;
  width:3rem;
  max-width:16rem;
  background-color:#fff;
  color:#525252;
  transition:width .11s cubic-bezier(0.2, 0, 1, 0.9);
  will-change:width
}

.bx--side-nav--ux{
  top:3rem;
  width:16rem
}

@media(max-width: 65.98rem){
  .bx--side-nav--ux{
    width:0
  }
}

.bx--side-nav--rail{
  width:3rem
}

.bx--side-nav--hidden{
  width:0
}

.bx--side-nav.bx--side-nav--rail:not(.bx--side-nav--fixed):hover,.bx--side-nav--expanded{
  width:16rem
}

.bx--side-nav__overlay{
  position:fixed;
  top:3rem;
  left:0;
  width:0;
  height:0;
  background-color:transparent;
  opacity:0;
  transition:opacity 240ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 240ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

@media(max-width: 65.98rem){
  .bx--side-nav__overlay-active{
    width:100vw;
    height:100vh;
    background-color:rgba(22,22,22,.5);
    opacity:1;
    transition:opacity 240ms cubic-bezier(0.2, 0, 0.38, 0.9),background-color 240ms cubic-bezier(0.2, 0, 0.38, 0.9)
  }
}

.bx--header~.bx--side-nav{
  top:3rem;
  height:calc(100% - 48px)
}

.bx--side-nav--fixed{
  width:16rem
}

.bx--side-nav--collapsed{
  width:16rem;
  transform:translateX(-16rem)
}

.bx--side-nav__navigation{
  display:flex;
  height:100%;
  flex-direction:column
}

.bx--side-nav__header{
  display:flex;
  width:100%;
  max-width:100%;
  height:3rem;
  border-bottom:1px solid #393939
}

.bx--side-nav:hover .bx--side-nav__header,.bx--side-nav--fixed .bx--side-nav__header,.bx--side-nav--expanded .bx--side-nav__header{
  height:auto
}

.bx--side-nav--ux .bx--side-nav__header{
  height:auto
}

.bx--side-nav__details{
  display:flex;
  min-width:0;
  flex:1;
  flex-direction:column;
  padding-right:1rem;
  opacity:0;
  visibility:hidden
}

.bx--side-nav:hover .bx--side-nav__details,.bx--side-nav--fixed .bx--side-nav__details,.bx--side-nav--expanded .bx--side-nav__details{
  visibility:inherit;
  opacity:1
}

.bx--side-nav--ux .bx--side-nav__details{
  opacity:1;
  visibility:inherit
}

.bx--side-nav__title{
  overflow:hidden;
  text-overflow:ellipsis;
  white-space:nowrap;
  margin-top:1rem;
  font-size:.875rem;
  font-weight:600;
  letter-spacing:.1px;
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none
}

.bx--side-nav__title,.bx--side-nav__select{
  padding-left:.5rem
}

.bx--side-nav__switcher{
  position:relative;
  display:flex;
  align-items:center;
  justify-content:space-between
}

.bx--side-nav__switcher-chevron{
  position:absolute;
  top:0;
  right:.5rem;
  bottom:0;
  display:flex;
  align-items:center;
  fill:#525252
}

.bx--side-nav__select{
  outline:2px solid transparent;
  outline-offset:-2px;
  min-width:0;
  height:2rem;
  flex:1 1 0%;
  padding-right:2rem;
  border:none;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background-color:#161616;
  border-radius:0;
  color:#f4f4f4;
  cursor:pointer;
  font-size:.75rem;
  transition:outline 110ms
}

.bx--side-nav__select:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--side-nav__select:focus{
    outline-style:dotted
  }
}

.bx--side-nav__footer{
  width:100%;
  flex:0 0 3rem;
  background-color:#fff
}

.bx--side-nav__toggle{
  outline:2px solid transparent;
  outline-offset:-2px;
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  height:100%;
  padding-left:1rem;
  text-align:left;
  transition:outline 110ms
}

.bx--side-nav__toggle::-moz-focus-inner{
  border:0
}

.bx--side-nav__toggle:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--side-nav__toggle:focus{
    outline-style:dotted
  }
}

.bx--side-nav__items{
  overflow:hidden;
  flex:1 1 0%;
  padding:1rem 0 0
}

.bx--side-nav:hover .bx--side-nav__items,.bx--side-nav--fixed .bx--side-nav__items,.bx--side-nav--expanded .bx--side-nav__items{
  overflow-y:auto
}

.bx--side-nav--ux .bx--side-nav__items{
  overflow-y:auto
}

.bx--side-nav__item{
  overflow:hidden;
  width:auto;
  height:auto
}

.bx--side-nav--ux .bx--side-nav__item{
  width:auto;
  height:auto
}

.bx--side-nav__item:not(.bx--side-nav__item--active):hover .bx--side-nav__item:not(.bx--side-nav__item--active)>.bx--side-nav__submenu:hover,.bx--side-nav__item:not(.bx--side-nav__item--active)>.bx--side-nav__link:hover,.bx--side-nav__menu a.bx--side-nav__link:not(.bx--side-nav__link--current):not([aria-current=page]):hover,.bx--side-nav a.bx--header__menu-item:hover,.bx--side-nav .bx--header__menu-title[aria-expanded=true]:hover{
  background-color:#e5e5e5;
  color:#161616
}

.bx--side-nav__item:not(.bx--side-nav__item--active)>.bx--side-nav__link:hover>span,.bx--side-nav__item:not(.bx--side-nav__item--active) .bx--side-nav__menu-item>.bx--side-nav__link:hover>span{
  color:#161616
}

.bx--side-nav__item--large{
  height:3rem
}

.bx--side-nav__divider{
  height:1px;
  margin:.5rem 1rem;
  background-color:#e0e0e0
}

.bx--side-nav__submenu{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  outline:2px solid transparent;
  outline-offset:-2px;
  display:flex;
  height:2rem;
  align-items:center;
  padding:0 1rem;
  color:#525252;
  transition:color 110ms,background-color 110ms,outline 110ms;
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none
}

.bx--side-nav__submenu::-moz-focus-inner{
  border:0
}

.bx--side-nav__submenu:hover{
  background-color:#e5e5e5;
  color:#161616
}

.bx--side-nav__submenu:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--side-nav__submenu:focus{
    outline-style:dotted
  }
}

.bx--side-nav__submenu-title{
  overflow:hidden;
  text-overflow:ellipsis;
  white-space:nowrap;
  text-align:left
}

.bx--side-nav__icon.bx--side-nav__submenu-chevron{
  display:flex;
  flex:1;
  justify-content:flex-end
}

.bx--side-nav__submenu-chevron>svg{
  width:1rem;
  height:1rem;
  transition:transform 110ms
}

.bx--side-nav__submenu[aria-expanded=true] .bx--side-nav__submenu-chevron>svg{
  transform:rotate(180deg)
}

.bx--side-nav__item--large .bx--side-nav__submenu{
  height:3rem
}

.bx--side-nav__item--active .bx--side-nav__submenu:hover{
  background-color:#e5e5e5;
  color:#161616
}

.bx--side-nav__item--active .bx--side-nav__submenu[aria-expanded=false]{
  position:relative;
  background-color:#e5e5e5;
  color:#161616
}

.bx--side-nav__item--active .bx--side-nav__submenu[aria-expanded=false]::before{
  position:absolute;
  top:0;
  bottom:0;
  left:0;
  width:4px;
  background-color:#0f62fe;
  content:""
}

.bx--side-nav__item--active .bx--side-nav__submenu-title{
  color:#161616;
  font-weight:600
}

.bx--side-nav__menu{
  display:block;
  max-height:0;
  visibility:hidden
}

.bx--side-nav__submenu[aria-expanded=true]+.bx--side-nav__menu{
  max-height:93.75rem;
  visibility:inherit
}

.bx--side-nav__menu a.bx--side-nav__link{
  height:2rem;
  min-height:2rem;
  padding-left:2rem;
  font-weight:400
}

.bx--side-nav__item.bx--side-nav__item--icon a.bx--side-nav__link{
  padding-left:4.5rem
}

.bx--side-nav__menu a.bx--side-nav__link--current,.bx--side-nav__menu a.bx--side-nav__link[aria-current=page],a.bx--side-nav__link--current{
  background-color:#e0e0e0
}

.bx--side-nav__menu a.bx--side-nav__link--current>span,.bx--side-nav__menu a.bx--side-nav__link[aria-current=page]>span,a.bx--side-nav__link--current>span{
  color:#161616;
  font-weight:600
}

a.bx--side-nav__link,.bx--side-nav a.bx--header__menu-item,.bx--side-nav .bx--header__menu-title[aria-expanded=true]+.bx--header__menu{
  outline:2px solid transparent;
  outline-offset:-2px;
  font-size:.875rem;
  font-weight:600;
  line-height:1.28572;
  letter-spacing:.16px;
  position:relative;
  display:flex;
  min-height:2rem;
  align-items:center;
  padding:0 1rem;
  text-decoration:none;
  transition:color 110ms,background-color 110ms,outline 110ms
}

.bx--side-nav__item--large a.bx--side-nav__link{
  height:3rem
}

a.bx--side-nav__link>.bx--side-nav__link-text,.bx--side-nav a.bx--header__menu-item .bx--text-truncate-end{
  overflow:hidden;
  text-overflow:ellipsis;
  white-space:nowrap;
  color:#525252;
  font-size:.875rem;
  letter-spacing:.1px;
  line-height:1.25rem;
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select:none;
  user-select:none
}

a.bx--side-nav__link:focus,.bx--side-nav a.bx--header__menu-item:focus{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  a.bx--side-nav__link:focus,.bx--side-nav a.bx--header__menu-item:focus{
    outline-style:dotted
  }
}

a.bx--side-nav__link[aria-current=page],a.bx--side-nav__link--current{
  background-color:#e5e5e5;
  font-weight:600
}

a.bx--side-nav__link[aria-current=page] .bx--side-nav__link-text,a.bx--side-nav__link--current .bx--side-nav__link-text{
  color:#161616
}

a.bx--side-nav__link[aria-current=page]::before,a.bx--side-nav__link--current::before{
  position:absolute;
  top:0;
  bottom:0;
  left:0;
  width:4px;
  background-color:#0f62fe;
  content:""
}

.bx--side-nav__icon{
  display:flex;
  flex:0 0 1rem;
  align-items:center;
  justify-content:center
}

.bx--side-nav__icon:not(.bx--side-nav__submenu-chevron){
  margin-right:1.5rem
}

.bx--side-nav__icon>svg{
  width:1rem;
  height:1rem;
  fill:#525252
}

.bx--side-nav__icon>svg.bx--side-nav-collapse-icon{
  display:none
}

.bx--side-nav--expanded .bx--side-nav__icon>svg.bx--side-nav-expand-icon{
  display:none
}

.bx--side-nav--expanded .bx--side-nav__icon>svg.bx--side-nav-collapse-icon{
  display:block
}

.bx--side-nav--fixed a.bx--side-nav__link,.bx--side-nav--fixed .bx--side-nav__submenu{
  padding-left:1rem
}

.bx--side-nav--fixed .bx--side-nav__item:not(.bx--side-nav__item--icon) .bx--side-nav__menu a.bx--side-nav__link{
  padding-left:2rem
}

@media(max-width: 65.98rem){
  .bx--side-nav .bx--header__nav{
    display:block
  }
}

.bx--side-nav__header-navigation{
  display:none
}

@media(max-width: 65.98rem){
  .bx--side-nav__header-navigation{
    position:relative;
    display:block;
    margin-bottom:2rem
  }
}

.bx--side-nav__header-divider::after{
  position:absolute;
  bottom:-1rem;
  left:1rem;
  width:calc(100% - 32px);
  height:.0625rem;
  background:#e0e0e0;
  content:""
}

.bx--side-nav a.bx--header__menu-item{
  justify-content:space-between;
  color:#525252;
  white-space:nowrap
}

.bx--side-nav a.bx--header__menu-item[aria-expanded=true]{
  background-color:transparent
}

.bx--side-nav .bx--header__menu-title[aria-expanded=true]+.bx--header__menu{
  bottom:inherit;
  width:100%;
  padding:0;
  background-color:transparent;
  box-shadow:none;
  transform:none
}

.bx--side-nav .bx--header__menu-title[aria-expanded=true]+.bx--header__menu li{
  width:100%
}

.bx--side-nav .bx--header__menu-title[aria-expanded=true]+.bx--header__menu a.bx--header__menu-item{
  padding-left:4.25rem;
  font-weight:400
}

.bx--side-nav .bx--header__menu-title[aria-expanded=true]+.bx--header__menu a.bx--header__menu-item:hover{
  background-color:#e5e5e5;
  color:#161616
}

.bx--side-nav .bx--header__menu a.bx--header__menu-item{
  height:inherit
}

.bx--side-nav a.bx--header__menu-item:hover .bx--header__menu-arrow,.bx--side-nav a.bx--header__menu-item:focus .bx--header__menu-arrow,.bx--side-nav .bx--header__menu-arrow{
  fill:#525252
}

@media screen and (-ms-high-contrast: active),(forced-colors: active),(prefers-contrast){
  .bx--side-nav__icon>svg,.bx--side-nav a.bx--header__menu-item:hover .bx--header__menu-arrow,.bx--side-nav a.bx--header__menu-item:focus .bx--header__menu-arrow,.bx--side-nav .bx--header__menu-arrow{
    fill:ButtonText
  }
}

.bx--navigation{
  position:fixed;
  z-index:9100;
  top:3rem;
  bottom:0;
  left:0;
  width:16rem;
  background-color:#262626;
  box-shadow:0 .5rem 1rem 0 rgba(0,0,0,.25);
  color:#f4f4f4
}

.bx--navigation--right{
  right:0;
  left:auto
}

.bx--navigation svg{
  fill:#f4f4f4
}

.bx--navigation-section:not(:last-child)::after{
  display:block;
  height:1px;
  margin:0 1rem;
  background-color:#393939;
  content:""
}

.bx--navigation-item{
  position:relative;
  display:flex;
  align-items:center
}

.bx--navigation-item--active>a.bx--navigation-link{
  color:#fff;
  font-weight:600
}

.bx--navigation-item--active::after{
  position:absolute;
  top:0;
  bottom:0;
  left:0;
  display:block;
  width:4px;
  background-color:#0f62fe;
  content:""
}

a.bx--navigation-link{
  display:flex;
  width:100%;
  min-height:2.5rem;
  align-items:center;
  padding-left:1rem;
  color:#f4f4f4;
  font-size:.875rem;
  font-weight:400;
  text-decoration:none
}

a.bx--navigation-link:hover{
  background-color:#333;
  color:#fff
}

a.bx--navigation-link:focus{
  outline:.1875rem solid #0f62fe;
  outline-offset:-0.1875rem
}

.bx--navigation-item--icon>a.bx--navigation-link{
  padding-left:0
}

.bx--navigation__category{
  width:100%
}

.bx--navigation__category-toggle{
  display:inline-block;
  padding:0;
  border:0;
  -webkit-appearance:none;
  -moz-appearance:none;
  appearance:none;
  background:none;
  cursor:pointer;
  width:100%;
  display:flex;
  align-items:center
}

.bx--navigation__category-toggle::-moz-focus-inner{
  border:0
}

.bx--navigation__category-toggle:hover{
  background-color:#333
}

.bx--navigation__category-toggle:focus{
  outline:.1875rem solid #0f62fe;
  outline-offset:-0.1875rem
}

.bx--navigation__category-title{
  display:flex;
  width:100%;
  min-height:2.5rem;
  align-items:center;
  justify-content:space-between;
  padding-right:1rem;
  padding-left:1rem;
  color:#f4f4f4;
  font-size:.875rem;
  font-weight:400
}

.bx--navigation-item--icon .bx--navigation__category-title{
  padding-left:0
}

.bx--navigation__category-items{
  display:none;
  visibility:hidden
}

.bx--navigation__category-item>a.bx--navigation-link{
  display:flex;
  min-height:2rem;
  align-items:center;
  padding-left:2rem
}

.bx--navigation__category-item{
  position:relative
}

.bx--navigation-item--icon .bx--navigation__category-item>a.bx--navigation-link{
  padding-left:3.5rem
}

.bx--navigation__category-item--active::after{
  position:absolute;
  top:0;
  bottom:0;
  left:0;
  display:block;
  width:4px;
  background-color:#0f62fe;
  content:""
}

.bx--navigation__category-item--active>a.bx--navigation-link{
  color:#fff;
  font-weight:600
}

.bx--navigation__category--expanded .bx--navigation__category-title{
  font-weight:600
}

.bx--navigation__category--expanded .bx--navigation__category-title>svg{
  transform:rotate(180deg)
}

.bx--navigation__category--expanded .bx--navigation__category-items{
  display:block;
  visibility:inherit
}

.bx--navigation-icon{
  display:flex;
  width:3rem;
  min-width:3rem;
  height:2.5rem;
  align-items:center;
  justify-content:center;
  margin-right:.5rem
}

.bx--content{
  padding:2rem;
  background:#f4f4f4;
  will-change:margin-left
}

.bx--header~.bx--content{
  margin-top:3rem
}

.bx--side-nav~.bx--content{
  margin-left:3rem
}

.bx--side-nav.bx--side-nav--expanded~.bx--content{
  margin-left:16rem
}

.bx--tree{
  overflow:hidden
}

.bx--tree .bx--tree-node{
  padding-left:1rem;
  background-color:#fff;
  color:#525252
}

.bx--tree .bx--tree-node:focus{
  outline:none
}

.bx--tree .bx--tree-node:focus>.bx--tree-node__label{
  outline:2px solid #0f62fe;
  outline-offset:-2px
}

@media screen and (prefers-contrast){
  .bx--tree .bx--tree-node:focus>.bx--tree-node__label{
    outline-style:dotted
  }
}

.bx--tree .bx--tree-node--disabled:focus>.bx--tree-node__label{
  outline:none
}

.bx--tree .bx--tree-node--disabled,.bx--tree .bx--tree-node--disabled .bx--tree-node__label:hover,.bx--tree .bx--tree-node--disabled .bx--tree-node__label:hover .bx--tree-node__label__details{
  background-color:#fff;
  color:#c6c6c6
}

.bx--tree .bx--tree-node--disabled .bx--tree-parent-node__toggle-icon,.bx--tree .bx--tree-node--disabled .bx--tree-node__icon,.bx--tree .bx--tree-node--disabled .bx--tree-node__label:hover .bx--tree-parent-node__toggle-icon,.bx--tree .bx--tree-node--disabled .bx--tree-node__label:hover .bx--tree-node__icon{
  fill:#c6c6c6
}

.bx--tree .bx--tree-node--disabled,.bx--tree .bx--tree-node--disabled .bx--tree-parent-node__toggle-icon:hover{
  cursor:not-allowed
}

.bx--tree .bx--tree-node__label{
  display:flex;
  min-height:2rem;
  flex:1;
  align-items:center
}

.bx--tree .bx--tree-node__label:hover{
  background-color:#e5e5e5;
  color:#161616
}

.bx--tree .bx--tree-node__label:hover .bx--tree-node__label__details{
  color:#161616
}

.bx--tree .bx--tree-node__label:hover .bx--tree-parent-node__toggle-icon,.bx--tree .bx--tree-node__label:hover .bx--tree-node__icon{
  fill:#161616
}

.bx--tree .bx--tree-leaf-node{
  display:flex;
  padding-left:2.5rem
}

.bx--tree .bx--tree-leaf-node.bx--tree-node--with-icon{
  padding-left:2rem
}

.bx--tree .bx--tree-node__label__details{
  display:flex;
  align-items:center
}

.bx--tree .bx--tree-node--with-icon .bx--tree-parent-node__toggle{
  margin-right:0
}

.bx--tree .bx--tree-parent-node__toggle{
  padding:0;
  border:0;
  margin-right:.5rem
}

.bx--tree .bx--tree-parent-node__toggle:hover{
  cursor:pointer
}

.bx--tree .bx--tree-parent-node__toggle:focus{
  outline:none
}

.bx--tree .bx--tree-parent-node__toggle-icon{
  fill:#525252;
  transform:rotate(-90deg);
  transition:all 110ms cubic-bezier(0.2, 0, 0.38, 0.9)
}

.bx--tree .bx--tree-parent-node__toggle-icon--expanded{
  transform:rotate(0)
}

.bx--tree .bx--tree-node__icon{
  flex-shrink:0;
  margin-right:.5rem;
  fill:#525252
}

.bx--tree .bx--tree-node--selected>.bx--tree-node__label{
  background-color:#e0e0e0;
  color:#161616
}

.bx--tree .bx--tree-node--selected>.bx--tree-node__label:hover{
  background-color:#cacaca
}

.bx--tree .bx--tree-node--selected>.bx--tree-node__label .bx--tree-parent-node__toggle-icon,.bx--tree .bx--tree-node--selected>.bx--tree-node__label .bx--tree-node__icon{
  fill:#161616
}

.bx--tree .bx--tree-node--active>.bx--tree-node__label{
  position:relative
}

.bx--tree .bx--tree-node--active>.bx--tree-node__label::before{
  position:absolute;
  top:0;
  left:0;
  width:.25rem;
  height:100%;
  background-color:#0f62fe;
  content:""
}

.bx--tree--compact .bx--tree-node__label{
  min-height:1.5rem
}

/*purgecss end ignore*/`;
const ChevronRight16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "ChevronRight16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M11 8L6 13 5.3 12.3 9.6 8 5.3 3.7 6 3z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const SkeletonText = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let rows;
  let widthNum;
  let widthPx;
  let $$restProps = compute_rest_props($$props, ["lines", "heading", "paragraph", "width"]);
  let {lines = 3} = $$props;
  let {heading = false} = $$props;
  let {paragraph = false} = $$props;
  let {width = "100%"} = $$props;
  const RANDOM = [0.973, 0.153, 0.567];
  if ($$props.lines === void 0 && $$bindings.lines && lines !== void 0)
    $$bindings.lines(lines);
  if ($$props.heading === void 0 && $$bindings.heading && heading !== void 0)
    $$bindings.heading(heading);
  if ($$props.paragraph === void 0 && $$bindings.paragraph && paragraph !== void 0)
    $$bindings.paragraph(paragraph);
  if ($$props.width === void 0 && $$bindings.width && width !== void 0)
    $$bindings.width(width);
  rows = [];
  widthNum = parseInt(width, 10);
  widthPx = width.includes("px");
  {
    if (paragraph) {
      for (let i = 0; i < lines; i++) {
        const min = widthPx ? widthNum - 75 : 0;
        const max = widthPx ? widthNum : 75;
        const rand = Math.floor(RANDOM[i % 3] * (max - min + 1)) + min + "px";
        rows = [
          ...rows,
          {
            width: widthPx ? rand : `calc(${width} - ${rand})`
          }
        ];
      }
    }
  }
  return `
${paragraph ? `<div${spread([$$restProps])}>${each(rows, ({width: width2}) => `<p style="${"width: " + escape(width2)}"${add_classes([
    "bx--skeleton__text " + (heading ? "bx--skeleton__heading" : "")
  ].join(" ").trim())}></p>`)}</div>` : `<p${spread([
    $$restProps,
    {
      style: "width: " + escape(width) + ";" + escape($$restProps.style)
    }
  ], "bx--skeleton__text " + (heading ? "bx--skeleton__heading" : ""))}></p>`}`;
});
const AccordionSkeleton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["count", "align", "size", "open"]);
  let {count = 4} = $$props;
  let {align = "end"} = $$props;
  let {size = void 0} = $$props;
  let {open = true} = $$props;
  if ($$props.count === void 0 && $$bindings.count && count !== void 0)
    $$bindings.count(count);
  if ($$props.align === void 0 && $$bindings.align && align !== void 0)
    $$bindings.align(align);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  return `
<ul${spread([$$restProps], "bx--skeleton bx--accordion " + (align === "start" ? "bx--accordion--start" : "") + " " + (align === "end" ? "bx--accordion--end" : "") + " " + (size === "sm" ? "bx--accordion--sm" : "") + " " + (size === "xl" ? "bx--accordion--xl" : ""))}>${open ? `<li${add_classes([
    "bx--accordion__item bx--accordion__item--active"
  ].join(" ").trim())}><span${add_classes(["bx--accordion__heading"].join(" ").trim())}>${validate_component(ChevronRight16, "ChevronRight16").$$render($$result, {class: "bx--accordion__arrow"}, {}, {})}
        ${validate_component(SkeletonText, "SkeletonText").$$render($$result, {class: "bx--accordion__title"}, {}, {})}</span>
      <div class="${"bx--accordion__content"}">${validate_component(SkeletonText, "SkeletonText").$$render($$result, {width: "90%"}, {}, {})}
        ${validate_component(SkeletonText, "SkeletonText").$$render($$result, {width: "80%"}, {}, {})}
        ${validate_component(SkeletonText, "SkeletonText").$$render($$result, {width: "95%"}, {}, {})}</div></li>` : ``}
  ${each(Array.from({length: open ? count - 1 : count}, (_, i) => i), (item) => `<li class="${"bx--accordion__item"}"><span class="${"bx--accordion__heading"}">${validate_component(ChevronRight16, "ChevronRight16").$$render($$result, {class: "bx--accordion__arrow"}, {}, {})}
        ${validate_component(SkeletonText, "SkeletonText").$$render($$result, {class: "bx--accordion__title"}, {}, {})}</span>
    </li>`)}</ul>`;
});
const Accordion = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["align", "size", "disabled", "skeleton"]);
  let {align = "end"} = $$props;
  let {size = void 0} = $$props;
  let {disabled = false} = $$props;
  let {skeleton = false} = $$props;
  const disableItems = writable(disabled);
  setContext("Accordion", {disableItems});
  if ($$props.align === void 0 && $$bindings.align && align !== void 0)
    $$bindings.align(align);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.skeleton === void 0 && $$bindings.skeleton && skeleton !== void 0)
    $$bindings.skeleton(skeleton);
  {
    disableItems.set(disabled);
  }
  return `
${skeleton ? `${validate_component(AccordionSkeleton, "AccordionSkeleton").$$render($$result, Object.assign($$restProps, {align}, {size}), {}, {})}` : `<ul${spread([$$restProps], "bx--accordion " + (align === "start" ? "bx--accordion--start" : "") + " " + (align === "end" ? "bx--accordion--end" : "") + " " + (size === "sm" ? "bx--accordion--sm" : "") + " " + (size === "xl" ? "bx--accordion--xl" : ""))}>${slots.default ? slots.default({}) : ``}</ul>`}`;
});
const AccordionItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["title", "open", "disabled", "iconDescription"]);
  let {title = "title"} = $$props;
  let {open = false} = $$props;
  let {disabled = false} = $$props;
  let {iconDescription = "Expand/Collapse"} = $$props;
  let initialDisabled = disabled;
  const ctx = getContext("Accordion");
  const unsubscribe = ctx.disableItems.subscribe((value) => {
    if (!value && initialDisabled)
      return;
    disabled = value;
  });
  onMount(() => {
    return () => {
      unsubscribe();
    };
  });
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  return `
<li${spread([$$restProps], "bx--accordion__item " + (open ? "bx--accordion__item--active" : "") + " " + (disabled ? "bx--accordion__item--disabled" : "") + "  ")}><button type="${"button"}"${add_attribute("title", iconDescription, 0)}${add_attribute("aria-expanded", open, 0)} ${disabled ? "disabled" : ""}${add_classes(["bx--accordion__heading"].join(" ").trim())}>${validate_component(ChevronRight16, "ChevronRight16").$$render($$result, {
    class: "bx--accordion__arrow",
    "aria-label": iconDescription
  }, {}, {})}
    <div${add_classes(["bx--accordion__title"].join(" ").trim())}>${slots.title ? slots.title({}) : `${escape(title)}`}</div></button>
  <div${add_classes(["bx--accordion__content"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</div></li>`;
});
const AspectRatio = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["ratio"]);
  let {ratio = "2x1"} = $$props;
  if ($$props.ratio === void 0 && $$bindings.ratio && ratio !== void 0)
    $$bindings.ratio(ratio);
  return `<div${spread([$$restProps], "bx--aspect-ratio " + (ratio === "2x1" ? "bx--aspect-ratio--2x1" : "") + " " + (ratio === "16x9" ? "bx--aspect-ratio--16x9" : "") + " " + (ratio === "4x3" ? "bx--aspect-ratio--4x3" : "") + " " + (ratio === "1x1" ? "bx--aspect-ratio--1x1" : "") + " " + (ratio === "3x4" ? "bx--aspect-ratio--3x4" : "") + " " + (ratio === "3x2" ? "bx--aspect-ratio--3x2" : "") + " " + (ratio === "9x16" ? "bx--aspect-ratio--9x16" : "") + " " + (ratio === "1x2" ? "bx--aspect-ratio--1x2" : ""))}><div${add_classes(["bx--aspect-ratio--object"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</div></div>`;
});
const BreadcrumbSkeleton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["noTrailingSlash", "count"]);
  let {noTrailingSlash = false} = $$props;
  let {count = 3} = $$props;
  if ($$props.noTrailingSlash === void 0 && $$bindings.noTrailingSlash && noTrailingSlash !== void 0)
    $$bindings.noTrailingSlash(noTrailingSlash);
  if ($$props.count === void 0 && $$bindings.count && count !== void 0)
    $$bindings.count(count);
  return `
<div${spread([$$restProps], "bx--skeleton bx--breadcrumb " + (noTrailingSlash ? "bx--breadcrumb--no-trailing-slash" : ""))}>${each(Array.from({length: count}, (_, i) => i), (item) => `<div${add_classes(["bx--breadcrumb-item"].join(" ").trim())}><span${add_classes(["bx--link"].join(" ").trim())}>\xA0</span>
    </div>`)}</div>`;
});
const Breadcrumb = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["noTrailingSlash", "skeleton"]);
  let {noTrailingSlash = false} = $$props;
  let {skeleton = false} = $$props;
  if ($$props.noTrailingSlash === void 0 && $$bindings.noTrailingSlash && noTrailingSlash !== void 0)
    $$bindings.noTrailingSlash(noTrailingSlash);
  if ($$props.skeleton === void 0 && $$bindings.skeleton && skeleton !== void 0)
    $$bindings.skeleton(skeleton);
  return `
${skeleton ? `${validate_component(BreadcrumbSkeleton, "BreadcrumbSkeleton").$$render($$result, Object.assign({noTrailingSlash}, $$restProps), {}, {})}` : `<nav${spread([{"aria-label": "Breadcrumb"}, $$restProps])}><ol${add_classes([
    "bx--breadcrumb " + (noTrailingSlash ? "bx--breadcrumb--no-trailing-slash" : "")
  ].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</ol></nav>`}`;
});
const Link = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["size", "href", "inline", "icon", "disabled", "visited", "ref"]);
  let $$slots = compute_slots(slots);
  let {size = void 0} = $$props;
  let {href = void 0} = $$props;
  let {inline = false} = $$props;
  let {icon = void 0} = $$props;
  let {disabled = false} = $$props;
  let {visited = false} = $$props;
  let {ref = null} = $$props;
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.inline === void 0 && $$bindings.inline && inline !== void 0)
    $$bindings.inline(inline);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.visited === void 0 && $$bindings.visited && visited !== void 0)
    $$bindings.visited(visited);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `
${disabled ? `<p${spread([$$restProps], "bx--link " + (disabled ? "bx--link--disabled" : "") + " " + (inline ? "bx--link--inline" : "") + " " + (visited ? "bx--link--visited" : ""))}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}
    ${!inline && ($$slots.icon || icon) ? `<div${add_classes(["bx--link__icon"].join(" ").trim())}>${slots.icon ? slots.icon({}) : `
          ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
        `}</div>` : ``}</p>` : `<a${spread([
    {
      rel: escape($$restProps.target === "_blank" ? "noopener noreferrer" : void 0)
    },
    {href: escape(href)},
    $$restProps
  ], "bx--link " + (disabled ? "bx--link--disabled" : "") + " " + (inline ? "bx--link--inline" : "") + " " + (visited ? "bx--link--visited" : "") + " " + (size === "sm" ? "bx--link--sm" : "") + " " + (size === "lg" ? "bx--link--lg" : ""))}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}
    ${!inline && ($$slots.icon || icon) ? `<div${add_classes(["bx--link__icon"].join(" ").trim())}>${slots.icon ? slots.icon({}) : `
          ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
        `}</div>` : ``}</a>`}`;
});
const BreadcrumbItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["href", "isCurrentPage"]);
  let {href = void 0} = $$props;
  let {isCurrentPage = false} = $$props;
  setContext("BreadcrumbItem", {});
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.isCurrentPage === void 0 && $$bindings.isCurrentPage && isCurrentPage !== void 0)
    $$bindings.isCurrentPage(isCurrentPage);
  return `
<li${spread([$$restProps], "bx--breadcrumb-item " + (isCurrentPage && $$restProps["aria-current"] !== "page" ? "bx--breadcrumb-item--current" : ""))}>${href ? `${validate_component(Link, "Link").$$render($$result, {
    href,
    "aria-current": $$restProps["aria-current"]
  }, {}, {
    default: () => `${slots.default ? slots.default({
      props: {
        "aria-current": $$restProps["aria-current"],
        class: "bx--link"
      }
    }) : ``}`
  })}` : `${slots.default ? slots.default({
    props: {
      "aria-current": $$restProps["aria-current"],
      class: "bx--link"
    }
  }) : ``}`}</li>`;
});
const breakpoints = Object.freeze({
  sm: 320,
  md: 672,
  lg: 1056,
  xlg: 1312,
  max: 1584
});
function breakpointObserver() {
  const store4 = writable(void 0);
  onMount(() => {
    const match = {
      sm: window.matchMedia(`(max-width: ${breakpoints.md}px)`),
      md: window.matchMedia(`(min-width: ${breakpoints.md}px) and (max-width: ${breakpoints.lg}px)`),
      lg: window.matchMedia(`(min-width: ${breakpoints.lg}px) and (max-width: ${breakpoints.xlg}px)`),
      xlg: window.matchMedia(`(min-width: ${breakpoints.xlg}px) and (max-width: ${breakpoints.max}px)`),
      max: window.matchMedia(`(min-width: ${breakpoints.max}px)`)
    };
    const matchers = Object.entries(match);
    const sizeByMedia = Object.fromEntries(matchers.map(([size2, queryList]) => [queryList.media, size2]));
    const size = matchers.find(([size2, queryList]) => queryList.matches)[0];
    store4.set(size);
    function handleChange({matches, media}) {
      const size2 = sizeByMedia[media];
      if (matches)
        store4.set(size2);
    }
    matchers.forEach(([size2, queryList]) => queryList.addEventListener("change", handleChange));
    return () => {
      matchers.forEach(([size2, queryList]) => queryList.removeEventListener("change", handleChange));
    };
  });
  return {
    subscribe: store4.subscribe,
    smallerThan: (size) => {
      checkSizeValid(size);
      return derived(store4, ($size) => breakpoints[$size] < breakpoints[size]);
    },
    largerThan: (size) => {
      checkSizeValid(size);
      return derived(store4, ($size) => breakpoints[$size] > breakpoints[size]);
    }
  };
}
function checkSizeValid(size) {
  if (size in breakpoints == false)
    throw new Error(`"${size}" is not a valid breakpoint size.`);
}
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $observer, $$unsubscribe_observer;
  let {size = void 0} = $$props;
  let {sizes = {
    sm: false,
    md: false,
    lg: false,
    xlg: false,
    max: false
  }} = $$props;
  const dispatch = createEventDispatcher();
  const observer = breakpointObserver();
  $$unsubscribe_observer = subscribe(observer, (value) => $observer = value);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.sizes === void 0 && $$bindings.sizes && sizes !== void 0)
    $$bindings.sizes(sizes);
  size = $observer;
  sizes = {
    sm: size == "sm",
    md: size == "md",
    lg: size == "lg",
    xlg: size == "xlg",
    max: size == "max"
  };
  {
    if (size != void 0)
      dispatch("change", {size, breakpointValue: breakpoints[size]});
  }
  $$unsubscribe_observer();
  return `${slots.default ? slots.default({size, sizes}) : ``}`;
});
const ButtonSkeleton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["href", "size", "small"]);
  let {href = void 0} = $$props;
  let {size = "default"} = $$props;
  let {small = false} = $$props;
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.small === void 0 && $$bindings.small && small !== void 0)
    $$bindings.small(small);
  return `
${href ? `<a${spread([
    {href: escape(href)},
    {
      rel: escape($$restProps.target === "_blank" ? "noopener noreferrer" : void 0)
    },
    {role: "button"},
    $$restProps
  ], "bx--skeleton bx--btn " + (size === "field" ? "bx--btn--field" : "") + " " + (size === "small" || small ? "bx--btn--sm" : "") + " " + (size === "lg" ? "bx--btn--lg" : "") + " " + (size === "xl" ? "bx--btn--xl" : ""))}>${escape("")}</a>` : `<div${spread([$$restProps], "bx--skeleton bx--btn " + (size === "field" ? "bx--btn--field" : "") + " " + (size === "small" || small ? "bx--btn--sm" : "") + " " + (size === "lg" ? "bx--btn--lg" : "") + " " + (size === "xl" ? "bx--btn--xl" : ""))}></div>`}`;
});
const Button = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let buttonProps;
  let $$restProps = compute_rest_props($$props, [
    "kind",
    "size",
    "expressive",
    "isSelected",
    "hasIconOnly",
    "icon",
    "iconDescription",
    "tooltipAlignment",
    "tooltipPosition",
    "as",
    "skeleton",
    "disabled",
    "href",
    "tabindex",
    "type",
    "ref"
  ]);
  let $$slots = compute_slots(slots);
  let {kind = "primary"} = $$props;
  let {size = "default"} = $$props;
  let {expressive = false} = $$props;
  let {isSelected = false} = $$props;
  let {hasIconOnly = false} = $$props;
  let {icon = void 0} = $$props;
  let {iconDescription = void 0} = $$props;
  let {tooltipAlignment = "center"} = $$props;
  let {tooltipPosition = "bottom"} = $$props;
  let {as = false} = $$props;
  let {skeleton = false} = $$props;
  let {disabled = false} = $$props;
  let {href = void 0} = $$props;
  let {tabindex = "0"} = $$props;
  let {type = "button"} = $$props;
  let {ref = null} = $$props;
  const ctx = getContext("ComposedModal");
  if ($$props.kind === void 0 && $$bindings.kind && kind !== void 0)
    $$bindings.kind(kind);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.expressive === void 0 && $$bindings.expressive && expressive !== void 0)
    $$bindings.expressive(expressive);
  if ($$props.isSelected === void 0 && $$bindings.isSelected && isSelected !== void 0)
    $$bindings.isSelected(isSelected);
  if ($$props.hasIconOnly === void 0 && $$bindings.hasIconOnly && hasIconOnly !== void 0)
    $$bindings.hasIconOnly(hasIconOnly);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.tooltipAlignment === void 0 && $$bindings.tooltipAlignment && tooltipAlignment !== void 0)
    $$bindings.tooltipAlignment(tooltipAlignment);
  if ($$props.tooltipPosition === void 0 && $$bindings.tooltipPosition && tooltipPosition !== void 0)
    $$bindings.tooltipPosition(tooltipPosition);
  if ($$props.as === void 0 && $$bindings.as && as !== void 0)
    $$bindings.as(as);
  if ($$props.skeleton === void 0 && $$bindings.skeleton && skeleton !== void 0)
    $$bindings.skeleton(skeleton);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  {
    if (ctx && ref) {
      ctx.declareRef(ref);
    }
  }
  hasIconOnly = icon && !$$slots.default;
  buttonProps = {
    type: href && !disabled ? void 0 : type,
    tabindex,
    disabled: disabled === true ? true : void 0,
    href,
    "aria-pressed": hasIconOnly && kind === "ghost" && !href ? isSelected : void 0,
    ...$$restProps,
    class: [
      "bx--btn",
      expressive && "bx--btn--expressive",
      (size === "small" && !expressive || size === "sm" && !expressive || size === "small" && !expressive) && "bx--btn--sm",
      size === "field" && !expressive || size === "md" && !expressive && "bx--btn--md",
      size === "field" && "bx--btn--field",
      size === "small" && "bx--btn--sm",
      size === "lg" && "bx--btn--lg",
      size === "xl" && "bx--btn--xl",
      kind && `bx--btn--${kind}`,
      disabled && "bx--btn--disabled",
      hasIconOnly && "bx--btn--icon-only",
      hasIconOnly && "bx--tooltip__trigger",
      hasIconOnly && "bx--tooltip--a11y",
      hasIconOnly && tooltipPosition && `bx--btn--icon-only--${tooltipPosition}`,
      hasIconOnly && tooltipAlignment && `bx--tooltip--align-${tooltipAlignment}`,
      hasIconOnly && isSelected && kind === "ghost" && "bx--btn--selected",
      $$restProps.class
    ].filter(Boolean).join(" ")
  };
  return `
${skeleton ? `${validate_component(ButtonSkeleton, "ButtonSkeleton").$$render($$result, Object.assign({href}, {size}, $$restProps, {style: hasIconOnly && "width: 3rem;"}), {}, {})}` : `${as ? `${slots.default ? slots.default({props: buttonProps}) : ``}` : `${href && !disabled ? `
  <a${spread([buttonProps])}${add_attribute("this", ref, 1)}>${hasIconOnly ? `<span${add_classes(["bx--assistive-text"].join(" ").trim())}>${escape(iconDescription)}</span>` : ``}
    ${slots.default ? slots.default({}) : ``}${validate_component(icon || missing_component, "svelte:component").$$render($$result, {
    "aria-hidden": "true",
    class: "bx--btn__icon",
    "aria-label": iconDescription
  }, {}, {})}</a>` : `<button${spread([buttonProps])}${add_attribute("this", ref, 1)}>${hasIconOnly ? `<span${add_classes(["bx--assistive-text"].join(" ").trim())}>${escape(iconDescription)}</span>` : ``}
    ${slots.default ? slots.default({}) : ``}${validate_component(icon || missing_component, "svelte:component").$$render($$result, {
    "aria-hidden": "true",
    class: "bx--btn__icon",
    "aria-label": iconDescription
  }, {}, {})}</button>`}`}`}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["stacked"]);
  let {stacked = false} = $$props;
  if ($$props.stacked === void 0 && $$bindings.stacked && stacked !== void 0)
    $$bindings.stacked(stacked);
  return `<div${spread([$$restProps], "bx--btn-set " + (stacked ? "bx--btn-set--stacked" : ""))}>${slots.default ? slots.default({}) : ``}</div>`;
});
const CheckboxSkeleton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<div${spread([$$restProps], "bx--form-item bx--checkbox-wrapper bx--checkbox-label")}><span${add_classes(["bx--checkbox-label-text bx--skeleton"].join(" ").trim())}></span></div>`;
});
const Checkbox = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let useGroup;
  let $$restProps = compute_rest_props($$props, [
    "value",
    "checked",
    "group",
    "indeterminate",
    "skeleton",
    "required",
    "readonly",
    "disabled",
    "labelText",
    "hideLabel",
    "name",
    "title",
    "id",
    "ref"
  ]);
  let {value = ""} = $$props;
  let {checked = false} = $$props;
  let {group = void 0} = $$props;
  let {indeterminate = false} = $$props;
  let {skeleton = false} = $$props;
  let {required = false} = $$props;
  let {readonly = false} = $$props;
  let {disabled = false} = $$props;
  let {labelText = ""} = $$props;
  let {hideLabel = false} = $$props;
  let {name = ""} = $$props;
  let {title = void 0} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  const dispatch = createEventDispatcher();
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.checked === void 0 && $$bindings.checked && checked !== void 0)
    $$bindings.checked(checked);
  if ($$props.group === void 0 && $$bindings.group && group !== void 0)
    $$bindings.group(group);
  if ($$props.indeterminate === void 0 && $$bindings.indeterminate && indeterminate !== void 0)
    $$bindings.indeterminate(indeterminate);
  if ($$props.skeleton === void 0 && $$bindings.skeleton && skeleton !== void 0)
    $$bindings.skeleton(skeleton);
  if ($$props.required === void 0 && $$bindings.required && required !== void 0)
    $$bindings.required(required);
  if ($$props.readonly === void 0 && $$bindings.readonly && readonly !== void 0)
    $$bindings.readonly(readonly);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  useGroup = Array.isArray(group);
  checked = useGroup ? group.includes(value) : checked;
  {
    dispatch("check", checked);
  }
  return `
${skeleton ? `${validate_component(CheckboxSkeleton, "CheckboxSkeleton").$$render($$result, Object.assign($$restProps), {}, {})}` : `<div${spread([$$restProps], "bx--form-item bx--checkbox-wrapper")}><input type="${"checkbox"}"${add_attribute("value", value, 0)} ${checked ? "checked" : ""} ${disabled ? "disabled" : ""}${add_attribute("id", id, 0)}${add_attribute("indeterminate", indeterminate, 0)}${add_attribute("name", name, 0)} ${required ? "required" : ""} ${readonly ? "readonly" : ""}${add_classes(["bx--checkbox"].join(" ").trim())}${add_attribute("this", ref, 1)}>
    <label${add_attribute("for", id, 0)}${add_attribute("title", title, 0)}${add_classes(["bx--checkbox-label"].join(" ").trim())}><span${add_classes([
    "bx--checkbox-label-text " + (hideLabel ? "bx--visually-hidden" : "")
  ].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
          ${escape(labelText)}
        `}</span></label></div>`}`;
});
const InlineCheckbox = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["checked", "indeterminate", "title", "id", "ref"]);
  let {checked = false} = $$props;
  let {indeterminate = false} = $$props;
  let {title = void 0} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  if ($$props.checked === void 0 && $$bindings.checked && checked !== void 0)
    $$bindings.checked(checked);
  if ($$props.indeterminate === void 0 && $$bindings.indeterminate && indeterminate !== void 0)
    $$bindings.indeterminate(indeterminate);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `<input${spread([
    {type: "checkbox"},
    {
      checked: (indeterminate ? false : checked) || null
    },
    {indeterminate: escape(indeterminate)},
    {id: escape(id)},
    $$restProps,
    {"aria-label": escape(void 0)},
    {
      "aria-checked": escape(indeterminate ? "mixed" : checked)
    }
  ], "bx--checkbox")}${add_attribute("this", ref, 1)}>
<label${add_attribute("for", id, 0)}${add_attribute("title", title, 0)}${add_attribute("aria-label", $$props["aria-label"], 0)}${add_classes(["bx--checkbox-label"].join(" ").trim())}></label>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let currentIndex;
  let switches;
  let $$restProps = compute_rest_props($$props, ["selectedIndex", "light", "size"]);
  let {selectedIndex = 0} = $$props;
  let {light = false} = $$props;
  let {size = void 0} = $$props;
  const dispatch = createEventDispatcher();
  const currentId = writable(null);
  setContext("ContentSwitcher", {
    currentId,
    add: ({id, text, selected: selected2}) => {
      if (selected2) {
        selectedIndex = switches.length;
      }
      switches = [...switches, {id, text, selected: selected2}];
    },
    update: (id) => {
      selectedIndex = switches.map(({id: id2}) => id2).indexOf(id);
    },
    change: (direction2) => {
      let index2 = currentIndex + direction2;
      if (index2 < 0) {
        index2 = switches.length - 1;
      } else if (index2 >= switches.length) {
        index2 = 0;
      }
      selectedIndex = index2;
    }
  });
  afterUpdate(() => {
    if (selectedIndex !== currentIndex) {
      currentIndex = selectedIndex;
    }
  });
  if ($$props.selectedIndex === void 0 && $$bindings.selectedIndex && selectedIndex !== void 0)
    $$bindings.selectedIndex(selectedIndex);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  currentIndex = -1;
  switches = [];
  {
    if (switches[currentIndex]) {
      dispatch("change", currentIndex);
      currentId.set(switches[currentIndex].id);
    }
  }
  return `
<div${spread([{role: "tablist"}, $$restProps], "bx--content-switcher " + (light ? "bx--content-switcher--light" : "") + " " + (size === "sm" ? "bx--content-switcher--sm" : "") + " " + (size === "xl" ? "bx--content-switcher--xl" : ""))}>${slots.default ? slots.default({}) : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["text", "selected", "disabled", "id", "ref"]);
  let {text = "Provide text"} = $$props;
  let {selected: selected2 = false} = $$props;
  let {disabled = false} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  const ctx = getContext("ContentSwitcher");
  ctx.add({id, text, selected: selected2});
  const unsubscribe = ctx.currentId.subscribe(($) => {
    selected2 = $ === id;
  });
  afterUpdate(() => {
    if (selected2) {
      ref.focus();
    }
  });
  onMount(() => {
    return () => unsubscribe();
  });
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.selected === void 0 && $$bindings.selected && selected2 !== void 0)
    $$bindings.selected(selected2);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `
<button${spread([
    {type: "button"},
    {role: "tab"},
    {tabindex: escape(selected2 ? "0" : "-1")},
    {"aria-selected": escape(selected2)},
    {disabled: disabled || null},
    {id: escape(id)},
    $$restProps
  ], "bx--content-switcher-btn " + (selected2 ? "bx--content-switcher--selected" : ""))}${add_attribute("this", ref, 1)}><span${add_classes(["bx--content-switcher__label"].join(" ").trim())}>${slots.default ? slots.default({}) : `${escape(text)}`}</span></button>`;
});
let direction = 1;
const ContextMenu = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let level;
  let $$restProps = compute_rest_props($$props, ["target", "open", "x", "y", "ref"]);
  let $hasPopup, $$unsubscribe_hasPopup;
  let {target = null} = $$props;
  let {open = false} = $$props;
  let {x = 0} = $$props;
  let {y = 0} = $$props;
  let {ref = null} = $$props;
  const dispatch = createEventDispatcher();
  const position = writable([x, y]);
  const currentIndex = writable(-1);
  const hasPopup = writable(false);
  $$unsubscribe_hasPopup = subscribe(hasPopup, (value) => $hasPopup = value);
  const menuOffsetX = writable(0);
  const ctx = getContext("ContextMenu");
  let options2 = [];
  let prevX = 0;
  let prevY = 0;
  let focusIndex = -1;
  let openDetail = null;
  function close() {
    open = false;
    x = 0;
    y = 0;
    prevX = 0;
    prevY = 0;
    focusIndex = -1;
  }
  function openMenu(e) {
    const {height, width} = ref.getBoundingClientRect();
    if (open || x === 0) {
      if (window.innerWidth - width < e.x) {
        x = e.x - width;
      } else {
        x = e.x;
      }
    }
    if (open || y === 0) {
      menuOffsetX.set(e.x);
      if (window.innerHeight - height < e.y) {
        y = e.y - height;
      } else {
        y = e.y;
      }
    }
    position.set([x, y]);
    open = true;
    openDetail = e.target;
  }
  onMount(() => {
    return () => {
      if (target != null) {
        if (Array.isArray(target)) {
          target.forEach((node) => node == null ? void 0 : node.removeEventListener("contextmenu", openMenu));
        } else {
          target.removeEventListener("contextmenu", openMenu);
        }
      }
    };
  });
  setContext("ContextMenu", {
    menuOffsetX,
    currentIndex,
    position,
    close,
    setPopup: (popup) => {
      hasPopup.set(popup);
    }
  });
  afterUpdate(() => {
    if (open) {
      options2 = [...ref.querySelectorAll("li[data-nested='false']")];
      if (level === 1) {
        if (prevX !== x || prevY !== y)
          ref.focus();
        prevX = x;
        prevY = y;
      }
      dispatch("open", openDetail);
    } else {
      dispatch("close");
    }
    if (!$hasPopup && options2[focusIndex])
      options2[focusIndex].focus();
  });
  if ($$props.target === void 0 && $$bindings.target && target !== void 0)
    $$bindings.target(target);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.x === void 0 && $$bindings.x && x !== void 0)
    $$bindings.x(x);
  if ($$props.y === void 0 && $$bindings.y && y !== void 0)
    $$bindings.y(y);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  {
    if (target != null) {
      if (Array.isArray(target)) {
        target.forEach((node) => node == null ? void 0 : node.addEventListener("contextmenu", openMenu));
      } else {
        target.addEventListener("contextmenu", openMenu);
      }
    }
  }
  level = !ctx ? 1 : 2;
  {
    currentIndex.set(focusIndex);
  }
  $$unsubscribe_hasPopup();
  return `

<ul${spread([
    {role: "menu"},
    {tabindex: "-1"},
    {"data-direction": escape(direction)},
    {"data-level": escape(level)},
    $$restProps,
    {
      style: "left: " + escape(x) + "px; top: " + escape(y) + "px; " + escape($$restProps.style)
    }
  ], "bx--menu " + (open ? "bx--menu--open" : "") + " " + (open && x === 0 && y === 0 ? "bx--menu--invisible" : "") + " " + (level === 1 ? "bx--menu--root" : ""))}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}</ul>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<li role="${"separator"}"${add_classes(["bx--menu-divider"].join(" ").trim())}></li>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {selectedIds = []} = $$props;
  let {labelText = ""} = $$props;
  const currentIds = writable([]);
  setContext("ContextMenuGroup", {
    currentIds,
    addOption: ({id}) => {
      if (!selectedIds.includes(id)) {
        selectedIds = [...selectedIds, id];
      }
    },
    toggleOption: ({id}) => {
      if (!selectedIds.includes(id)) {
        selectedIds = [...selectedIds, id];
      } else {
        selectedIds = selectedIds.filter((_) => _ !== id);
      }
    }
  });
  if ($$props.selectedIds === void 0 && $$bindings.selectedIds && selectedIds !== void 0)
    $$bindings.selectedIds(selectedIds);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  {
    currentIds.set(selectedIds);
  }
  return `<li role="${"none"}"><ul role="${"group"}"${add_attribute("aria-label", labelText, 0)}>${slots.default ? slots.default({}) : ``}</ul></li>`;
});
const Checkmark16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Checkmark16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M13 24L4 15 5.414 13.586 13 21.171 26.586 7.586 28 9 13 24z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const CaretRight16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "CaretRight16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M12 8L22 16 12 24z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let isSelectable;
  let isRadio;
  let subOptions;
  let $$restProps = compute_rest_props($$props, [
    "kind",
    "disabled",
    "indented",
    "icon",
    "labelText",
    "selected",
    "selectable",
    "shortcutText",
    "id",
    "ref"
  ]);
  let $$slots = compute_slots(slots);
  let {kind = "default"} = $$props;
  let {disabled = false} = $$props;
  let {indented = false} = $$props;
  let {icon = void 0} = $$props;
  let {labelText = ""} = $$props;
  let {selected: selected2 = false} = $$props;
  let {selectable = false} = $$props;
  let {shortcutText = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  createEventDispatcher();
  const ctx = getContext("ContextMenu");
  const ctxGroup = getContext("ContextMenuGroup");
  const ctxRadioGroup = getContext("ContextMenuRadioGroup");
  let unsubCurrentIds = void 0;
  let unsubCurrentId = void 0;
  let role = "menuitem";
  let submenuOpen = false;
  let submenuPosition = [0, 0];
  const unsubPosition = ctx.position.subscribe((position) => {
  });
  const unsubMenuOffsetX = ctx.menuOffsetX.subscribe((_menuOffsetX) => {
  });
  onMount(() => {
    if (selected2 === true)
      selectable = true;
    if (ctxGroup) {
      unsubCurrentIds = ctxGroup.currentIds.subscribe((_currentIds) => {
        selected2 = _currentIds.includes(id);
      });
    }
    if (ctxRadioGroup) {
      unsubCurrentId = ctxRadioGroup.currentId.subscribe((_id) => {
        selected2 = id === _id;
      });
    }
    return () => {
      unsubPosition();
      unsubMenuOffsetX();
      if (unsubCurrentIds)
        unsubCurrentIds();
      if (unsubCurrentId)
        unsubCurrentId();
    };
  });
  if ($$props.kind === void 0 && $$bindings.kind && kind !== void 0)
    $$bindings.kind(kind);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.indented === void 0 && $$bindings.indented && indented !== void 0)
    $$bindings.indented(indented);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.selected === void 0 && $$bindings.selected && selected2 !== void 0)
    $$bindings.selected(selected2);
  if ($$props.selectable === void 0 && $$bindings.selectable && selectable !== void 0)
    $$bindings.selectable(selectable);
  if ($$props.shortcutText === void 0 && $$bindings.shortcutText && shortcutText !== void 0)
    $$bindings.shortcutText(shortcutText);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  isSelectable = !!ctxGroup || selectable;
  isRadio = !!ctxRadioGroup;
  subOptions = $$slots.default;
  {
    ctx.setPopup(submenuOpen);
  }
  {
    {
      if (isSelectable) {
        indented = true;
        role = "menuitemcheckbox";
        if (selected2) {
          if (ctxGroup)
            ctxGroup.addOption({id});
          icon = Checkmark16;
        } else {
          icon = void 0;
        }
      }
      if (isRadio) {
        indented = true;
        role = "menuitemradio";
        ctxRadioGroup.addOption({id});
        if (selected2) {
          if (ctxRadioGroup)
            ctxRadioGroup.setOption({id});
          icon = Checkmark16;
        } else {
          icon = void 0;
        }
      }
    }
  }
  return `<li${spread([
    {role: escape(role)},
    {tabindex: "-1"},
    {
      "aria-disabled": escape(!subOptions && disabled)
    },
    {
      "aria-haspopup": escape(subOptions ? true : void 0)
    },
    {
      "aria-expanded": escape(subOptions ? submenuOpen : void 0)
    },
    {indented: escape(indented)},
    {
      "aria-checked": escape(isSelectable || isRadio ? selected2 : void 0)
    },
    {
      "data-nested": escape(ref && ref.closest(".bx--menu").getAttribute("data-level") === "2")
    },
    {"data-sub": escape(subOptions)},
    {"data-id": escape(id)},
    $$restProps
  ], "bx--menu-option bx--menu-option--disabled " + (subOptions && submenuOpen ? "bx--menu-option--active" : "") + " " + (!subOptions && kind === "danger" ? "bx--menu-option--danger" : ""))}${add_attribute("this", ref, 1)}>${subOptions ? `<div${add_classes([
    "bx--menu-option__content " + (disabled ? "bx--menu-option__content--disabled" : "")
  ].join(" ").trim())}>${indented ? `<div${add_classes(["bx--menu-option__icon"].join(" ").trim())}>${slots.icon ? slots.icon({}) : `
            ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
          `}</div>` : ``}
      <span${add_attribute("title", labelText, 0)}${add_classes(["bx--menu-option__label"].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `${escape(labelText)}`}</span>
      <div${add_classes(["bx--menu-option__info"].join(" ").trim())}>${validate_component(CaretRight16, "CaretRight16").$$render($$result, {}, {}, {})}</div></div>

    ${validate_component(ContextMenu, "ContextMenu").$$render($$result, {
    open: submenuOpen,
    x: submenuPosition[0],
    y: submenuPosition[1]
  }, {}, {
    default: () => `${slots.default ? slots.default({}) : ``}`
  })}` : `<div${add_classes([
    "bx--menu-option__content " + (disabled ? "bx--menu-option__content--disabled" : "")
  ].join(" ").trim())}>${indented ? `<div${add_classes(["bx--menu-option__icon"].join(" ").trim())}>${slots.icon ? slots.icon({}) : `
            ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
          `}</div>` : ``}
      <span${add_attribute("title", labelText, 0)}${add_classes(["bx--menu-option__label"].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `${escape(labelText)}`}</span>
      <div${add_classes(["bx--menu-option__info"].join(" ").trim())}>${slots.shortcutText ? slots.shortcutText({}) : `${escape(shortcutText)}`}</div></div>`}</li>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $radioIds, $$unsubscribe_radioIds;
  let {selectedId = ""} = $$props;
  let {labelText = ""} = $$props;
  const currentId = writable("");
  const radioIds = writable([]);
  $$unsubscribe_radioIds = subscribe(radioIds, (value) => $radioIds = value);
  setContext("ContextMenuRadioGroup", {
    currentId,
    radioIds,
    addOption: ({id}) => {
      if (!$radioIds.includes(id)) {
        radioIds.update((_) => [..._, id]);
      }
    },
    setOption: ({id}) => {
      selectedId = id;
    }
  });
  if ($$props.selectedId === void 0 && $$bindings.selectedId && selectedId !== void 0)
    $$bindings.selectedId(selectedId);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  {
    currentId.set(selectedId);
  }
  $$unsubscribe_radioIds();
  return `<li role="${"none"}"><ul role="${"group"}"${add_attribute("aria-label", labelText, 0)}>${slots.default ? slots.default({}) : ``}</ul></li>`;
});
const Copy16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Copy16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M28,10V28H10V10H28m0-2H10a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V10a2,2,0,0,0-2-2Z"}"></path><path d="${"M4,18H2V4A2,2,0,0,1,4,2H18V4H4Z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const CopyButton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["feedback", "feedbackTimeout", "iconDescription", "text", "copy"]);
  let {feedback = "Copied!"} = $$props;
  let {feedbackTimeout = 2e3} = $$props;
  let {iconDescription = "Copy to clipboard"} = $$props;
  let {text = void 0} = $$props;
  let {copy = async (text2) => {
    try {
      await navigator.clipboard.writeText(text2);
    } catch (e) {
      console.log(e);
    }
  }} = $$props;
  createEventDispatcher();
  let timeout = void 0;
  onMount(() => {
    return () => clearTimeout(timeout);
  });
  if ($$props.feedback === void 0 && $$bindings.feedback && feedback !== void 0)
    $$bindings.feedback(feedback);
  if ($$props.feedbackTimeout === void 0 && $$bindings.feedbackTimeout && feedbackTimeout !== void 0)
    $$bindings.feedbackTimeout(feedbackTimeout);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.copy === void 0 && $$bindings.copy && copy !== void 0)
    $$bindings.copy(copy);
  return `<button${spread([
    {type: "button"},
    {"aria-live": "polite"},
    {"aria-label": escape(iconDescription)},
    {title: escape(iconDescription)},
    $$restProps
  ], "bx--copy-btn bx--copy   ")}>${validate_component(Copy16, "Copy16").$$render($$result, {class: "bx--snippet__icon"}, {}, {})}
  <span aria-hidden="${"true"}"${add_classes([
    "bx--assistive-text bx--copy-btn__feedback"
  ].join(" ").trim())}>${escape(feedback)}</span></button>`;
});
const WarningFilled16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "WarningFilled16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M8,1C4.2,1,1,4.2,1,8s3.2,7,7,7s7-3.1,7-7S11.9,1,8,1z M7.5,4h1v5h-1C7.5,9,7.5,4,7.5,4z M8,12.2	c-0.4,0-0.8-0.4-0.8-0.8s0.3-0.8,0.8-0.8c0.4,0,0.8,0.4,0.8,0.8S8.4,12.2,8,12.2z"}"></path><path d="${"M7.5,4h1v5h-1C7.5,9,7.5,4,7.5,4z M8,12.2c-0.4,0-0.8-0.4-0.8-0.8s0.3-0.8,0.8-0.8	c0.4,0,0.8,0.4,0.8,0.8S8.4,12.2,8,12.2z"}" data-icon-path="${"inner-path"}" opacity="${"0"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const WarningAltFilled16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "WarningAltFilled16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path fill="${"none"}" d="${"M16,26a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,26Zm-1.125-5h2.25V12h-2.25Z"}" data-icon-path="${"inner-path"}"></path><path d="${"M16.002,6.1714h-.004L4.6487,27.9966,4.6506,28H27.3494l.0019-.0034ZM14.875,12h2.25v9h-2.25ZM16,26a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,26Z"}"></path><path d="${"M29,30H3a1,1,0,0,1-.8872-1.4614l13-25a1,1,0,0,1,1.7744,0l13,25A1,1,0,0,1,29,30ZM4.6507,28H27.3493l.002-.0033L16.002,6.1714h-.004L4.6487,27.9967Z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const ListBox = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "size",
    "type",
    "open",
    "light",
    "disabled",
    "invalid",
    "invalidText",
    "warn",
    "warnText"
  ]);
  let {size = void 0} = $$props;
  let {type = "default"} = $$props;
  let {open = false} = $$props;
  let {light = false} = $$props;
  let {disabled = false} = $$props;
  let {invalid = false} = $$props;
  let {invalidText = ""} = $$props;
  let {warn = false} = $$props;
  let {warnText = ""} = $$props;
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.invalidText === void 0 && $$bindings.invalidText && invalidText !== void 0)
    $$bindings.invalidText(invalidText);
  if ($$props.warn === void 0 && $$bindings.warn && warn !== void 0)
    $$bindings.warn(warn);
  if ($$props.warnText === void 0 && $$bindings.warnText && warnText !== void 0)
    $$bindings.warnText(warnText);
  return `<div${spread([
    {role: "listbox"},
    {tabindex: "-1"},
    {
      "data-invalid": escape(invalid || void 0)
    },
    $$restProps
  ], "bx--list-box " + (size === "sm" ? "bx--list-box--sm" : "") + " " + (size === "xl" ? "bx--list-box--xl" : "") + " " + (type === "inline" ? "bx--list-box--inline" : "") + " " + (disabled ? "bx--list-box--disabled" : "") + " " + (open ? "bx--list-box--expanded" : "") + " " + (light ? "bx--list-box--light" : "") + " " + (!invalid && warn ? "bx--list-box--warning" : ""))}>${slots.default ? slots.default({}) : ``}</div>
${invalid ? `<div${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(invalidText)}</div>` : ``}
${!invalid && warn ? `<div${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(warnText)}</div>` : ``}`;
});
const ListBoxField = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaExpanded;
  let menuId;
  let $$restProps = compute_rest_props($$props, ["disabled", "role", "tabindex", "translationIds", "translateWithId", "id", "ref"]);
  let {disabled = false} = $$props;
  let {role = "combobox"} = $$props;
  let {tabindex = "-1"} = $$props;
  const translationIds = {close: "close", open: "open"};
  let {translateWithId = (id2) => defaultTranslations[id2]} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  const defaultTranslations = {
    [translationIds.close]: "Close menu",
    [translationIds.open]: "Open menu"
  };
  const ctx = getContext("MultiSelect");
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.role === void 0 && $$bindings.role && role !== void 0)
    $$bindings.role(role);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.translationIds === void 0 && $$bindings.translationIds && translationIds !== void 0)
    $$bindings.translationIds(translationIds);
  if ($$props.translateWithId === void 0 && $$bindings.translateWithId && translateWithId !== void 0)
    $$bindings.translateWithId(translateWithId);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  {
    if (ctx && ref) {
      ctx.declareRef({key: "field", ref});
    }
  }
  ariaExpanded = $$props["aria-expanded"];
  menuId = `menu-${id}`;
  return `<div${spread([
    {role: escape(role)},
    {"aria-expanded": escape(ariaExpanded)},
    {
      "aria-owns": escape(ariaExpanded && menuId || void 0)
    },
    {
      "aria-controls": escape(ariaExpanded && menuId || void 0)
    },
    {"aria-disabled": escape(disabled)},
    {
      "aria-label": escape(ariaExpanded ? translateWithId("close") : translateWithId("open"))
    },
    {
      tabindex: escape(disabled ? "-1" : tabindex)
    },
    $$restProps
  ], "bx--list-box__field")}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}</div>`;
});
const ListBoxMenu = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["id", "ref"]);
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `<div${spread([{role: "listbox"}, {id: "menu-" + escape(id)}, $$restProps], "bx--list-box__menu")}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}</div>`;
});
const ChevronDown16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "ChevronDown16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const ListBoxMenuIcon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let description;
  let $$restProps = compute_rest_props($$props, ["open", "translationIds", "translateWithId"]);
  let {open = false} = $$props;
  const translationIds = {close: "close", open: "open"};
  let {translateWithId = (id) => defaultTranslations[id]} = $$props;
  const defaultTranslations = {
    [translationIds.close]: "Close menu",
    [translationIds.open]: "Open menu"
  };
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.translationIds === void 0 && $$bindings.translationIds && translationIds !== void 0)
    $$bindings.translationIds(translationIds);
  if ($$props.translateWithId === void 0 && $$bindings.translateWithId && translateWithId !== void 0)
    $$bindings.translateWithId(translateWithId);
  description = open ? translateWithId("close") : translateWithId("open");
  return `<div${spread([$$restProps], "bx--list-box__menu-icon " + (open ? "bx--list-box__menu-icon--open" : ""))}>${validate_component(ChevronDown16, "ChevronDown16").$$render($$result, {
    "aria-label": description,
    title: description
  }, {}, {})}</div>`;
});
const ListBoxMenuItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["active", "highlighted"]);
  let {active = false} = $$props;
  let {highlighted = false} = $$props;
  if ($$props.active === void 0 && $$bindings.active && active !== void 0)
    $$bindings.active(active);
  if ($$props.highlighted === void 0 && $$bindings.highlighted && highlighted !== void 0)
    $$bindings.highlighted(highlighted);
  return `<div${spread([$$restProps], "bx--list-box__menu-item " + (active ? "bx--list-box__menu-item--active" : "") + " " + (highlighted ? "bx--list-box__menu-item--highlighted" : ""))}><div${add_classes(["bx--list-box__menu-item__option"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</div></div>`;
});
const Close16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Close16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const ListBoxSelection = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let description;
  let $$restProps = compute_rest_props($$props, ["selectionCount", "disabled", "translationIds", "translateWithId", "ref"]);
  let {selectionCount = void 0} = $$props;
  let {disabled = false} = $$props;
  const translationIds = {
    clearAll: "clearAll",
    clearSelection: "clearSelection"
  };
  let {translateWithId = (id) => defaultTranslations[id]} = $$props;
  let {ref = null} = $$props;
  const defaultTranslations = {
    [translationIds.clearAll]: "Clear all selected items",
    [translationIds.clearSelection]: "Clear selected item"
  };
  createEventDispatcher();
  const ctx = getContext("MultiSelect");
  if ($$props.selectionCount === void 0 && $$bindings.selectionCount && selectionCount !== void 0)
    $$bindings.selectionCount(selectionCount);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.translationIds === void 0 && $$bindings.translationIds && translationIds !== void 0)
    $$bindings.translationIds(translationIds);
  if ($$props.translateWithId === void 0 && $$bindings.translateWithId && translateWithId !== void 0)
    $$bindings.translateWithId(translateWithId);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  {
    if (ctx && ref) {
      ctx.declareRef({key: "selection", ref});
    }
  }
  description = selectionCount ? translateWithId("clearAll") : translateWithId("clearSelection");
  return `${selectionCount !== void 0 ? `<div${add_classes([
    "bx--tag bx--tag--filter bx--tag--high-contrast " + (disabled ? "bx--tag--disabled" : "")
  ].join(" ").trim())}><span${add_attribute("title", selectionCount, 0)}${add_classes(["bx--tag__label"].join(" ").trim())}>${escape(selectionCount)}</span>
    <div role="${"button"}"${add_attribute("tabIndex", disabled ? -1 : 0, 0)} ${disabled ? "disabled" : ""}${add_attribute("aria-label", translationIds.clearAll, 0)}${add_attribute("title", description, 0)}${add_classes(["bx--tag__close-icon"].join(" ").trim())}${add_attribute("this", ref, 1)}>${validate_component(Close16, "Close16").$$render($$result, {}, {}, {})}</div></div>` : `<div${spread([
    {role: "button"},
    {"aria-label": escape(description)},
    {title: escape(description)},
    {tabindex: escape(disabled ? "-1" : "0")},
    $$restProps
  ], "bx--list-box__selection " + (selectionCount ? "bx--tag--filter" : "") + " " + (selectionCount ? "bx--list-box__selection--multi" : ""))}${add_attribute("this", ref, 1)}>${selectionCount !== void 0 ? `${escape(selectionCount)}` : ``}
    ${validate_component(Close16, "Close16").$$render($$result, {}, {}, {})}</div>`}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let menuId;
  let comboId;
  let highlightedId;
  let filteredItems;
  let $$restProps = compute_rest_props($$props, [
    "items",
    "itemToString",
    "selectedId",
    "value",
    "direction",
    "size",
    "disabled",
    "titleText",
    "placeholder",
    "helperText",
    "invalidText",
    "invalid",
    "warn",
    "warnText",
    "light",
    "open",
    "shouldFilterItem",
    "translateWithId",
    "id",
    "name",
    "ref",
    "listRef",
    "clear"
  ]);
  let {items = []} = $$props;
  let {itemToString = (item) => item.text || item.id} = $$props;
  let {selectedId = void 0} = $$props;
  let {value = ""} = $$props;
  let {direction: direction2 = "bottom"} = $$props;
  let {size = void 0} = $$props;
  let {disabled = false} = $$props;
  let {titleText = ""} = $$props;
  let {placeholder = ""} = $$props;
  let {helperText = ""} = $$props;
  let {invalidText = ""} = $$props;
  let {invalid = false} = $$props;
  let {warn = false} = $$props;
  let {warnText = ""} = $$props;
  let {light = false} = $$props;
  let {open = false} = $$props;
  let {shouldFilterItem = () => true} = $$props;
  let {translateWithId = void 0} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  let {ref = null} = $$props;
  let {listRef = null} = $$props;
  const dispatch = createEventDispatcher();
  let selectedItem = void 0;
  let inputValue = value;
  let prevSelectedId = null;
  let highlightedIndex = -1;
  function clear2(options2 = {}) {
    prevSelectedId = null;
    highlightedIndex = -1;
    highlightedId = void 0;
    selectedId = void 0;
    selectedItem = void 0;
    open = false;
    inputValue = "";
    if ((options2 == null ? void 0 : options2.focus) !== false)
      ref == null ? void 0 : ref.focus();
  }
  afterUpdate(() => {
    if (open) {
      ref.focus();
      filteredItems = items.filter((item) => shouldFilterItem(item, value));
    } else {
      highlightedIndex = -1;
      filteredItems = [];
      if (!selectedItem) {
        selectedId = void 0;
        inputValue = "";
        highlightedIndex = -1;
        highlightedId = void 0;
      } else {
        inputValue = selectedItem.text;
      }
    }
  });
  if ($$props.items === void 0 && $$bindings.items && items !== void 0)
    $$bindings.items(items);
  if ($$props.itemToString === void 0 && $$bindings.itemToString && itemToString !== void 0)
    $$bindings.itemToString(itemToString);
  if ($$props.selectedId === void 0 && $$bindings.selectedId && selectedId !== void 0)
    $$bindings.selectedId(selectedId);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.direction === void 0 && $$bindings.direction && direction2 !== void 0)
    $$bindings.direction(direction2);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.titleText === void 0 && $$bindings.titleText && titleText !== void 0)
    $$bindings.titleText(titleText);
  if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0)
    $$bindings.placeholder(placeholder);
  if ($$props.helperText === void 0 && $$bindings.helperText && helperText !== void 0)
    $$bindings.helperText(helperText);
  if ($$props.invalidText === void 0 && $$bindings.invalidText && invalidText !== void 0)
    $$bindings.invalidText(invalidText);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.warn === void 0 && $$bindings.warn && warn !== void 0)
    $$bindings.warn(warn);
  if ($$props.warnText === void 0 && $$bindings.warnText && warnText !== void 0)
    $$bindings.warnText(warnText);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.shouldFilterItem === void 0 && $$bindings.shouldFilterItem && shouldFilterItem !== void 0)
    $$bindings.shouldFilterItem(shouldFilterItem);
  if ($$props.translateWithId === void 0 && $$bindings.translateWithId && translateWithId !== void 0)
    $$bindings.translateWithId(translateWithId);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  if ($$props.listRef === void 0 && $$bindings.listRef && listRef !== void 0)
    $$bindings.listRef(listRef);
  if ($$props.clear === void 0 && $$bindings.clear && clear2 !== void 0)
    $$bindings.clear(clear2);
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    value = inputValue;
    filteredItems = items.filter((item) => shouldFilterItem(item, value));
    {
      if (selectedId !== void 0) {
        if (prevSelectedId !== selectedId) {
          prevSelectedId = selectedId;
          if ((filteredItems == null ? void 0 : filteredItems.length) === 1 && open) {
            selectedId = filteredItems[0].id;
            selectedItem = filteredItems[0];
            highlightedIndex = -1;
            highlightedId = void 0;
          } else {
            selectedItem = items.find((item) => item.id === selectedId);
          }
          dispatch("select", {selectedId, selectedItem});
        }
      } else {
        prevSelectedId = selectedId;
        selectedItem = void 0;
      }
    }
    ariaLabel = $$props["aria-label"] || "Choose an item";
    menuId = `menu-${id}`;
    comboId = `combo-${id}`;
    highlightedId = items[highlightedIndex] ? items[highlightedIndex].id : 0;
    $$rendered = `

<div${add_classes(["bx--list-box__wrapper"].join(" ").trim())}>${titleText ? `<label${add_attribute("for", id, 0)}${add_classes(["bx--label " + (disabled ? "bx--label--disabled" : "")].join(" ").trim())}>${escape(titleText)}</label>` : ``}
  ${validate_component(ListBox, "ListBox").$$render($$result, {
      class: "bx--combo-box " + (direction2 === "top" && "bx--list-box--up") + " " + (!invalid && warn && "bx--combo-box--warning"),
      id: comboId,
      "aria-label": ariaLabel,
      disabled,
      invalid,
      invalidText,
      open,
      light,
      size,
      warn,
      warnText
    }, {}, {
      default: () => `${validate_component(ListBoxField, "ListBoxField").$$render($$result, {
        role: "button",
        "aria-expanded": open,
        id,
        disabled,
        translateWithId
      }, {}, {
        default: () => `<input${spread([
          {tabindex: "0"},
          {autocomplete: "off"},
          {"aria-autocomplete": "list"},
          {"aria-expanded": escape(open)},
          {
            "aria-activedescendant": escape(highlightedId)
          },
          {"aria-labelledby": escape(comboId)},
          {"aria-disabled": escape(disabled)},
          {
            "aria-controls": escape(open ? menuId : void 0)
          },
          {
            "aria-owns": escape(open ? menuId : void 0)
          },
          {disabled: disabled || null},
          {placeholder: escape(placeholder)},
          {id: escape(id)},
          {value: escape(inputValue)},
          {name: escape(name)},
          $$restProps
        ], "bx--text-input " + (light ? "bx--text-input--light" : "") + " " + (inputValue === "" ? "bx--text-input--empty" : ""))}${add_attribute("this", ref, 1)}>
      ${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {class: "bx--list-box__invalid-icon"}, {}, {})}` : ``}
      ${!invalid && warn ? `${validate_component(WarningAltFilled16, "WarningAltFilled16").$$render($$result, {
          class: "bx--list-box__invalid-icon bx--list-box__invalid-icon--warning"
        }, {}, {})}` : ``}
      ${inputValue ? `${validate_component(ListBoxSelection, "ListBoxSelection").$$render($$result, {translateWithId, disabled, open}, {}, {})}` : ``}
      ${validate_component(ListBoxMenuIcon, "ListBoxMenuIcon").$$render($$result, {translateWithId, open}, {}, {})}`
      })}
    ${open ? `${validate_component(ListBoxMenu, "ListBoxMenu").$$render($$result, {
        "aria-label": ariaLabel,
        id,
        ref: listRef
      }, {
        ref: ($$value) => {
          listRef = $$value;
          $$settled = false;
        }
      }, {
        default: () => `${each(filteredItems, (item, i) => `${validate_component(ListBoxMenuItem, "ListBoxMenuItem").$$render($$result, {
          id: item.id,
          active: selectedId === item.id,
          highlighted: highlightedIndex === i
        }, {}, {
          default: () => `${slots.default ? slots.default({item, index: i}) : `
              ${escape(itemToString(item))}
            `}
            ${selectedItem && selectedItem.id === item.id ? `${validate_component(Checkmark16, "Checkmark16").$$render($$result, {
            class: "bx--list-box__menu-item__selected-icon"
          }, {}, {})}` : ``}
          `
        })}`)}`
      })}` : ``}`
    })}
  ${!invalid && helperText && !warn ? `<div${add_classes([
      "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "")
    ].join(" ").trim())}>${escape(helperText)}</div>` : ``}</div>`;
  } while (!$$settled);
  return $$rendered;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "size",
    "open",
    "danger",
    "preventCloseOnClickOutside",
    "containerClass",
    "selectorPrimaryFocus",
    "ref"
  ]);
  let $label, $$unsubscribe_label;
  let {size = void 0} = $$props;
  let {open = false} = $$props;
  let {danger = false} = $$props;
  let {preventCloseOnClickOutside = false} = $$props;
  let {containerClass = ""} = $$props;
  let {selectorPrimaryFocus = "[data-modal-primary-focus]"} = $$props;
  let {ref = null} = $$props;
  const dispatch = createEventDispatcher();
  const label = writable(void 0);
  $$unsubscribe_label = subscribe(label, (value) => $label = value);
  let buttonRef = null;
  let innerModal = null;
  setContext("ComposedModal", {
    closeModal: () => {
      open = false;
    },
    submit: () => {
      dispatch("submit");
      dispatch("click:button--primary");
    },
    declareRef: (ref2) => {
      buttonRef = ref2;
    },
    updateLabel: (value) => {
      label.set(value);
    }
  });
  function focus(element) {
    if (selectorPrimaryFocus == null)
      return;
    const node = (element || innerModal).querySelector(selectorPrimaryFocus) || buttonRef;
    if (node != null)
      node.focus();
  }
  let opened = false;
  onMount(() => {
    tick().then(() => {
      focus();
    });
    return () => {
      document.body.classList.remove("bx--body--with-modal-open");
    };
  });
  afterUpdate(() => {
    if (opened) {
      if (!open) {
        opened = false;
        dispatch("close");
        document.body.classList.remove("bx--body--with-modal-open");
      }
    } else if (open) {
      opened = true;
      dispatch("open");
      document.body.classList.add("bx--body--with-modal-open");
    }
  });
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.danger === void 0 && $$bindings.danger && danger !== void 0)
    $$bindings.danger(danger);
  if ($$props.preventCloseOnClickOutside === void 0 && $$bindings.preventCloseOnClickOutside && preventCloseOnClickOutside !== void 0)
    $$bindings.preventCloseOnClickOutside(preventCloseOnClickOutside);
  if ($$props.containerClass === void 0 && $$bindings.containerClass && containerClass !== void 0)
    $$bindings.containerClass(containerClass);
  if ($$props.selectorPrimaryFocus === void 0 && $$bindings.selectorPrimaryFocus && selectorPrimaryFocus !== void 0)
    $$bindings.selectorPrimaryFocus(selectorPrimaryFocus);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  $$unsubscribe_label();
  return `
<div${spread([{role: "presentation"}, $$restProps], "bx--modal " + (open ? "is-visible" : "") + " " + (danger ? "bx--modal--danger" : ""))}${add_attribute("this", ref, 1)}><div role="${"dialog"}" aria-modal="${"true"}"${add_attribute("aria-label", $$props["aria-label"] || $label || void 0, 0)} class="${[
    escape(containerClass),
    "bx--modal-container " + (size === "xs" ? "bx--modal-container--xs" : "") + " " + (size === "sm" ? "bx--modal-container--sm" : "") + " " + (size === "lg" ? "bx--modal-container--lg" : "")
  ].join(" ").trim()}"${add_attribute("this", innerModal, 1)}>${slots.default ? slots.default({}) : ``}</div></div>`;
});
const Close20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Close20"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "title",
    "label",
    "labelClass",
    "titleClass",
    "closeClass",
    "closeIconClass",
    "iconDescription"
  ]);
  let {title = ""} = $$props;
  let {label = ""} = $$props;
  let {labelClass = ""} = $$props;
  let {titleClass = ""} = $$props;
  let {closeClass = ""} = $$props;
  let {closeIconClass = ""} = $$props;
  let {iconDescription = "Close"} = $$props;
  const {closeModal, updateLabel} = getContext("ComposedModal");
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.label === void 0 && $$bindings.label && label !== void 0)
    $$bindings.label(label);
  if ($$props.labelClass === void 0 && $$bindings.labelClass && labelClass !== void 0)
    $$bindings.labelClass(labelClass);
  if ($$props.titleClass === void 0 && $$bindings.titleClass && titleClass !== void 0)
    $$bindings.titleClass(titleClass);
  if ($$props.closeClass === void 0 && $$bindings.closeClass && closeClass !== void 0)
    $$bindings.closeClass(closeClass);
  if ($$props.closeIconClass === void 0 && $$bindings.closeIconClass && closeIconClass !== void 0)
    $$bindings.closeIconClass(closeIconClass);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  {
    updateLabel(label);
  }
  return `<div${spread([$$restProps], "bx--modal-header")}>${label ? `<h2 class="${[
    escape(labelClass),
    "bx--modal-header__label bx--type-delta"
  ].join(" ").trim()}">${escape(label)}</h2>` : ``}
  ${title ? `<h3 class="${[
    escape(titleClass),
    "bx--modal-header__heading bx--type-beta"
  ].join(" ").trim()}">${escape(title)}</h3>` : ``}
  ${slots.default ? slots.default({}) : ``}
  <button type="${"button"}"${add_attribute("title", iconDescription, 0)}${add_attribute("aria-label", iconDescription, 0)} class="${[escape(closeClass), "bx--modal-close"].join(" ").trim()}">${validate_component(Close20, "Close20").$$render($$result, {
    class: "bx--modal-close__icon " + closeIconClass
  }, {}, {})}</button></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["hasForm", "hasScrollingContent"]);
  let {hasForm = false} = $$props;
  let {hasScrollingContent = false} = $$props;
  if ($$props.hasForm === void 0 && $$bindings.hasForm && hasForm !== void 0)
    $$bindings.hasForm(hasForm);
  if ($$props.hasScrollingContent === void 0 && $$bindings.hasScrollingContent && hasScrollingContent !== void 0)
    $$bindings.hasScrollingContent(hasScrollingContent);
  return `<div${spread([
    {
      tabindex: escape(hasScrollingContent ? "0" : void 0)
    },
    {
      role: escape(hasScrollingContent ? "region" : void 0)
    },
    $$restProps
  ], "bx--modal-content " + (hasForm ? "bx--modal-content--with-form" : "") + " " + (hasScrollingContent ? "bx--modal-scroll-content" : ""))}>${slots.default ? slots.default({}) : ``}</div>
${hasScrollingContent ? `<div${add_classes(["bx--modal-content--overflow-indicator"].join(" ").trim())}></div>` : ``}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "primaryButtonText",
    "primaryButtonIcon",
    "primaryButtonDisabled",
    "primaryClass",
    "secondaryButtonText",
    "secondaryButtons",
    "secondaryClass",
    "danger"
  ]);
  let {primaryButtonText = ""} = $$props;
  let {primaryButtonIcon = void 0} = $$props;
  let {primaryButtonDisabled = false} = $$props;
  let {primaryClass = void 0} = $$props;
  let {secondaryButtonText = ""} = $$props;
  let {secondaryButtons = []} = $$props;
  let {secondaryClass = void 0} = $$props;
  let {danger = false} = $$props;
  createEventDispatcher();
  getContext("ComposedModal");
  if ($$props.primaryButtonText === void 0 && $$bindings.primaryButtonText && primaryButtonText !== void 0)
    $$bindings.primaryButtonText(primaryButtonText);
  if ($$props.primaryButtonIcon === void 0 && $$bindings.primaryButtonIcon && primaryButtonIcon !== void 0)
    $$bindings.primaryButtonIcon(primaryButtonIcon);
  if ($$props.primaryButtonDisabled === void 0 && $$bindings.primaryButtonDisabled && primaryButtonDisabled !== void 0)
    $$bindings.primaryButtonDisabled(primaryButtonDisabled);
  if ($$props.primaryClass === void 0 && $$bindings.primaryClass && primaryClass !== void 0)
    $$bindings.primaryClass(primaryClass);
  if ($$props.secondaryButtonText === void 0 && $$bindings.secondaryButtonText && secondaryButtonText !== void 0)
    $$bindings.secondaryButtonText(secondaryButtonText);
  if ($$props.secondaryButtons === void 0 && $$bindings.secondaryButtons && secondaryButtons !== void 0)
    $$bindings.secondaryButtons(secondaryButtons);
  if ($$props.secondaryClass === void 0 && $$bindings.secondaryClass && secondaryClass !== void 0)
    $$bindings.secondaryClass(secondaryClass);
  if ($$props.danger === void 0 && $$bindings.danger && danger !== void 0)
    $$bindings.danger(danger);
  return `<div${spread([$$restProps], "bx--modal-footer " + (secondaryButtons.length === 2 ? "bx--modal-footer--three-button" : ""))}>${secondaryButtons.length > 0 ? `${each(secondaryButtons, (button) => `${validate_component(Button, "Button").$$render($$result, {kind: "secondary"}, {}, {
    default: () => `${escape(button.text)}
      `
  })}`)}` : `${secondaryButtonText ? `${validate_component(Button, "Button").$$render($$result, {kind: "secondary", class: secondaryClass}, {}, {
    default: () => `${escape(secondaryButtonText)}`
  })}` : ``}`}
  ${primaryButtonText ? `${validate_component(Button, "Button").$$render($$result, {
    kind: danger ? "danger" : "primary",
    disabled: primaryButtonDisabled,
    class: primaryClass,
    icon: primaryButtonIcon
  }, {}, {
    default: () => `${escape(primaryButtonText)}`
  })}` : ``}
  ${slots.default ? slots.default({}) : ``}</div>`;
});
const CodeSnippetSkeleton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["type"]);
  let {type = "single"} = $$props;
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  return `
<div${spread([$$restProps], "bx--skeleton bx--snippet " + (type === "single" ? "bx--snippet--single" : "") + " " + (type === "multi" ? "bx--snippet--multi" : ""))}><div${add_classes(["bx--snippet-container"].join(" ").trim())}>${type === "single" ? `<span></span>` : `${type === "multi" ? `<span></span> <span></span> <span></span>` : ``}`}</div></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let expandText;
  let minHeight;
  let maxHeight;
  let $$restProps = compute_rest_props($$props, [
    "type",
    "code",
    "copy",
    "expanded",
    "hideCopyButton",
    "disabled",
    "wrapText",
    "light",
    "skeleton",
    "copyButtonDescription",
    "copyLabel",
    "feedback",
    "feedbackTimeout",
    "showLessText",
    "showMoreText",
    "showMoreLess",
    "id",
    "ref"
  ]);
  let {type = "single"} = $$props;
  let {code = void 0} = $$props;
  let {copy = async (code2) => {
    try {
      await navigator.clipboard.writeText(code2);
    } catch (e) {
      console.log(e);
    }
  }} = $$props;
  let {expanded = false} = $$props;
  let {hideCopyButton = false} = $$props;
  let {disabled = false} = $$props;
  let {wrapText = false} = $$props;
  let {light = false} = $$props;
  let {skeleton = false} = $$props;
  let {copyButtonDescription = void 0} = $$props;
  let {copyLabel = void 0} = $$props;
  let {feedback = "Copied!"} = $$props;
  let {feedbackTimeout = 2e3} = $$props;
  let {showLessText = "Show less"} = $$props;
  let {showMoreText = "Show more"} = $$props;
  let {showMoreLess = false} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  createEventDispatcher();
  let timeout = void 0;
  function setShowMoreLess() {
    const {height} = ref.getBoundingClientRect();
    if (height > 0)
      showMoreLess = ref.getBoundingClientRect().height > 255;
  }
  onMount(() => {
    return () => clearTimeout(timeout);
  });
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  if ($$props.code === void 0 && $$bindings.code && code !== void 0)
    $$bindings.code(code);
  if ($$props.copy === void 0 && $$bindings.copy && copy !== void 0)
    $$bindings.copy(copy);
  if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0)
    $$bindings.expanded(expanded);
  if ($$props.hideCopyButton === void 0 && $$bindings.hideCopyButton && hideCopyButton !== void 0)
    $$bindings.hideCopyButton(hideCopyButton);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.wrapText === void 0 && $$bindings.wrapText && wrapText !== void 0)
    $$bindings.wrapText(wrapText);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.skeleton === void 0 && $$bindings.skeleton && skeleton !== void 0)
    $$bindings.skeleton(skeleton);
  if ($$props.copyButtonDescription === void 0 && $$bindings.copyButtonDescription && copyButtonDescription !== void 0)
    $$bindings.copyButtonDescription(copyButtonDescription);
  if ($$props.copyLabel === void 0 && $$bindings.copyLabel && copyLabel !== void 0)
    $$bindings.copyLabel(copyLabel);
  if ($$props.feedback === void 0 && $$bindings.feedback && feedback !== void 0)
    $$bindings.feedback(feedback);
  if ($$props.feedbackTimeout === void 0 && $$bindings.feedbackTimeout && feedbackTimeout !== void 0)
    $$bindings.feedbackTimeout(feedbackTimeout);
  if ($$props.showLessText === void 0 && $$bindings.showLessText && showLessText !== void 0)
    $$bindings.showLessText(showLessText);
  if ($$props.showMoreText === void 0 && $$bindings.showMoreText && showMoreText !== void 0)
    $$bindings.showMoreText(showMoreText);
  if ($$props.showMoreLess === void 0 && $$bindings.showMoreLess && showMoreLess !== void 0)
    $$bindings.showMoreLess(showMoreLess);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  expandText = expanded ? showLessText : showMoreText;
  minHeight = expanded ? 16 * 15 : 48;
  maxHeight = expanded ? "none" : 16 * 15 + "px";
  {
    if (type === "multi" && ref) {
      if (code === void 0)
        setShowMoreLess();
      if (code)
        tick().then(setShowMoreLess);
    }
  }
  return `
${skeleton ? `${validate_component(CodeSnippetSkeleton, "CodeSnippetSkeleton").$$render($$result, Object.assign({type}, $$restProps), {}, {})}` : `${type === "inline" ? `${hideCopyButton ? `<span${spread([$$restProps], "bx--snippet " + (expanded ? "bx--snippet--expand" : "") + " " + (light ? "bx--snippet--light" : "") + " " + (hideCopyButton ? "bx--snippet--no-copy" : "") + " " + (wrapText ? "bx--snippet--wraptext" : "") + " " + (type === "single" ? "bx--snippet--single" : "") + " " + (type === "inline" ? "bx--snippet--inline" : "") + " " + (type === "multi" ? "bx--snippet--multi" : ""))}><code${add_attribute("id", id, 0)}>${slots.default ? slots.default({}) : `${escape(code)}`}</code></span>` : `<button${spread([
    {type: "button"},
    {"aria-live": "polite"},
    {"aria-label": escape(copyLabel)},
    $$restProps
  ], "bx--copy bx--btn--copy    bx--snippet " + (type === "inline" ? "bx--snippet--inline" : "") + " " + (expanded ? "bx--snippet--expand" : "") + " " + (light ? "bx--snippet--light" : "") + " " + (wrapText ? "bx--snippet--wraptext" : ""))}><code${add_attribute("id", id, 0)}>${slots.default ? slots.default({}) : `${escape(code)}`}</code>
      <span aria-hidden="${"true"}"${add_classes([
    "bx--assistive-text bx--copy-btn__feedback"
  ].join(" ").trim())}>${escape(feedback)}</span></button>`}` : `<div${spread([$$restProps], "bx--snippet " + (expanded ? "bx--snippet--expand" : "") + " " + (light ? "bx--snippet--light" : "") + " " + (hideCopyButton ? "bx--snippet--no-copy" : "") + " " + (wrapText ? "bx--snippet--wraptext" : "") + " " + (type === "single" ? "bx--snippet--single" : "") + " " + (type === "inline" ? "bx--snippet--inline" : "") + " " + (type === "multi" ? "bx--snippet--multi" : "") + " " + (type !== "inline" && disabled ? "bx--snippet--disabled" : ""))}><div${add_attribute("role", type === "single" ? "textbox" : void 0, 0)}${add_attribute("tabindex", type === "single" && !disabled ? "0" : void 0, 0)}${add_attribute("aria-label", $$restProps["aria-label"] || copyLabel || "code-snippet", 0)} style="${"width: 100%; min-height: " + escape(minHeight) + "px; max-height: " + escape(maxHeight)}"${add_classes(["bx--snippet-container"].join(" ").trim())}><pre${add_attribute("this", ref, 1)}><code>${slots.default ? slots.default({}) : `${escape(code)}`}</code></pre></div>
    ${!hideCopyButton ? `${validate_component(CopyButton, "CopyButton").$$render($$result, {
    disabled,
    feedback,
    feedbackTimeout,
    iconDescription: copyButtonDescription
  }, {}, {})}` : ``}
    ${showMoreLess ? `${validate_component(Button, "Button").$$render($$result, {
    kind: "ghost",
    size: "field",
    class: "bx--snippet-btn--expand",
    disabled
  }, {}, {
    default: () => `<span${add_classes(["bx--snippet-btn--text"].join(" ").trim())}>${escape(expandText)}</span>
        ${validate_component(ChevronDown16, "ChevronDown16").$$render($$result, {
      class: "bx--icon-chevron--down bx--snippet__icon",
      "aria-label": expandText
    }, {}, {})}`
  })}` : ``}</div>`}`}`;
});
const RadioButton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "value",
    "checked",
    "disabled",
    "required",
    "labelPosition",
    "labelText",
    "hideLabel",
    "id",
    "name",
    "ref"
  ]);
  let $$slots = compute_slots(slots);
  let $selectedValue, $$unsubscribe_selectedValue;
  let {value = ""} = $$props;
  let {checked = false} = $$props;
  let {disabled = false} = $$props;
  let {required = false} = $$props;
  let {labelPosition = "right"} = $$props;
  let {labelText = ""} = $$props;
  let {hideLabel = false} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = ""} = $$props;
  let {ref = null} = $$props;
  const ctx = getContext("RadioButtonGroup");
  const selectedValue = ctx ? ctx.selectedValue : writable(checked ? value : void 0);
  $$unsubscribe_selectedValue = subscribe(selectedValue, (value2) => $selectedValue = value2);
  if (ctx) {
    ctx.add({id, checked, disabled, value});
  }
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.checked === void 0 && $$bindings.checked && checked !== void 0)
    $$bindings.checked(checked);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.required === void 0 && $$bindings.required && required !== void 0)
    $$bindings.required(required);
  if ($$props.labelPosition === void 0 && $$bindings.labelPosition && labelPosition !== void 0)
    $$bindings.labelPosition(labelPosition);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  checked = $selectedValue === value;
  $$unsubscribe_selectedValue();
  return `<div${spread([$$restProps], "bx--radio-button-wrapper " + (labelPosition === "left" ? "bx--radio-button-wrapper--label-left" : ""))}><input type="${"radio"}"${add_attribute("id", id, 0)}${add_attribute("name", name, 0)} ${checked ? "checked" : ""} ${disabled ? "disabled" : ""} ${required ? "required" : ""}${add_attribute("value", value, 0)}${add_classes(["bx--radio-button"].join(" ").trim())}${add_attribute("this", ref, 1)}>
  <label${add_attribute("for", id, 0)}${add_classes(["bx--radio-button__label"].join(" ").trim())}><span${add_classes(["bx--radio-button__appearance"].join(" ").trim())}></span>
    ${labelText || $$slots.labelText ? `<span${add_classes([hideLabel ? "bx--visually-hidden" : ""].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
          ${escape(labelText)}
        `}</span>` : ``}</label></div>`;
});
const Table = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["size", "zebra", "useStaticWidth", "shouldShowBorder", "sortable", "stickyHeader"]);
  let {size = void 0} = $$props;
  let {zebra = false} = $$props;
  let {useStaticWidth = false} = $$props;
  let {shouldShowBorder = false} = $$props;
  let {sortable = false} = $$props;
  let {stickyHeader = false} = $$props;
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.zebra === void 0 && $$bindings.zebra && zebra !== void 0)
    $$bindings.zebra(zebra);
  if ($$props.useStaticWidth === void 0 && $$bindings.useStaticWidth && useStaticWidth !== void 0)
    $$bindings.useStaticWidth(useStaticWidth);
  if ($$props.shouldShowBorder === void 0 && $$bindings.shouldShowBorder && shouldShowBorder !== void 0)
    $$bindings.shouldShowBorder(shouldShowBorder);
  if ($$props.sortable === void 0 && $$bindings.sortable && sortable !== void 0)
    $$bindings.sortable(sortable);
  if ($$props.stickyHeader === void 0 && $$bindings.stickyHeader && stickyHeader !== void 0)
    $$bindings.stickyHeader(stickyHeader);
  return `${stickyHeader ? `<section${spread([$$restProps], "bx--data-table_inner-container")}><table${add_classes([
    "bx--data-table " + (size === "compact" ? "bx--data-table--compact" : "") + " " + (size === "short" ? "bx--data-table--short" : "") + " " + (size === "tall" ? "bx--data-table--tall" : "") + " " + (size === "medium" ? "bx--data-table--md" : "") + " " + (sortable ? "bx--data-table--sort" : "") + " " + (zebra ? "bx--data-table--zebra" : "") + " " + (useStaticWidth ? "bx--data-table--static" : "") + " " + (!shouldShowBorder ? "bx--data-table--no-border" : "") + " " + (stickyHeader ? "bx--data-table--sticky-header" : "")
  ].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</table></section>` : `<table${spread([$$restProps], "bx--data-table " + (size === "compact" ? "bx--data-table--compact" : "") + " " + (size === "short" ? "bx--data-table--short" : "") + " " + (size === "tall" ? "bx--data-table--tall" : "") + " " + (size === "medium" ? "bx--data-table--md" : "") + " " + (sortable ? "bx--data-table--sort" : "") + " " + (zebra ? "bx--data-table--zebra" : "") + " " + (useStaticWidth ? "bx--data-table--static" : "") + " " + (!shouldShowBorder ? "bx--data-table--no-border" : "") + " " + (stickyHeader ? "bx--data-table--sticky-header" : ""))}>${slots.default ? slots.default({}) : ``}</table>`}`;
});
const TableBody = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `<tbody${spread([{"aria-live": "polite"}, $$restProps])}>${slots.default ? slots.default({}) : ``}</tbody>`;
});
const TableCell = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<td${spread([$$restProps])}>${slots.default ? slots.default({}) : ``}</td>`;
});
const TableContainer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["title", "description", "stickyHeader", "useStaticWidth"]);
  let {title = ""} = $$props;
  let {description = ""} = $$props;
  let {stickyHeader = false} = $$props;
  let {useStaticWidth = false} = $$props;
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.description === void 0 && $$bindings.description && description !== void 0)
    $$bindings.description(description);
  if ($$props.stickyHeader === void 0 && $$bindings.stickyHeader && stickyHeader !== void 0)
    $$bindings.stickyHeader(stickyHeader);
  if ($$props.useStaticWidth === void 0 && $$bindings.useStaticWidth && useStaticWidth !== void 0)
    $$bindings.useStaticWidth(useStaticWidth);
  return `<div${spread([$$restProps], "bx--data-table-container " + (useStaticWidth ? "bx--data-table-container--static" : "") + " " + (stickyHeader ? "bx--data-table--max-width" : ""))}>${title ? `<div${add_classes(["bx--data-table-header"].join(" ").trim())}><h4${add_classes(["bx--data-table-header__title"].join(" ").trim())}>${escape(title)}</h4>
      <p${add_classes(["bx--data-table-header__description"].join(" ").trim())}>${escape(description)}</p></div>` : ``}
  ${slots.default ? slots.default({}) : ``}</div>`;
});
const TableHead = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<thead${spread([$$restProps])}>${slots.default ? slots.default({}) : ``}</thead>`;
});
const ArrowUp20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "ArrowUp20"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const ArrowsVertical20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "ArrowsVertical20"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const TableHeader = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let active;
  let ariaLabel;
  let $$restProps = compute_rest_props($$props, ["disableSorting", "scope", "translateWithId", "id"]);
  let $sortHeader, $$unsubscribe_sortHeader;
  let $tableSortable, $$unsubscribe_tableSortable;
  let {disableSorting = false} = $$props;
  let {scope = "col"} = $$props;
  let {translateWithId = () => ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  const {sortHeader, tableSortable} = getContext("DataTable");
  $$unsubscribe_sortHeader = subscribe(sortHeader, (value) => $sortHeader = value);
  $$unsubscribe_tableSortable = subscribe(tableSortable, (value) => $tableSortable = value);
  if ($$props.disableSorting === void 0 && $$bindings.disableSorting && disableSorting !== void 0)
    $$bindings.disableSorting(disableSorting);
  if ($$props.scope === void 0 && $$bindings.scope && scope !== void 0)
    $$bindings.scope(scope);
  if ($$props.translateWithId === void 0 && $$bindings.translateWithId && translateWithId !== void 0)
    $$bindings.translateWithId(translateWithId);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  active = $sortHeader.id === id;
  ariaLabel = translateWithId();
  $$unsubscribe_sortHeader();
  $$unsubscribe_tableSortable();
  return `
${$tableSortable && !disableSorting ? `<th${spread([
    {
      "aria-sort": escape(active ? $sortHeader.sortDirection : "none")
    },
    {scope: escape(scope)},
    {id: escape(id)},
    $$restProps
  ])}><button${add_classes([
    "bx--table-sort " + (active ? "bx--table-sort--active" : "") + " " + (active && $sortHeader.sortDirection === "descending" ? "bx--table-sort--ascending" : "")
  ].join(" ").trim())}><div${add_classes(["bx--table-header-label"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</div>
      ${validate_component(ArrowUp20, "ArrowUp20").$$render($$result, {
    "aria-label": ariaLabel,
    class: "bx--table-sort__icon"
  }, {}, {})}
      ${validate_component(ArrowsVertical20, "ArrowsVertical20").$$render($$result, {
    "aria-label": ariaLabel,
    class: "bx--table-sort__icon-unsorted"
  }, {}, {})}</button></th>` : `<th${spread([{scope: escape(scope)}, {id: escape(id)}, $$restProps])}><div${add_classes(["bx--table-header-label"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</div></th>`}`;
});
const TableRow = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<tr${spread([$$restProps])}>${slots.default ? slots.default({}) : ``}</tr>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let expandedRows;
  let rowIds;
  let expandableRowIds;
  let selectableRowIds;
  let selectAll;
  let indeterminate;
  let headerKeys;
  let sortedRows;
  let ascending;
  let sortKey;
  let sorting;
  let displayedRows;
  let displayedSortedRows;
  let $$restProps = compute_rest_props($$props, [
    "headers",
    "rows",
    "size",
    "title",
    "description",
    "zebra",
    "sortable",
    "expandable",
    "batchExpansion",
    "expandedRowIds",
    "nonExpandableRowIds",
    "radio",
    "selectable",
    "batchSelection",
    "selectedRowIds",
    "nonSelectableRowIds",
    "stickyHeader",
    "useStaticWidth",
    "pageSize",
    "page"
  ]);
  let $$slots = compute_slots(slots);
  let $tableRows, $$unsubscribe_tableRows;
  let $sortHeader, $$unsubscribe_sortHeader;
  let $$unsubscribe_thKeys;
  let {headers = []} = $$props;
  let {rows = []} = $$props;
  let {size = void 0} = $$props;
  let {title = ""} = $$props;
  let {description = ""} = $$props;
  let {zebra = false} = $$props;
  let {sortable = false} = $$props;
  let {expandable = false} = $$props;
  let {batchExpansion = false} = $$props;
  let {expandedRowIds = []} = $$props;
  let {nonExpandableRowIds = []} = $$props;
  let {radio = false} = $$props;
  let {selectable = false} = $$props;
  let {batchSelection = false} = $$props;
  let {selectedRowIds = []} = $$props;
  let {nonSelectableRowIds = []} = $$props;
  let {stickyHeader = false} = $$props;
  let {useStaticWidth = false} = $$props;
  let {pageSize = 0} = $$props;
  let {page = 0} = $$props;
  createEventDispatcher();
  const batchSelectedIds = writable(false);
  const tableSortable = writable(sortable);
  const sortHeader = writable({
    id: null,
    key: null,
    sort: void 0,
    sortDirection: "none"
  });
  $$unsubscribe_sortHeader = subscribe(sortHeader, (value) => $sortHeader = value);
  const headerItems = writable([]);
  const tableRows = writable(rows);
  $$unsubscribe_tableRows = subscribe(tableRows, (value) => $tableRows = value);
  const thKeys = derived(headerItems, () => headers.map(({key}, i) => ({key, id: key})).reduce((a, c) => ({...a, [c.key]: c.id}), {}));
  $$unsubscribe_thKeys = subscribe(thKeys, (value) => value);
  const resolvePath = (object, path) => path.split(/[\.\[\]\'\"]/).filter((p) => p).reduce((o, p) => o && typeof o === "object" ? o[p] : o, object);
  setContext("DataTable", {
    sortHeader,
    tableSortable,
    batchSelectedIds,
    tableRows,
    resetSelectedRowIds: () => {
      selectAll = false;
      selectedRowIds = [];
      if (refSelectAll)
        refSelectAll.checked = false;
    }
  });
  let expanded = false;
  let parentRowId = null;
  let refSelectAll = null;
  const getDisplayedRows = (rows2, page2, pageSize2) => page2 && pageSize2 ? rows2.slice((page2 - 1) * pageSize2, page2 * pageSize2) : rows2;
  if ($$props.headers === void 0 && $$bindings.headers && headers !== void 0)
    $$bindings.headers(headers);
  if ($$props.rows === void 0 && $$bindings.rows && rows !== void 0)
    $$bindings.rows(rows);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.description === void 0 && $$bindings.description && description !== void 0)
    $$bindings.description(description);
  if ($$props.zebra === void 0 && $$bindings.zebra && zebra !== void 0)
    $$bindings.zebra(zebra);
  if ($$props.sortable === void 0 && $$bindings.sortable && sortable !== void 0)
    $$bindings.sortable(sortable);
  if ($$props.expandable === void 0 && $$bindings.expandable && expandable !== void 0)
    $$bindings.expandable(expandable);
  if ($$props.batchExpansion === void 0 && $$bindings.batchExpansion && batchExpansion !== void 0)
    $$bindings.batchExpansion(batchExpansion);
  if ($$props.expandedRowIds === void 0 && $$bindings.expandedRowIds && expandedRowIds !== void 0)
    $$bindings.expandedRowIds(expandedRowIds);
  if ($$props.nonExpandableRowIds === void 0 && $$bindings.nonExpandableRowIds && nonExpandableRowIds !== void 0)
    $$bindings.nonExpandableRowIds(nonExpandableRowIds);
  if ($$props.radio === void 0 && $$bindings.radio && radio !== void 0)
    $$bindings.radio(radio);
  if ($$props.selectable === void 0 && $$bindings.selectable && selectable !== void 0)
    $$bindings.selectable(selectable);
  if ($$props.batchSelection === void 0 && $$bindings.batchSelection && batchSelection !== void 0)
    $$bindings.batchSelection(batchSelection);
  if ($$props.selectedRowIds === void 0 && $$bindings.selectedRowIds && selectedRowIds !== void 0)
    $$bindings.selectedRowIds(selectedRowIds);
  if ($$props.nonSelectableRowIds === void 0 && $$bindings.nonSelectableRowIds && nonSelectableRowIds !== void 0)
    $$bindings.nonSelectableRowIds(nonSelectableRowIds);
  if ($$props.stickyHeader === void 0 && $$bindings.stickyHeader && stickyHeader !== void 0)
    $$bindings.stickyHeader(stickyHeader);
  if ($$props.useStaticWidth === void 0 && $$bindings.useStaticWidth && useStaticWidth !== void 0)
    $$bindings.useStaticWidth(useStaticWidth);
  if ($$props.pageSize === void 0 && $$bindings.pageSize && pageSize !== void 0)
    $$bindings.pageSize(pageSize);
  if ($$props.page === void 0 && $$bindings.page && page !== void 0)
    $$bindings.page(page);
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    expandedRows = expandedRowIds.reduce((a, id) => ({...a, [id]: true}), {});
    {
      batchSelectedIds.set(selectedRowIds);
    }
    rowIds = $tableRows.map((row) => row.id);
    expandableRowIds = rowIds.filter((id) => !nonExpandableRowIds.includes(id));
    selectableRowIds = rowIds.filter((id) => !nonSelectableRowIds.includes(id));
    selectAll = selectableRowIds.length > 0 && selectedRowIds.length === selectableRowIds.length;
    indeterminate = selectedRowIds.length > 0 && selectedRowIds.length < selectableRowIds.length;
    {
      if (batchExpansion) {
        expandable = true;
        expanded = expandedRowIds.length === expandableRowIds.length;
      }
    }
    {
      if (radio || batchSelection)
        selectable = true;
    }
    {
      tableSortable.set(sortable);
    }
    headerKeys = headers.map(({key}) => key);
    {
      tableRows.set(rows.map((row) => ({
        ...row,
        cells: headerKeys.map((key, index2) => ({
          key,
          value: resolvePath(row, key),
          display: headers[index2].display
        }))
      })));
    }
    sortedRows = [...$tableRows];
    ascending = $sortHeader.sortDirection === "ascending";
    sortKey = $sortHeader.key;
    sorting = sortable && sortKey != null;
    {
      if (sorting) {
        if ($sortHeader.sortDirection === "none") {
          sortedRows = $tableRows;
        } else {
          sortedRows = [...$tableRows].sort((a, b) => {
            const itemA = ascending ? resolvePath(a, sortKey) : resolvePath(b, sortKey);
            const itemB = ascending ? resolvePath(b, sortKey) : resolvePath(a, sortKey);
            if ($sortHeader.sort)
              return $sortHeader.sort(itemA, itemB);
            if (typeof itemA === "number" && typeof itemB === "number")
              return itemA - itemB;
            if ([itemA, itemB].every((item) => !item && item !== 0))
              return 0;
            if (!itemA && itemA !== 0)
              return ascending ? 1 : -1;
            if (!itemB && itemB !== 0)
              return ascending ? -1 : 1;
            return itemA.toString().localeCompare(itemB.toString(), "en", {numeric: true});
          });
        }
      }
    }
    displayedRows = getDisplayedRows($tableRows, page, pageSize);
    displayedSortedRows = getDisplayedRows(sortedRows, page, pageSize);
    $$rendered = `${validate_component(TableContainer, "TableContainer").$$render($$result, Object.assign({useStaticWidth}, $$restProps), {}, {
      default: () => `${title || $$slots.title || description || $$slots.description ? `<div${add_classes(["bx--data-table-header"].join(" ").trim())}>${title || $$slots.title ? `<h4${add_classes(["bx--data-table-header__title"].join(" ").trim())}>${slots.title ? slots.title({}) : `${escape(title)}`}</h4>` : ``}
      ${description || $$slots.description ? `<p${add_classes(["bx--data-table-header__description"].join(" ").trim())}>${slots.description ? slots.description({}) : `${escape(description)}`}</p>` : ``}</div>` : ``}
  ${slots.default ? slots.default({}) : ``}
  ${validate_component(Table, "Table").$$render($$result, {
        zebra,
        size,
        stickyHeader,
        sortable,
        useStaticWidth
      }, {}, {
        default: () => `${validate_component(TableHead, "TableHead").$$render($$result, {}, {}, {
          default: () => `${validate_component(TableRow, "TableRow").$$render($$result, {}, {}, {
            default: () => `${expandable ? `<th scope="${"col"}"${add_attribute("data-previous-value", expanded ? "collapsed" : void 0, 0)}${add_classes(["bx--table-expand"].join(" ").trim())}>${batchExpansion ? `<button type="${"button"}"${add_classes(["bx--table-expand__button"].join(" ").trim())}>${validate_component(ChevronRight16, "ChevronRight16").$$render($$result, {class: "bx--table-expand__svg"}, {}, {})}</button>` : ``}</th>` : ``}
        ${selectable && !batchSelection ? `<th scope="${"col"}"></th>` : ``}
        ${batchSelection && !radio ? `<th scope="${"col"}"${add_classes(["bx--table-column-checkbox"].join(" ").trim())}>${validate_component(InlineCheckbox, "InlineCheckbox").$$render($$result, {
              "aria-label": "Select all rows",
              checked: selectAll,
              indeterminate,
              ref: refSelectAll
            }, {
              ref: ($$value) => {
                refSelectAll = $$value;
                $$settled = false;
              }
            }, {})}</th>` : ``}
        ${each(headers, (header, i) => `${header.empty ? `<th scope="${"col"}"></th>` : `${validate_component(TableHeader, "TableHeader").$$render($$result, {
              id: header.key,
              disableSorting: header.sort === false
            }, {}, {
              default: () => `${slots["cell-header"] ? slots["cell-header"]({header}) : `${escape(header.value)}`}
            `
            })}`}`)}`
          })}`
        })}
    ${validate_component(TableBody, "TableBody").$$render($$result, {}, {}, {
          default: () => `${each(sorting ? displayedSortedRows : displayedRows, (row, i) => `${validate_component(TableRow, "TableRow").$$render($$result, {
            id: "row-" + row.id,
            "data-parent-row": expandable ? true : void 0,
            class: (selectedRowIds.includes(row.id) ? "bx--data-table--selected" : "") + " " + (expandedRows[row.id] ? "bx--expandable-row" : "") + " " + (expandable ? "bx--parent-row" : "") + " " + (expandable && parentRowId === row.id ? "bx--expandable-row--hover" : "")
          }, {}, {
            default: () => `${expandable ? `${validate_component(TableCell, "TableCell").$$render($$result, {
              class: "bx--table-expand",
              headers: "expand",
              "data-previous-value": !nonExpandableRowIds.includes(row.id) && expandedRows[row.id] ? "collapsed" : void 0
            }, {}, {
              default: () => `${!nonExpandableRowIds.includes(row.id) ? `<button type="${"button"}"${add_attribute("aria-label", expandedRows[row.id] ? "Collapse current row" : "Expand current row", 0)}${add_classes(["bx--table-expand__button"].join(" ").trim())}>${validate_component(ChevronRight16, "ChevronRight16").$$render($$result, {class: "bx--table-expand__svg"}, {}, {})}
                </button>` : ``}
            `
            })}` : ``}
          ${selectable ? `<td${add_classes([
              "bx--table-column-checkbox " + (radio ? "bx--table-column-radio" : "")
            ].join(" ").trim())}>${!nonSelectableRowIds.includes(row.id) ? `${radio ? `${validate_component(RadioButton, "RadioButton").$$render($$result, {
              name: "select-row-" + row.id,
              checked: selectedRowIds.includes(row.id)
            }, {}, {})}` : `${validate_component(InlineCheckbox, "InlineCheckbox").$$render($$result, {
              name: "select-row-" + row.id,
              checked: selectedRowIds.includes(row.id)
            }, {}, {})}`}` : ``}
            </td>` : ``}
          ${each(row.cells, (cell, j) => `${headers[j].empty ? `<td${add_classes([headers[j].columnMenu ? "bx--table-column-menu" : ""].join(" ").trim())}>${slots.cell ? slots.cell({row, cell, rowIndex: i, cellIndex: j}) : `
                  ${escape(cell.display ? cell.display(cell.value) : cell.value)}
                `}
              </td>` : `${validate_component(TableCell, "TableCell").$$render($$result, {}, {}, {
              default: () => `${slots.cell ? slots.cell({row, cell, rowIndex: i, cellIndex: j}) : `
                  ${escape(cell.display ? cell.display(cell.value) : cell.value)}
                `}
              `
            })}`}`)}
        `
          })}

        ${expandable ? `<tr data-child-row${add_classes(["bx--expandable-row"].join(" ").trim())}>${expandedRows[row.id] && !nonExpandableRowIds.includes(row.id) ? `${validate_component(TableCell, "TableCell").$$render($$result, {
            colspan: selectable ? headers.length + 2 : headers.length + 1
          }, {}, {
            default: () => `<div${add_classes(["bx--child-row-inner-container"].join(" ").trim())}>${slots["expanded-row"] ? slots["expanded-row"]({row}) : ``}</div>
              `
          })}` : ``}
          </tr>` : ``}`)}`
        })}`
      })}`
    })}`;
  } while (!$$settled);
  $$unsubscribe_tableRows();
  $$unsubscribe_sortHeader();
  $$unsubscribe_thKeys();
  return $$rendered;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let values;
  let cols;
  let $$restProps = compute_rest_props($$props, ["columns", "rows", "size", "zebra", "showHeader", "headers", "showToolbar"]);
  let {columns = 5} = $$props;
  let {rows = 5} = $$props;
  let {size = void 0} = $$props;
  let {zebra = false} = $$props;
  let {showHeader = true} = $$props;
  let {headers = []} = $$props;
  let {showToolbar = true} = $$props;
  if ($$props.columns === void 0 && $$bindings.columns && columns !== void 0)
    $$bindings.columns(columns);
  if ($$props.rows === void 0 && $$bindings.rows && rows !== void 0)
    $$bindings.rows(rows);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.zebra === void 0 && $$bindings.zebra && zebra !== void 0)
    $$bindings.zebra(zebra);
  if ($$props.showHeader === void 0 && $$bindings.showHeader && showHeader !== void 0)
    $$bindings.showHeader(showHeader);
  if ($$props.headers === void 0 && $$bindings.headers && headers !== void 0)
    $$bindings.headers(headers);
  if ($$props.showToolbar === void 0 && $$bindings.showToolbar && showToolbar !== void 0)
    $$bindings.showToolbar(showToolbar);
  values = headers.map((header) => header.value !== void 0 ? header.value : header);
  cols = Array.from({
    length: headers.length > 0 ? headers.length : columns
  }, (_, i) => i);
  return `
<div${spread([$$restProps], "bx--skeleton bx--data-table-container")}>${showHeader ? `<div${add_classes(["bx--data-table-header"].join(" ").trim())}><div${add_classes(["bx--data-table-header__title"].join(" ").trim())}></div>
      <div${add_classes(["bx--data-table-header__description"].join(" ").trim())}></div></div>` : ``}
  ${showToolbar ? `<section aria-label="${"data table toolbar"}"${add_classes(["bx--table-toolbar"].join(" ").trim())}><div${add_classes(["bx--toolbar-content"].join(" ").trim())}><span${add_classes([
    "bx--skeleton bx--btn bx--btn--sm"
  ].join(" ").trim())}></span></div></section>` : ``}
  <table${add_classes([
    "bx--skeleton bx--data-table " + (size === "compact" ? "bx--data-table--compact" : "") + " " + (size === "short" ? "bx--data-table--short" : "") + " " + (size === "tall" ? "bx--data-table--tall" : "") + " " + (zebra ? "bx--data-table--zebra" : "")
  ].join(" ").trim())}><thead><tr>${each(cols, (col) => `${typeof values[col] === "object" && values[col].empty === true ? `<th></th>` : `<th>${escape(values[col] || "")}</th>`}`)}</tr></thead>
    <tbody>${each(Array.from({length: rows}, (_, i) => i), (row) => `<tr>${each(cols, (col) => `<td><span></span></td>`)}
        </tr>`)}</tbody></table></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["size"]);
  let {size = "default"} = $$props;
  let ref = null;
  const overflowVisible = writable(false);
  setContext("Toolbar", {
    overflowVisible,
    setOverflowVisible: (visible) => {
      overflowVisible.set(visible);
    }
  });
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  return `<section${spread([{"aria-label": "data table toolbar"}, $$restProps], "bx--table-toolbar " + (size === "sm" ? "bx--table-toolbar--small" : "") + " " + (size === "default" ? "bx--table-toolbar--normal" : ""))}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}</section>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div${add_classes(["bx--toolbar-content"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</div>`;
});
const Search16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Search16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M15,14.3L10.7,10c1.9-2.3,1.6-5.8-0.7-7.7S4.2,0.7,2.3,3S0.7,8.8,3,10.7c2,1.7,5,1.7,7,0l4.3,4.3L15,14.3z M2,6.5	C2,4,4,2,6.5,2S11,4,11,6.5S9,11,6.5,11S2,9,2,6.5z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const SearchSkeleton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["small", "size"]);
  let {small = false} = $$props;
  let {size = "xl"} = $$props;
  if ($$props.small === void 0 && $$bindings.small && small !== void 0)
    $$bindings.small(small);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  return `
<div${spread([$$restProps], "bx--skeleton " + (size === "sm" || small ? "bx--search--sm" : "") + " " + (size === "lg" ? "bx--search--lg" : "") + " " + (size === "xl" ? "bx--search--xl" : ""))}><span${add_classes(["bx--label"].join(" ").trim())}></span>
  <div${add_classes(["bx--search-input"].join(" ").trim())}></div></div>`;
});
const Search = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "value",
    "small",
    "size",
    "searchClass",
    "skeleton",
    "light",
    "disabled",
    "expandable",
    "expanded",
    "placeholder",
    "autocomplete",
    "autofocus",
    "closeButtonLabelText",
    "labelText",
    "icon",
    "id",
    "ref"
  ]);
  let {value = ""} = $$props;
  let {small = false} = $$props;
  let {size = "xl"} = $$props;
  let {searchClass = ""} = $$props;
  let {skeleton = false} = $$props;
  let {light = false} = $$props;
  let {disabled = false} = $$props;
  let {expandable = false} = $$props;
  let {expanded = false} = $$props;
  let {placeholder = "Search..."} = $$props;
  let {autocomplete = "off"} = $$props;
  let {autofocus = false} = $$props;
  let {closeButtonLabelText = "Clear search input"} = $$props;
  let {labelText = ""} = $$props;
  let {icon = Search16} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  const dispatch = createEventDispatcher();
  let searchRef = null;
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.small === void 0 && $$bindings.small && small !== void 0)
    $$bindings.small(small);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.searchClass === void 0 && $$bindings.searchClass && searchClass !== void 0)
    $$bindings.searchClass(searchClass);
  if ($$props.skeleton === void 0 && $$bindings.skeleton && skeleton !== void 0)
    $$bindings.skeleton(skeleton);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.expandable === void 0 && $$bindings.expandable && expandable !== void 0)
    $$bindings.expandable(expandable);
  if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0)
    $$bindings.expanded(expanded);
  if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0)
    $$bindings.placeholder(placeholder);
  if ($$props.autocomplete === void 0 && $$bindings.autocomplete && autocomplete !== void 0)
    $$bindings.autocomplete(autocomplete);
  if ($$props.autofocus === void 0 && $$bindings.autofocus && autofocus !== void 0)
    $$bindings.autofocus(autofocus);
  if ($$props.closeButtonLabelText === void 0 && $$bindings.closeButtonLabelText && closeButtonLabelText !== void 0)
    $$bindings.closeButtonLabelText(closeButtonLabelText);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  {
    if (expanded && ref)
      ref.focus();
  }
  {
    dispatch(expanded ? "expand" : "collapse");
  }
  return `${skeleton ? `${validate_component(SearchSkeleton, "SearchSkeleton").$$render($$result, Object.assign({small}, {size}, $$restProps), {}, {})}` : `<div role="${"search"}" aria-labelledby="${escape(id) + "-search"}" class="${[
    escape(searchClass),
    "bx--search " + (light ? "bx--search--light" : "") + " " + (disabled ? "bx--search--disabled" : "") + " " + (size === "sm" || small ? "bx--search--sm" : "") + " " + (size === "lg" ? "bx--search--lg" : "") + " " + (size === "xl" ? "bx--search--xl" : "") + " " + (expandable ? "bx--search--expandable" : "") + " " + (expanded ? "bx--search--expanded" : "")
  ].join(" ").trim()}"><div${add_classes(["bx--search-magnifier"].join(" ").trim())}${add_attribute("this", searchRef, 1)}>${validate_component(icon || missing_component, "svelte:component").$$render($$result, {class: "bx--search-magnifier-icon"}, {}, {})}</div>
    <label id="${escape(id) + "-search"}"${add_attribute("for", id, 0)}${add_classes(["bx--label"].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
        ${escape(labelText)}
      `}</label>
    
    <input${spread([
    {type: "text"},
    {role: "searchbox"},
    {
      autofocus: (autofocus === true ? true : void 0) || null
    },
    {autocomplete: escape(autocomplete)},
    {disabled: disabled || null},
    {id: escape(id)},
    {placeholder: escape(placeholder)},
    $$restProps
  ], "bx--search-input")}${add_attribute("this", ref, 1)}${add_attribute("value", value, 1)}>
    <button type="${"button"}"${add_attribute("aria-label", closeButtonLabelText, 0)} ${disabled ? "disabled" : ""}${add_classes([
    "bx--search-close " + (value === "" ? "bx--search-close--hidden" : "")
  ].join(" ").trim())}>${validate_component((size === "xl" ? Close20 : Close16) || missing_component, "svelte:component").$$render($$result, {}, {}, {})}</button></div>`}`;
});
const {Object: Object_1$1} = globals;
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  var _a;
  let originalRows;
  let classes;
  let $$restProps = compute_rest_props($$props, ["value", "expanded", "persistent", "disabled", "shouldFilterRows", "tabindex", "ref"]);
  let $tableRows, $$unsubscribe_tableRows;
  let {value = ""} = $$props;
  let {expanded = false} = $$props;
  let {persistent = false} = $$props;
  let {disabled = false} = $$props;
  let {shouldFilterRows = false} = $$props;
  let {tabindex = "0"} = $$props;
  let {ref = null} = $$props;
  const {tableRows} = (_a = getContext("DataTable")) != null ? _a : {};
  $$unsubscribe_tableRows = subscribe(tableRows, (value2) => $tableRows = value2);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0)
    $$bindings.expanded(expanded);
  if ($$props.persistent === void 0 && $$bindings.persistent && persistent !== void 0)
    $$bindings.persistent(persistent);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.shouldFilterRows === void 0 && $$bindings.shouldFilterRows && shouldFilterRows !== void 0)
    $$bindings.shouldFilterRows(shouldFilterRows);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    originalRows = tableRows ? [...$tableRows] : [];
    {
      if (shouldFilterRows) {
        let rows = originalRows;
        if (value.trim().length > 0) {
          if (shouldFilterRows === true) {
            rows = rows.filter((row) => {
              return Object.entries(row).filter(([key]) => !["cells", "id"].includes(key)).some(([key, _value]) => {
                var _a2;
                if (typeof _value === "string" || typeof _value === "number") {
                  return (_a2 = _value + "") == null ? void 0 : _a2.toLowerCase().includes(value.trim().toLowerCase());
                }
              });
            });
          } else if (typeof shouldFilterRows === "function") {
            rows = rows.filter((row) => {
              var _a2;
              return (_a2 = shouldFilterRows(row, value)) != null ? _a2 : false;
            });
          }
        }
        tableRows.set(rows);
      }
    }
    expanded = !!value.length;
    classes = [
      expanded && "bx--toolbar-search-container-active",
      persistent ? "bx--toolbar-search-container-persistent" : "bx--toolbar-search-container-expandable",
      disabled && "bx--toolbar-search-container-disabled"
    ].filter(Boolean).join(" ");
    $$rendered = `${validate_component(Search, "Search").$$render($$result, Object_1$1.assign({tabindex}, {disabled}, $$restProps, {
      searchClass: classes + " " + $$restProps.class
    }, {ref}, {value}), {
      ref: ($$value) => {
        ref = $$value;
        $$settled = false;
      },
      value: ($$value) => {
        value = $$value;
        $$settled = false;
      }
    }, {})}`;
  } while (!$$settled);
  $$unsubscribe_tableRows();
  return $$rendered;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let showActions;
  let $$restProps = compute_rest_props($$props, ["formatTotalSelected"]);
  let {formatTotalSelected = (totalSelected) => `${totalSelected} item${totalSelected === 1 ? "" : "s"} selected`} = $$props;
  let batchSelectedIds = [];
  const ctx = getContext("DataTable");
  const unsubscribe = ctx.batchSelectedIds.subscribe((value) => {
    batchSelectedIds = value;
  });
  let overflowVisible = false;
  const ctxToolbar = getContext("Toolbar");
  const unsubscribeOverflow = ctxToolbar.overflowVisible.subscribe((value) => {
    overflowVisible = value;
  });
  onMount(() => {
    return () => {
      unsubscribe();
      unsubscribeOverflow();
    };
  });
  if ($$props.formatTotalSelected === void 0 && $$bindings.formatTotalSelected && formatTotalSelected !== void 0)
    $$bindings.formatTotalSelected(formatTotalSelected);
  showActions = batchSelectedIds.length > 0;
  return `${!overflowVisible ? `<div${spread([$$restProps], "bx--batch-actions " + (showActions ? "bx--batch-actions--active" : ""))}><div${add_classes(["bx--batch-summary"].join(" ").trim())}><p${add_classes(["bx--batch-summary__para"].join(" ").trim())}><span>${escape(formatTotalSelected(batchSelectedIds.length))}</span></p></div>
    <div${add_classes(["bx--action-list"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}
      ${validate_component(Button, "Button").$$render($$result, {
    class: "bx--batch-summary__cancel",
    tabindex: showActions ? "0" : "-1"
  }, {}, {
    default: () => `${slots.cancel ? slots.cancel({}) : `Cancel`}`
  })}</div></div>` : ``}`;
});
const Settings16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Settings16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M13.5,8.4c0-0.1,0-0.3,0-0.4c0-0.1,0-0.3,0-0.4l1-0.8c0.4-0.3,0.4-0.9,0.2-1.3l-1.2-2C13.3,3.2,13,3,12.6,3	c-0.1,0-0.2,0-0.3,0.1l-1.2,0.4c-0.2-0.1-0.4-0.3-0.7-0.4l-0.3-1.3C10.1,1.3,9.7,1,9.2,1H6.8c-0.5,0-0.9,0.3-1,0.8L5.6,3.1	C5.3,3.2,5.1,3.3,4.9,3.4L3.7,3C3.6,3,3.5,3,3.4,3C3,3,2.7,3.2,2.5,3.5l-1.2,2C1.1,5.9,1.2,6.4,1.6,6.8l0.9,0.9c0,0.1,0,0.3,0,0.4	c0,0.1,0,0.3,0,0.4L1.6,9.2c-0.4,0.3-0.5,0.9-0.2,1.3l1.2,2C2.7,12.8,3,13,3.4,13c0.1,0,0.2,0,0.3-0.1l1.2-0.4	c0.2,0.1,0.4,0.3,0.7,0.4l0.3,1.3c0.1,0.5,0.5,0.8,1,0.8h2.4c0.5,0,0.9-0.3,1-0.8l0.3-1.3c0.2-0.1,0.4-0.2,0.7-0.4l1.2,0.4	c0.1,0,0.2,0.1,0.3,0.1c0.4,0,0.7-0.2,0.9-0.5l1.1-2c0.2-0.4,0.2-0.9-0.2-1.3L13.5,8.4z M12.6,12l-1.7-0.6c-0.4,0.3-0.9,0.6-1.4,0.8	L9.2,14H6.8l-0.4-1.8c-0.5-0.2-0.9-0.5-1.4-0.8L3.4,12l-1.2-2l1.4-1.2c-0.1-0.5-0.1-1.1,0-1.6L2.2,6l1.2-2l1.7,0.6	C5.5,4.2,6,4,6.5,3.8L6.8,2h2.4l0.4,1.8c0.5,0.2,0.9,0.5,1.4,0.8L12.6,4l1.2,2l-1.4,1.2c0.1,0.5,0.1,1.1,0,1.6l1.4,1.2L12.6,12z"}"></path><path d="${"M8,11c-1.7,0-3-1.3-3-3s1.3-3,3-3s3,1.3,3,3C11,9.6,9.7,11,8,11C8,11,8,11,8,11z M8,6C6.9,6,6,6.8,6,7.9C6,7.9,6,8,6,8	c0,1.1,0.8,2,1.9,2c0,0,0.1,0,0.1,0c1.1,0,2-0.8,2-1.9c0,0,0-0.1,0-0.1C10,6.9,9.2,6,8,6C8.1,6,8,6,8,6z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const OverflowMenuVertical16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {
      "data-carbon-icon": "OverflowMenuVertical16"
    },
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><circle cx="${"16"}" cy="${"8"}" r="${"2"}"></circle><circle cx="${"16"}" cy="${"16"}" r="${"2"}"></circle><circle cx="${"16"}" cy="${"24"}" r="${"2"}"></circle>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const OverflowMenuHorizontal16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {
      "data-carbon-icon": "OverflowMenuHorizontal16"
    },
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><circle cx="${"8"}" cy="${"16"}" r="${"2"}"></circle><circle cx="${"16"}" cy="${"16"}" r="${"2"}"></circle><circle cx="${"24"}" cy="${"16"}" r="${"2"}"></circle>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const OverflowMenu = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let styles;
  let $$restProps = compute_rest_props($$props, [
    "size",
    "direction",
    "open",
    "light",
    "flipped",
    "menuOptionsClass",
    "icon",
    "iconClass",
    "iconDescription",
    "id",
    "buttonRef",
    "menuRef"
  ]);
  let $currentIndex, $$unsubscribe_currentIndex;
  let $items, $$unsubscribe_items;
  let $currentId, $$unsubscribe_currentId;
  let {size = void 0} = $$props;
  let {direction: direction2 = "bottom"} = $$props;
  let {open = false} = $$props;
  let {light = false} = $$props;
  let {flipped = false} = $$props;
  let {menuOptionsClass = void 0} = $$props;
  let {icon = OverflowMenuVertical16} = $$props;
  let {iconClass = void 0} = $$props;
  let {iconDescription = "Open and close list of options"} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {buttonRef = null} = $$props;
  let {menuRef = null} = $$props;
  const ctxBreadcrumbItem = getContext("BreadcrumbItem");
  const dispatch = createEventDispatcher();
  const items = writable([]);
  $$unsubscribe_items = subscribe(items, (value) => $items = value);
  const currentId = writable(void 0);
  $$unsubscribe_currentId = subscribe(currentId, (value) => $currentId = value);
  const focusedId = writable(void 0);
  const currentIndex = writable(-1);
  $$unsubscribe_currentIndex = subscribe(currentIndex, (value) => $currentIndex = value);
  let buttonWidth = void 0;
  let onMountAfterUpdate = true;
  setContext("OverflowMenu", {
    focusedId,
    add: ({id: id2, text, primaryFocus, disabled}) => {
      items.update((_) => {
        if (primaryFocus) {
          currentIndex.set(_.length);
        }
        return [
          ..._,
          {
            id: id2,
            text,
            primaryFocus,
            disabled,
            index: _.length
          }
        ];
      });
    },
    update: (id2) => {
      currentId.set(id2);
    },
    change: (direction3) => {
      let index2 = $currentIndex + direction3;
      if (index2 < 0) {
        index2 = $items.length - 1;
      } else if (index2 >= $items.length) {
        index2 = 0;
      }
      let disabled = $items[index2].disabled;
      while (disabled) {
        index2 = index2 + direction3;
        if (index2 < 0) {
          index2 = $items.length - 1;
        } else if (index2 >= $items.length) {
          index2 = 0;
        }
        disabled = $items[index2].disabled;
      }
      currentIndex.set(index2);
    }
  });
  afterUpdate(() => {
    if ($currentId) {
      const {index: index2, text} = $items.filter((_) => _.id === $currentId)[0];
      dispatch("close", {index: index2, text});
      open = false;
    }
    if (open) {
      const {width, height} = buttonRef.getBoundingClientRect();
      buttonWidth = width;
      if (!onMountAfterUpdate && $currentIndex < 0) {
        menuRef.focus();
      }
      if (flipped) {
        menuRef.style.left = "auto";
        menuRef.style.right = 0;
      }
      if (direction2 === "top") {
        menuRef.style.top = "auto";
        menuRef.style.bottom = height + "px";
      } else if (direction2 === "bottom") {
        menuRef.style.top = height + "px";
      }
      if (ctxBreadcrumbItem) {
        menuRef.style.top = height + 10 + "px";
        menuRef.style.left = -11 + "px";
      }
    }
    if (!open) {
      items.set([]);
      currentId.set(void 0);
      currentIndex.set(0);
    }
    onMountAfterUpdate = false;
  });
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.direction === void 0 && $$bindings.direction && direction2 !== void 0)
    $$bindings.direction(direction2);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.flipped === void 0 && $$bindings.flipped && flipped !== void 0)
    $$bindings.flipped(flipped);
  if ($$props.menuOptionsClass === void 0 && $$bindings.menuOptionsClass && menuOptionsClass !== void 0)
    $$bindings.menuOptionsClass(menuOptionsClass);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.iconClass === void 0 && $$bindings.iconClass && iconClass !== void 0)
    $$bindings.iconClass(iconClass);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.buttonRef === void 0 && $$bindings.buttonRef && buttonRef !== void 0)
    $$bindings.buttonRef(buttonRef);
  if ($$props.menuRef === void 0 && $$bindings.menuRef && menuRef !== void 0)
    $$bindings.menuRef(menuRef);
  {
    if (ctxBreadcrumbItem) {
      icon = OverflowMenuHorizontal16;
    }
  }
  ariaLabel = $$props["aria-label"] || "menu";
  {
    if ($items[$currentIndex]) {
      focusedId.set($items[$currentIndex].id);
    }
  }
  styles = `<style>
    #${id} .bx--overflow-menu-options.bx--overflow-menu-options:after {
      width: ${buttonWidth ? buttonWidth + "px" : "2rem"};
    }
  </style>`;
  $$unsubscribe_currentIndex();
  $$unsubscribe_items();
  $$unsubscribe_currentId();
  return `${$$result.head += `${styles}`, ""}




<button${spread([
    {type: "button"},
    {"aria-haspopup": true},
    {"aria-expanded": escape(open)},
    {"aria-label": escape(ariaLabel)},
    {id: escape(id)},
    $$restProps
  ], "bx--overflow-menu " + (open ? "bx--overflow-menu--open" : "") + " " + (light ? "bx--overflow-menu--light" : "") + " " + (size === "sm" ? "bx--overflow-menu--sm" : "") + " " + (size === "xl" ? "bx--overflow-menu--xl" : ""))}${add_attribute("this", buttonRef, 1)}>${slots.menu ? slots.menu({}) : `
    ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {
    "aria-label": iconDescription,
    title: iconDescription,
    class: "bx--overflow-menu__icon " + iconClass
  }, {}, {})}
  `}
  ${open ? `<ul role="${"menu"}" tabindex="${"-1"}"${add_attribute("aria-label", ariaLabel, 0)}${add_attribute("data-floating-menu-direction", direction2, 0)} class="${[
    escape(menuOptionsClass),
    "bx--overflow-menu-options " + (flipped ? "bx--overflow-menu--flip" : "") + " " + (open ? "bx--overflow-menu-options--open" : "") + " " + (light ? "bx--overflow-menu-options--light" : "") + " " + (size === "sm" ? "bx--overflow-menu-options--sm" : "") + " " + (size === "xl" ? "bx--overflow-menu-options--xl" : "") + " " + (!!ctxBreadcrumbItem ? "bx--breadcrumb-menu-options" : "")
  ].join(" ").trim()}"${add_attribute("this", menuRef, 1)}>${slots.default ? slots.default({}) : ``}</ul>` : ``}</button>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  const ctx = getContext("Toolbar");
  let menuRef = null;
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    {
      if (menuRef)
        menuRef.style.top = "100%";
    }
    {
      ctx.setOverflowVisible(menuRef != null);
    }
    $$rendered = `${validate_component(OverflowMenu, "OverflowMenu").$$render($$result, Object.assign({icon: Settings16}, $$restProps, {
      class: "bx--toolbar-action bx--overflow-menu " + $$restProps.class
    }, {flipped: true}, {menuRef}), {
      menuRef: ($$value) => {
        menuRef = $$value;
        $$settled = false;
      }
    }, {
      default: () => `${slots.default ? slots.default({}) : ``}`
    })}`;
  } while (!$$settled);
  return $$rendered;
});
const OverflowMenuItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let buttonProps;
  let $$restProps = compute_rest_props($$props, [
    "text",
    "href",
    "primaryFocus",
    "disabled",
    "hasDivider",
    "danger",
    "requireTitle",
    "id",
    "ref"
  ]);
  let $$slots = compute_slots(slots);
  let $focusedId, $$unsubscribe_focusedId;
  let {text = "Provide text"} = $$props;
  let {href = ""} = $$props;
  let {primaryFocus = false} = $$props;
  let {disabled = false} = $$props;
  let {hasDivider = false} = $$props;
  let {danger = false} = $$props;
  let {requireTitle = true} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  const {focusedId, add, update: update2, change} = getContext("OverflowMenu");
  $$unsubscribe_focusedId = subscribe(focusedId, (value) => $focusedId = value);
  add({id, text, primaryFocus, disabled});
  afterUpdate(() => {
    if (ref && primaryFocus) {
      ref.focus();
    }
  });
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.primaryFocus === void 0 && $$bindings.primaryFocus && primaryFocus !== void 0)
    $$bindings.primaryFocus(primaryFocus);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.hasDivider === void 0 && $$bindings.hasDivider && hasDivider !== void 0)
    $$bindings.hasDivider(hasDivider);
  if ($$props.danger === void 0 && $$bindings.danger && danger !== void 0)
    $$bindings.danger(danger);
  if ($$props.requireTitle === void 0 && $$bindings.requireTitle && requireTitle !== void 0)
    $$bindings.requireTitle(requireTitle);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  primaryFocus = $focusedId === id;
  buttonProps = {
    role: "menuitem",
    tabindex: "-1",
    class: "bx--overflow-menu-options__btn",
    disabled: href ? void 0 : disabled,
    href: href ? href : void 0,
    title: requireTitle ? $$slots.default ? void 0 : text : void 0
  };
  $$unsubscribe_focusedId();
  return `<li${spread([{role: "none"}, {id: escape(id)}, $$restProps], "bx--overflow-menu-options__option " + (hasDivider ? "bx--overflow-menu--divider" : "") + " " + (danger ? "bx--overflow-menu-options__option--danger" : "") + " " + (disabled ? "bx--overflow-menu-options__option--disabled" : ""))}>${href ? `
    <a${spread([buttonProps])}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : `
        <div${add_classes(["bx--overflow-menu-options__option-content"].join(" ").trim())}>${escape(text)}</div>
      `}</a>` : `<button${spread([buttonProps])}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : `
        <div${add_classes(["bx--overflow-menu-options__option-content"].join(" ").trim())}>${escape(text)}</div>
      `}</button>`}</li>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `${validate_component(OverflowMenuItem, "OverflowMenuItem").$$render($$result, Object.assign($$restProps), {}, {
    default: () => `${slots.default ? slots.default({}) : ``}`
  })}`;
});
const HOOKS = [
  "onChange",
  "onClose",
  "onDayCreate",
  "onDestroy",
  "onKeyDown",
  "onMonthChange",
  "onOpen",
  "onParseConfig",
  "onReady",
  "onValueUpdate",
  "onYearChange",
  "onPreCalendarPosition"
];
const defaults = {
  _disable: [],
  allowInput: false,
  allowInvalidPreload: false,
  altFormat: "F j, Y",
  altInput: false,
  altInputClass: "form-control input",
  animate: typeof window === "object" && window.navigator.userAgent.indexOf("MSIE") === -1,
  ariaDateFormat: "F j, Y",
  autoFillDefaultTime: true,
  clickOpens: true,
  closeOnSelect: true,
  conjunction: ", ",
  dateFormat: "Y-m-d",
  defaultHour: 12,
  defaultMinute: 0,
  defaultSeconds: 0,
  disable: [],
  disableMobile: false,
  enableSeconds: false,
  enableTime: false,
  errorHandler: (err) => typeof console !== "undefined" && console.warn(err),
  getWeek: (givenDate) => {
    const date = new Date(givenDate.getTime());
    date.setHours(0, 0, 0, 0);
    date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);
    var week1 = new Date(date.getFullYear(), 0, 4);
    return 1 + Math.round(((date.getTime() - week1.getTime()) / 864e5 - 3 + (week1.getDay() + 6) % 7) / 7);
  },
  hourIncrement: 1,
  ignoredFocusElements: [],
  inline: false,
  locale: "default",
  minuteIncrement: 5,
  mode: "single",
  monthSelectorType: "dropdown",
  nextArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",
  noCalendar: false,
  now: new Date(),
  onChange: [],
  onClose: [],
  onDayCreate: [],
  onDestroy: [],
  onKeyDown: [],
  onMonthChange: [],
  onOpen: [],
  onParseConfig: [],
  onReady: [],
  onValueUpdate: [],
  onYearChange: [],
  onPreCalendarPosition: [],
  plugins: [],
  position: "auto",
  positionElement: void 0,
  prevArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",
  shorthandCurrentMonth: false,
  showMonths: 1,
  static: false,
  time_24hr: false,
  weekNumbers: false,
  wrap: false
};
const english = {
  weekdays: {
    shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    longhand: [
      "Sunday",
      "Monday",
      "Tuesday",
      "Wednesday",
      "Thursday",
      "Friday",
      "Saturday"
    ]
  },
  months: {
    shorthand: [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec"
    ],
    longhand: [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July",
      "August",
      "September",
      "October",
      "November",
      "December"
    ]
  },
  daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
  firstDayOfWeek: 0,
  ordinal: (nth) => {
    const s = nth % 100;
    if (s > 3 && s < 21)
      return "th";
    switch (s % 10) {
      case 1:
        return "st";
      case 2:
        return "nd";
      case 3:
        return "rd";
      default:
        return "th";
    }
  },
  rangeSeparator: " to ",
  weekAbbreviation: "Wk",
  scrollTitle: "Scroll to increment",
  toggleTitle: "Click to toggle",
  amPM: ["AM", "PM"],
  yearAriaLabel: "Year",
  monthAriaLabel: "Month",
  hourAriaLabel: "Hour",
  minuteAriaLabel: "Minute",
  time_24hr: false
};
const pad = (number, length = 2) => `000${number}`.slice(length * -1);
const int = (bool) => bool === true ? 1 : 0;
function debounce(fn, wait) {
  let t;
  return function() {
    clearTimeout(t);
    t = setTimeout(() => fn.apply(this, arguments), wait);
  };
}
const arrayify = (obj) => obj instanceof Array ? obj : [obj];
function toggleClass(elem, className, bool) {
  if (bool === true)
    return elem.classList.add(className);
  elem.classList.remove(className);
}
function createElement(tag, className, content) {
  const e = window.document.createElement(tag);
  className = className || "";
  content = content || "";
  e.className = className;
  if (content !== void 0)
    e.textContent = content;
  return e;
}
function clearNode(node) {
  while (node.firstChild)
    node.removeChild(node.firstChild);
}
function findParent(node, condition) {
  if (condition(node))
    return node;
  else if (node.parentNode)
    return findParent(node.parentNode, condition);
  return void 0;
}
function createNumberInput(inputClassName, opts) {
  const wrapper = createElement("div", "numInputWrapper"), numInput = createElement("input", "numInput " + inputClassName), arrowUp = createElement("span", "arrowUp"), arrowDown = createElement("span", "arrowDown");
  if (navigator.userAgent.indexOf("MSIE 9.0") === -1) {
    numInput.type = "number";
  } else {
    numInput.type = "text";
    numInput.pattern = "\\d*";
  }
  if (opts !== void 0)
    for (const key in opts)
      numInput.setAttribute(key, opts[key]);
  wrapper.appendChild(numInput);
  wrapper.appendChild(arrowUp);
  wrapper.appendChild(arrowDown);
  return wrapper;
}
function getEventTarget(event) {
  try {
    if (typeof event.composedPath === "function") {
      const path = event.composedPath();
      return path[0];
    }
    return event.target;
  } catch (error2) {
    return event.target;
  }
}
const doNothing = () => void 0;
const monthToStr = (monthNumber, shorthand, locale) => locale.months[shorthand ? "shorthand" : "longhand"][monthNumber];
const revFormat = {
  D: doNothing,
  F: function(dateObj, monthName, locale) {
    dateObj.setMonth(locale.months.longhand.indexOf(monthName));
  },
  G: (dateObj, hour) => {
    dateObj.setHours(parseFloat(hour));
  },
  H: (dateObj, hour) => {
    dateObj.setHours(parseFloat(hour));
  },
  J: (dateObj, day) => {
    dateObj.setDate(parseFloat(day));
  },
  K: (dateObj, amPM, locale) => {
    dateObj.setHours(dateObj.getHours() % 12 + 12 * int(new RegExp(locale.amPM[1], "i").test(amPM)));
  },
  M: function(dateObj, shortMonth, locale) {
    dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));
  },
  S: (dateObj, seconds) => {
    dateObj.setSeconds(parseFloat(seconds));
  },
  U: (_, unixSeconds) => new Date(parseFloat(unixSeconds) * 1e3),
  W: function(dateObj, weekNum, locale) {
    const weekNumber = parseInt(weekNum);
    const date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);
    date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);
    return date;
  },
  Y: (dateObj, year) => {
    dateObj.setFullYear(parseFloat(year));
  },
  Z: (_, ISODate) => new Date(ISODate),
  d: (dateObj, day) => {
    dateObj.setDate(parseFloat(day));
  },
  h: (dateObj, hour) => {
    dateObj.setHours(parseFloat(hour));
  },
  i: (dateObj, minutes) => {
    dateObj.setMinutes(parseFloat(minutes));
  },
  j: (dateObj, day) => {
    dateObj.setDate(parseFloat(day));
  },
  l: doNothing,
  m: (dateObj, month) => {
    dateObj.setMonth(parseFloat(month) - 1);
  },
  n: (dateObj, month) => {
    dateObj.setMonth(parseFloat(month) - 1);
  },
  s: (dateObj, seconds) => {
    dateObj.setSeconds(parseFloat(seconds));
  },
  u: (_, unixMillSeconds) => new Date(parseFloat(unixMillSeconds)),
  w: doNothing,
  y: (dateObj, year) => {
    dateObj.setFullYear(2e3 + parseFloat(year));
  }
};
const tokenRegex = {
  D: "(\\w+)",
  F: "(\\w+)",
  G: "(\\d\\d|\\d)",
  H: "(\\d\\d|\\d)",
  J: "(\\d\\d|\\d)\\w+",
  K: "",
  M: "(\\w+)",
  S: "(\\d\\d|\\d)",
  U: "(.+)",
  W: "(\\d\\d|\\d)",
  Y: "(\\d{4})",
  Z: "(.+)",
  d: "(\\d\\d|\\d)",
  h: "(\\d\\d|\\d)",
  i: "(\\d\\d|\\d)",
  j: "(\\d\\d|\\d)",
  l: "(\\w+)",
  m: "(\\d\\d|\\d)",
  n: "(\\d\\d|\\d)",
  s: "(\\d\\d|\\d)",
  u: "(.+)",
  w: "(\\d\\d|\\d)",
  y: "(\\d{2})"
};
const formats = {
  Z: (date) => date.toISOString(),
  D: function(date, locale, options2) {
    return locale.weekdays.shorthand[formats.w(date, locale, options2)];
  },
  F: function(date, locale, options2) {
    return monthToStr(formats.n(date, locale, options2) - 1, false, locale);
  },
  G: function(date, locale, options2) {
    return pad(formats.h(date, locale, options2));
  },
  H: (date) => pad(date.getHours()),
  J: function(date, locale) {
    return locale.ordinal !== void 0 ? date.getDate() + locale.ordinal(date.getDate()) : date.getDate();
  },
  K: (date, locale) => locale.amPM[int(date.getHours() > 11)],
  M: function(date, locale) {
    return monthToStr(date.getMonth(), true, locale);
  },
  S: (date) => pad(date.getSeconds()),
  U: (date) => date.getTime() / 1e3,
  W: function(date, _, options2) {
    return options2.getWeek(date);
  },
  Y: (date) => pad(date.getFullYear(), 4),
  d: (date) => pad(date.getDate()),
  h: (date) => date.getHours() % 12 ? date.getHours() % 12 : 12,
  i: (date) => pad(date.getMinutes()),
  j: (date) => date.getDate(),
  l: function(date, locale) {
    return locale.weekdays.longhand[date.getDay()];
  },
  m: (date) => pad(date.getMonth() + 1),
  n: (date) => date.getMonth() + 1,
  s: (date) => date.getSeconds(),
  u: (date) => date.getTime(),
  w: (date) => date.getDay(),
  y: (date) => String(date.getFullYear()).substring(2)
};
const createDateFormatter = ({config = defaults, l10n: l10n2 = english, isMobile = false}) => (dateObj, frmt, overrideLocale) => {
  const locale = overrideLocale || l10n2;
  if (config.formatDate !== void 0 && !isMobile) {
    return config.formatDate(dateObj, frmt, locale);
  }
  return frmt.split("").map((c, i, arr) => formats[c] && arr[i - 1] !== "\\" ? formats[c](dateObj, locale, config) : c !== "\\" ? c : "").join("");
};
const createDateParser = ({config = defaults, l10n: l10n2 = english}) => (date, givenFormat, timeless, customLocale) => {
  if (date !== 0 && !date)
    return void 0;
  const locale = customLocale || l10n2;
  let parsedDate;
  const dateOrig = date;
  if (date instanceof Date)
    parsedDate = new Date(date.getTime());
  else if (typeof date !== "string" && date.toFixed !== void 0)
    parsedDate = new Date(date);
  else if (typeof date === "string") {
    const format = givenFormat || (config || defaults).dateFormat;
    const datestr = String(date).trim();
    if (datestr === "today") {
      parsedDate = new Date();
      timeless = true;
    } else if (/Z$/.test(datestr) || /GMT$/.test(datestr))
      parsedDate = new Date(date);
    else if (config && config.parseDate)
      parsedDate = config.parseDate(date, format);
    else {
      parsedDate = !config || !config.noCalendar ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0) : new Date(new Date().setHours(0, 0, 0, 0));
      let matched, ops = [];
      for (let i = 0, matchIndex = 0, regexStr = ""; i < format.length; i++) {
        const token = format[i];
        const isBackSlash = token === "\\";
        const escaped = format[i - 1] === "\\" || isBackSlash;
        if (tokenRegex[token] && !escaped) {
          regexStr += tokenRegex[token];
          const match = new RegExp(regexStr).exec(date);
          if (match && (matched = true)) {
            ops[token !== "Y" ? "push" : "unshift"]({
              fn: revFormat[token],
              val: match[++matchIndex]
            });
          }
        } else if (!isBackSlash)
          regexStr += ".";
        ops.forEach(({fn, val}) => parsedDate = fn(parsedDate, val, locale) || parsedDate);
      }
      parsedDate = matched ? parsedDate : void 0;
    }
  }
  if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {
    config.errorHandler(new Error(`Invalid date provided: ${dateOrig}`));
    return void 0;
  }
  if (timeless === true)
    parsedDate.setHours(0, 0, 0, 0);
  return parsedDate;
};
function compareDates(date1, date2, timeless = true) {
  if (timeless !== false) {
    return new Date(date1.getTime()).setHours(0, 0, 0, 0) - new Date(date2.getTime()).setHours(0, 0, 0, 0);
  }
  return date1.getTime() - date2.getTime();
}
const isBetween = (ts, ts1, ts2) => {
  return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);
};
const duration = {
  DAY: 864e5
};
function getDefaultHours(config) {
  let hours = config.defaultHour;
  let minutes = config.defaultMinute;
  let seconds = config.defaultSeconds;
  if (config.minDate !== void 0) {
    const minHour = config.minDate.getHours();
    const minMinutes = config.minDate.getMinutes();
    const minSeconds = config.minDate.getSeconds();
    if (hours < minHour) {
      hours = minHour;
    }
    if (hours === minHour && minutes < minMinutes) {
      minutes = minMinutes;
    }
    if (hours === minHour && minutes === minMinutes && seconds < minSeconds)
      seconds = config.minDate.getSeconds();
  }
  if (config.maxDate !== void 0) {
    const maxHr = config.maxDate.getHours();
    const maxMinutes = config.maxDate.getMinutes();
    hours = Math.min(hours, maxHr);
    if (hours === maxHr)
      minutes = Math.min(maxMinutes, minutes);
    if (hours === maxHr && minutes === maxMinutes)
      seconds = config.maxDate.getSeconds();
  }
  return {hours, minutes, seconds};
}
if (typeof Object.assign !== "function") {
  Object.assign = function(target, ...args) {
    if (!target) {
      throw TypeError("Cannot convert undefined or null to object");
    }
    for (const source of args) {
      if (source) {
        Object.keys(source).forEach((key) => target[key] = source[key]);
      }
    }
    return target;
  };
}
const DEBOUNCED_CHANGE_MS = 300;
function FlatpickrInstance(element, instanceConfig) {
  const self = {
    config: Object.assign(Object.assign({}, defaults), flatpickr.defaultConfig),
    l10n: english
  };
  self.parseDate = createDateParser({config: self.config, l10n: self.l10n});
  self._handlers = [];
  self.pluginElements = [];
  self.loadedPlugins = [];
  self._bind = bind;
  self._setHoursFromDate = setHoursFromDate;
  self._positionCalendar = positionCalendar;
  self.changeMonth = changeMonth;
  self.changeYear = changeYear;
  self.clear = clear2;
  self.close = close;
  self._createElement = createElement;
  self.destroy = destroy;
  self.isEnabled = isEnabled;
  self.jumpToDate = jumpToDate;
  self.open = open;
  self.redraw = redraw;
  self.set = set;
  self.setDate = setDate;
  self.toggle = toggle;
  function setupHelperFunctions() {
    self.utils = {
      getDaysInMonth(month = self.currentMonth, yr = self.currentYear) {
        if (month === 1 && (yr % 4 === 0 && yr % 100 !== 0 || yr % 400 === 0))
          return 29;
        return self.l10n.daysInMonth[month];
      }
    };
  }
  function init2() {
    self.element = self.input = element;
    self.isOpen = false;
    parseConfig();
    setupLocale();
    setupInputs();
    setupDates();
    setupHelperFunctions();
    if (!self.isMobile)
      build();
    bindEvents();
    if (self.selectedDates.length || self.config.noCalendar) {
      if (self.config.enableTime) {
        setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : void 0);
      }
      updateValue(false);
    }
    setCalendarWidth();
    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    if (!self.isMobile && isSafari) {
      positionCalendar();
    }
    triggerEvent("onReady");
  }
  function bindToInstance(fn) {
    return fn.bind(self);
  }
  function setCalendarWidth() {
    const config = self.config;
    if (config.weekNumbers === false && config.showMonths === 1) {
      return;
    } else if (config.noCalendar !== true) {
      window.requestAnimationFrame(function() {
        if (self.calendarContainer !== void 0) {
          self.calendarContainer.style.visibility = "hidden";
          self.calendarContainer.style.display = "block";
        }
        if (self.daysContainer !== void 0) {
          const daysWidth = (self.days.offsetWidth + 1) * config.showMonths;
          self.daysContainer.style.width = daysWidth + "px";
          self.calendarContainer.style.width = daysWidth + (self.weekWrapper !== void 0 ? self.weekWrapper.offsetWidth : 0) + "px";
          self.calendarContainer.style.removeProperty("visibility");
          self.calendarContainer.style.removeProperty("display");
        }
      });
    }
  }
  function updateTime(e) {
    if (self.selectedDates.length === 0) {
      const defaultDate = self.config.minDate === void 0 || compareDates(new Date(), self.config.minDate) >= 0 ? new Date() : new Date(self.config.minDate.getTime());
      const defaults2 = getDefaultHours(self.config);
      defaultDate.setHours(defaults2.hours, defaults2.minutes, defaults2.seconds, defaultDate.getMilliseconds());
      self.selectedDates = [defaultDate];
      self.latestSelectedDateObj = defaultDate;
    }
    if (e !== void 0 && e.type !== "blur") {
      timeWrapper(e);
    }
    const prevValue = self._input.value;
    setHoursFromInputs();
    updateValue();
    if (self._input.value !== prevValue) {
      self._debouncedChange();
    }
  }
  function ampm2military(hour, amPM) {
    return hour % 12 + 12 * int(amPM === self.l10n.amPM[1]);
  }
  function military2ampm(hour) {
    switch (hour % 24) {
      case 0:
      case 12:
        return 12;
      default:
        return hour % 12;
    }
  }
  function setHoursFromInputs() {
    if (self.hourElement === void 0 || self.minuteElement === void 0)
      return;
    let hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== void 0 ? (parseInt(self.secondElement.value, 10) || 0) % 60 : 0;
    if (self.amPM !== void 0) {
      hours = ampm2military(hours, self.amPM.textContent);
    }
    const limitMinHours = self.config.minTime !== void 0 || self.config.minDate && self.minDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.minDate, true) === 0;
    const limitMaxHours = self.config.maxTime !== void 0 || self.config.maxDate && self.maxDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.maxDate, true) === 0;
    if (limitMaxHours) {
      const maxTime = self.config.maxTime !== void 0 ? self.config.maxTime : self.config.maxDate;
      hours = Math.min(hours, maxTime.getHours());
      if (hours === maxTime.getHours())
        minutes = Math.min(minutes, maxTime.getMinutes());
      if (minutes === maxTime.getMinutes())
        seconds = Math.min(seconds, maxTime.getSeconds());
    }
    if (limitMinHours) {
      const minTime = self.config.minTime !== void 0 ? self.config.minTime : self.config.minDate;
      hours = Math.max(hours, minTime.getHours());
      if (hours === minTime.getHours() && minutes < minTime.getMinutes())
        minutes = minTime.getMinutes();
      if (minutes === minTime.getMinutes())
        seconds = Math.max(seconds, minTime.getSeconds());
    }
    setHours(hours, minutes, seconds);
  }
  function setHoursFromDate(dateObj) {
    const date = dateObj || self.latestSelectedDateObj;
    if (date) {
      setHours(date.getHours(), date.getMinutes(), date.getSeconds());
    }
  }
  function setHours(hours, minutes, seconds) {
    if (self.latestSelectedDateObj !== void 0) {
      self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);
    }
    if (!self.hourElement || !self.minuteElement || self.isMobile)
      return;
    self.hourElement.value = pad(!self.config.time_24hr ? (12 + hours) % 12 + 12 * int(hours % 12 === 0) : hours);
    self.minuteElement.value = pad(minutes);
    if (self.amPM !== void 0)
      self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];
    if (self.secondElement !== void 0)
      self.secondElement.value = pad(seconds);
  }
  function onYearInput(event) {
    const eventTarget = getEventTarget(event);
    const year = parseInt(eventTarget.value) + (event.delta || 0);
    if (year / 1e3 > 1 || event.key === "Enter" && !/[^\d]/.test(year.toString())) {
      changeYear(year);
    }
  }
  function bind(element2, event, handler, options2) {
    if (event instanceof Array)
      return event.forEach((ev) => bind(element2, ev, handler, options2));
    if (element2 instanceof Array)
      return element2.forEach((el) => bind(el, event, handler, options2));
    element2.addEventListener(event, handler, options2);
    self._handlers.push({
      remove: () => element2.removeEventListener(event, handler)
    });
  }
  function triggerChange() {
    triggerEvent("onChange");
  }
  function bindEvents() {
    if (self.config.wrap) {
      ["open", "close", "toggle", "clear"].forEach((evt) => {
        Array.prototype.forEach.call(self.element.querySelectorAll(`[data-${evt}]`), (el) => bind(el, "click", self[evt]));
      });
    }
    if (self.isMobile) {
      setupMobile();
      return;
    }
    const debouncedResize = debounce(onResize, 50);
    self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);
    if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))
      bind(self.daysContainer, "mouseover", (e) => {
        if (self.config.mode === "range")
          onMouseOver(getEventTarget(e));
      });
    bind(window.document.body, "keydown", onKeyDown);
    if (!self.config.inline && !self.config.static)
      bind(window, "resize", debouncedResize);
    if (window.ontouchstart !== void 0)
      bind(window.document, "touchstart", documentClick);
    else
      bind(window.document, "mousedown", documentClick);
    bind(window.document, "focus", documentClick, {capture: true});
    if (self.config.clickOpens === true) {
      bind(self._input, "focus", self.open);
      bind(self._input, "click", self.open);
    }
    if (self.daysContainer !== void 0) {
      bind(self.monthNav, "click", onMonthNavClick);
      bind(self.monthNav, ["keyup", "increment"], onYearInput);
      bind(self.daysContainer, "click", selectDate);
    }
    if (self.timeContainer !== void 0 && self.minuteElement !== void 0 && self.hourElement !== void 0) {
      const selText = (e) => getEventTarget(e).select();
      bind(self.timeContainer, ["increment"], updateTime);
      bind(self.timeContainer, "blur", updateTime, {capture: true});
      bind(self.timeContainer, "click", timeIncrement);
      bind([self.hourElement, self.minuteElement], ["focus", "click"], selText);
      if (self.secondElement !== void 0)
        bind(self.secondElement, "focus", () => self.secondElement && self.secondElement.select());
      if (self.amPM !== void 0) {
        bind(self.amPM, "click", (e) => {
          updateTime(e);
          triggerChange();
        });
      }
    }
    if (self.config.allowInput) {
      bind(self._input, "blur", onBlur);
    }
  }
  function jumpToDate(jumpDate, triggerChange2) {
    const jumpTo = jumpDate !== void 0 ? self.parseDate(jumpDate) : self.latestSelectedDateObj || (self.config.minDate && self.config.minDate > self.now ? self.config.minDate : self.config.maxDate && self.config.maxDate < self.now ? self.config.maxDate : self.now);
    const oldYear = self.currentYear;
    const oldMonth = self.currentMonth;
    try {
      if (jumpTo !== void 0) {
        self.currentYear = jumpTo.getFullYear();
        self.currentMonth = jumpTo.getMonth();
      }
    } catch (e) {
      e.message = "Invalid date supplied: " + jumpTo;
      self.config.errorHandler(e);
    }
    if (triggerChange2 && self.currentYear !== oldYear) {
      triggerEvent("onYearChange");
      buildMonthSwitch();
    }
    if (triggerChange2 && (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {
      triggerEvent("onMonthChange");
    }
    self.redraw();
  }
  function timeIncrement(e) {
    const eventTarget = getEventTarget(e);
    if (~eventTarget.className.indexOf("arrow"))
      incrementNumInput(e, eventTarget.classList.contains("arrowUp") ? 1 : -1);
  }
  function incrementNumInput(e, delta, inputElem) {
    const target = e && getEventTarget(e);
    const input = inputElem || target && target.parentNode && target.parentNode.firstChild;
    const event = createEvent("increment");
    event.delta = delta;
    input && input.dispatchEvent(event);
  }
  function build() {
    const fragment = window.document.createDocumentFragment();
    self.calendarContainer = createElement("div", "flatpickr-calendar");
    self.calendarContainer.tabIndex = -1;
    if (!self.config.noCalendar) {
      fragment.appendChild(buildMonthNav());
      self.innerContainer = createElement("div", "flatpickr-innerContainer");
      if (self.config.weekNumbers) {
        const {weekWrapper, weekNumbers} = buildWeeks();
        self.innerContainer.appendChild(weekWrapper);
        self.weekNumbers = weekNumbers;
        self.weekWrapper = weekWrapper;
      }
      self.rContainer = createElement("div", "flatpickr-rContainer");
      self.rContainer.appendChild(buildWeekdays());
      if (!self.daysContainer) {
        self.daysContainer = createElement("div", "flatpickr-days");
        self.daysContainer.tabIndex = -1;
      }
      buildDays();
      self.rContainer.appendChild(self.daysContainer);
      self.innerContainer.appendChild(self.rContainer);
      fragment.appendChild(self.innerContainer);
    }
    if (self.config.enableTime) {
      fragment.appendChild(buildTime());
    }
    toggleClass(self.calendarContainer, "rangeMode", self.config.mode === "range");
    toggleClass(self.calendarContainer, "animate", self.config.animate === true);
    toggleClass(self.calendarContainer, "multiMonth", self.config.showMonths > 1);
    self.calendarContainer.appendChild(fragment);
    const customAppend = self.config.appendTo !== void 0 && self.config.appendTo.nodeType !== void 0;
    if (self.config.inline || self.config.static) {
      self.calendarContainer.classList.add(self.config.inline ? "inline" : "static");
      if (self.config.inline) {
        if (!customAppend && self.element.parentNode)
          self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);
        else if (self.config.appendTo !== void 0)
          self.config.appendTo.appendChild(self.calendarContainer);
      }
      if (self.config.static) {
        const wrapper = createElement("div", "flatpickr-wrapper");
        if (self.element.parentNode)
          self.element.parentNode.insertBefore(wrapper, self.element);
        wrapper.appendChild(self.element);
        if (self.altInput)
          wrapper.appendChild(self.altInput);
        wrapper.appendChild(self.calendarContainer);
      }
    }
    if (!self.config.static && !self.config.inline)
      (self.config.appendTo !== void 0 ? self.config.appendTo : window.document.body).appendChild(self.calendarContainer);
  }
  function createDay(className, date, dayNumber, i) {
    const dateIsEnabled = isEnabled(date, true), dayElement = createElement("span", "flatpickr-day " + className, date.getDate().toString());
    dayElement.dateObj = date;
    dayElement.$i = i;
    dayElement.setAttribute("aria-label", self.formatDate(date, self.config.ariaDateFormat));
    if (className.indexOf("hidden") === -1 && compareDates(date, self.now) === 0) {
      self.todayDateElem = dayElement;
      dayElement.classList.add("today");
      dayElement.setAttribute("aria-current", "date");
    }
    if (dateIsEnabled) {
      dayElement.tabIndex = -1;
      if (isDateSelected(date)) {
        dayElement.classList.add("selected");
        self.selectedDateElem = dayElement;
        if (self.config.mode === "range") {
          toggleClass(dayElement, "startRange", self.selectedDates[0] && compareDates(date, self.selectedDates[0], true) === 0);
          toggleClass(dayElement, "endRange", self.selectedDates[1] && compareDates(date, self.selectedDates[1], true) === 0);
          if (className === "nextMonthDay")
            dayElement.classList.add("inRange");
        }
      }
    } else {
      dayElement.classList.add("flatpickr-disabled");
    }
    if (self.config.mode === "range") {
      if (isDateInRange(date) && !isDateSelected(date))
        dayElement.classList.add("inRange");
    }
    if (self.weekNumbers && self.config.showMonths === 1 && className !== "prevMonthDay" && dayNumber % 7 === 1) {
      self.weekNumbers.insertAdjacentHTML("beforeend", "<span class='flatpickr-day'>" + self.config.getWeek(date) + "</span>");
    }
    triggerEvent("onDayCreate", dayElement);
    return dayElement;
  }
  function focusOnDayElem(targetNode) {
    targetNode.focus();
    if (self.config.mode === "range")
      onMouseOver(targetNode);
  }
  function getFirstAvailableDay(delta) {
    const startMonth = delta > 0 ? 0 : self.config.showMonths - 1;
    const endMonth = delta > 0 ? self.config.showMonths : -1;
    for (let m = startMonth; m != endMonth; m += delta) {
      const month = self.daysContainer.children[m];
      const startIndex = delta > 0 ? 0 : month.children.length - 1;
      const endIndex = delta > 0 ? month.children.length : -1;
      for (let i = startIndex; i != endIndex; i += delta) {
        const c = month.children[i];
        if (c.className.indexOf("hidden") === -1 && isEnabled(c.dateObj))
          return c;
      }
    }
    return void 0;
  }
  function getNextAvailableDay(current, delta) {
    const givenMonth = current.className.indexOf("Month") === -1 ? current.dateObj.getMonth() : self.currentMonth;
    const endMonth = delta > 0 ? self.config.showMonths : -1;
    const loopDelta = delta > 0 ? 1 : -1;
    for (let m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {
      const month = self.daysContainer.children[m];
      const startIndex = givenMonth - self.currentMonth === m ? current.$i + delta : delta < 0 ? month.children.length - 1 : 0;
      const numMonthDays = month.children.length;
      for (let i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {
        const c = month.children[i];
        if (c.className.indexOf("hidden") === -1 && isEnabled(c.dateObj) && Math.abs(current.$i - i) >= Math.abs(delta))
          return focusOnDayElem(c);
      }
    }
    self.changeMonth(loopDelta);
    focusOnDay(getFirstAvailableDay(loopDelta), 0);
    return void 0;
  }
  function focusOnDay(current, offset) {
    const dayFocused = isInView(document.activeElement || document.body);
    const startElem = current !== void 0 ? current : dayFocused ? document.activeElement : self.selectedDateElem !== void 0 && isInView(self.selectedDateElem) ? self.selectedDateElem : self.todayDateElem !== void 0 && isInView(self.todayDateElem) ? self.todayDateElem : getFirstAvailableDay(offset > 0 ? 1 : -1);
    if (startElem === void 0) {
      self._input.focus();
    } else if (!dayFocused) {
      focusOnDayElem(startElem);
    } else {
      getNextAvailableDay(startElem, offset);
    }
  }
  function buildMonthDays(year, month) {
    const firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;
    const prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);
    const daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? "prevMonthDay hidden" : "prevMonthDay", nextMonthDayClass = isMultiMonth ? "nextMonthDay hidden" : "nextMonthDay";
    let dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;
    for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {
      days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));
    }
    for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {
      days.appendChild(createDay("", new Date(year, month, dayNumber), dayNumber, dayIndex));
    }
    for (let dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth && (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {
      days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));
    }
    const dayContainer = createElement("div", "dayContainer");
    dayContainer.appendChild(days);
    return dayContainer;
  }
  function buildDays() {
    if (self.daysContainer === void 0) {
      return;
    }
    clearNode(self.daysContainer);
    if (self.weekNumbers)
      clearNode(self.weekNumbers);
    const frag = document.createDocumentFragment();
    for (let i = 0; i < self.config.showMonths; i++) {
      const d2 = new Date(self.currentYear, self.currentMonth, 1);
      d2.setMonth(self.currentMonth + i);
      frag.appendChild(buildMonthDays(d2.getFullYear(), d2.getMonth()));
    }
    self.daysContainer.appendChild(frag);
    self.days = self.daysContainer.firstChild;
    if (self.config.mode === "range" && self.selectedDates.length === 1) {
      onMouseOver();
    }
  }
  function buildMonthSwitch() {
    if (self.config.showMonths > 1 || self.config.monthSelectorType !== "dropdown")
      return;
    const shouldBuildMonth = function(month) {
      if (self.config.minDate !== void 0 && self.currentYear === self.config.minDate.getFullYear() && month < self.config.minDate.getMonth()) {
        return false;
      }
      return !(self.config.maxDate !== void 0 && self.currentYear === self.config.maxDate.getFullYear() && month > self.config.maxDate.getMonth());
    };
    self.monthsDropdownContainer.tabIndex = -1;
    self.monthsDropdownContainer.innerHTML = "";
    for (let i = 0; i < 12; i++) {
      if (!shouldBuildMonth(i))
        continue;
      const month = createElement("option", "flatpickr-monthDropdown-month");
      month.value = new Date(self.currentYear, i).getMonth().toString();
      month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);
      month.tabIndex = -1;
      if (self.currentMonth === i) {
        month.selected = true;
      }
      self.monthsDropdownContainer.appendChild(month);
    }
  }
  function buildMonth() {
    const container = createElement("div", "flatpickr-month");
    const monthNavFragment = window.document.createDocumentFragment();
    let monthElement;
    if (self.config.showMonths > 1 || self.config.monthSelectorType === "static") {
      monthElement = createElement("span", "cur-month");
    } else {
      self.monthsDropdownContainer = createElement("select", "flatpickr-monthDropdown-months");
      self.monthsDropdownContainer.setAttribute("aria-label", self.l10n.monthAriaLabel);
      bind(self.monthsDropdownContainer, "change", (e) => {
        const target = getEventTarget(e);
        const selectedMonth = parseInt(target.value, 10);
        self.changeMonth(selectedMonth - self.currentMonth);
        triggerEvent("onMonthChange");
      });
      buildMonthSwitch();
      monthElement = self.monthsDropdownContainer;
    }
    const yearInput = createNumberInput("cur-year", {tabindex: "-1"});
    const yearElement = yearInput.getElementsByTagName("input")[0];
    yearElement.setAttribute("aria-label", self.l10n.yearAriaLabel);
    if (self.config.minDate) {
      yearElement.setAttribute("min", self.config.minDate.getFullYear().toString());
    }
    if (self.config.maxDate) {
      yearElement.setAttribute("max", self.config.maxDate.getFullYear().toString());
      yearElement.disabled = !!self.config.minDate && self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();
    }
    const currentMonth = createElement("div", "flatpickr-current-month");
    currentMonth.appendChild(monthElement);
    currentMonth.appendChild(yearInput);
    monthNavFragment.appendChild(currentMonth);
    container.appendChild(monthNavFragment);
    return {
      container,
      yearElement,
      monthElement
    };
  }
  function buildMonths() {
    clearNode(self.monthNav);
    self.monthNav.appendChild(self.prevMonthNav);
    if (self.config.showMonths) {
      self.yearElements = [];
      self.monthElements = [];
    }
    for (let m = self.config.showMonths; m--; ) {
      const month = buildMonth();
      self.yearElements.push(month.yearElement);
      self.monthElements.push(month.monthElement);
      self.monthNav.appendChild(month.container);
    }
    self.monthNav.appendChild(self.nextMonthNav);
  }
  function buildMonthNav() {
    self.monthNav = createElement("div", "flatpickr-months");
    self.yearElements = [];
    self.monthElements = [];
    self.prevMonthNav = createElement("span", "flatpickr-prev-month");
    self.prevMonthNav.innerHTML = self.config.prevArrow;
    self.nextMonthNav = createElement("span", "flatpickr-next-month");
    self.nextMonthNav.innerHTML = self.config.nextArrow;
    buildMonths();
    Object.defineProperty(self, "_hidePrevMonthArrow", {
      get: () => self.__hidePrevMonthArrow,
      set(bool) {
        if (self.__hidePrevMonthArrow !== bool) {
          toggleClass(self.prevMonthNav, "flatpickr-disabled", bool);
          self.__hidePrevMonthArrow = bool;
        }
      }
    });
    Object.defineProperty(self, "_hideNextMonthArrow", {
      get: () => self.__hideNextMonthArrow,
      set(bool) {
        if (self.__hideNextMonthArrow !== bool) {
          toggleClass(self.nextMonthNav, "flatpickr-disabled", bool);
          self.__hideNextMonthArrow = bool;
        }
      }
    });
    self.currentYearElement = self.yearElements[0];
    updateNavigationCurrentMonth();
    return self.monthNav;
  }
  function buildTime() {
    self.calendarContainer.classList.add("hasTime");
    if (self.config.noCalendar)
      self.calendarContainer.classList.add("noCalendar");
    const defaults2 = getDefaultHours(self.config);
    self.timeContainer = createElement("div", "flatpickr-time");
    self.timeContainer.tabIndex = -1;
    const separator = createElement("span", "flatpickr-time-separator", ":");
    const hourInput = createNumberInput("flatpickr-hour", {
      "aria-label": self.l10n.hourAriaLabel
    });
    self.hourElement = hourInput.getElementsByTagName("input")[0];
    const minuteInput = createNumberInput("flatpickr-minute", {
      "aria-label": self.l10n.minuteAriaLabel
    });
    self.minuteElement = minuteInput.getElementsByTagName("input")[0];
    self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;
    self.hourElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getHours() : self.config.time_24hr ? defaults2.hours : military2ampm(defaults2.hours));
    self.minuteElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getMinutes() : defaults2.minutes);
    self.hourElement.setAttribute("step", self.config.hourIncrement.toString());
    self.minuteElement.setAttribute("step", self.config.minuteIncrement.toString());
    self.hourElement.setAttribute("min", self.config.time_24hr ? "0" : "1");
    self.hourElement.setAttribute("max", self.config.time_24hr ? "23" : "12");
    self.hourElement.setAttribute("maxlength", "2");
    self.minuteElement.setAttribute("min", "0");
    self.minuteElement.setAttribute("max", "59");
    self.minuteElement.setAttribute("maxlength", "2");
    self.timeContainer.appendChild(hourInput);
    self.timeContainer.appendChild(separator);
    self.timeContainer.appendChild(minuteInput);
    if (self.config.time_24hr)
      self.timeContainer.classList.add("time24hr");
    if (self.config.enableSeconds) {
      self.timeContainer.classList.add("hasSeconds");
      const secondInput = createNumberInput("flatpickr-second");
      self.secondElement = secondInput.getElementsByTagName("input")[0];
      self.secondElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getSeconds() : defaults2.seconds);
      self.secondElement.setAttribute("step", self.minuteElement.getAttribute("step"));
      self.secondElement.setAttribute("min", "0");
      self.secondElement.setAttribute("max", "59");
      self.secondElement.setAttribute("maxlength", "2");
      self.timeContainer.appendChild(createElement("span", "flatpickr-time-separator", ":"));
      self.timeContainer.appendChild(secondInput);
    }
    if (!self.config.time_24hr) {
      self.amPM = createElement("span", "flatpickr-am-pm", self.l10n.amPM[int((self.latestSelectedDateObj ? self.hourElement.value : self.config.defaultHour) > 11)]);
      self.amPM.title = self.l10n.toggleTitle;
      self.amPM.tabIndex = -1;
      self.timeContainer.appendChild(self.amPM);
    }
    return self.timeContainer;
  }
  function buildWeekdays() {
    if (!self.weekdayContainer)
      self.weekdayContainer = createElement("div", "flatpickr-weekdays");
    else
      clearNode(self.weekdayContainer);
    for (let i = self.config.showMonths; i--; ) {
      const container = createElement("div", "flatpickr-weekdaycontainer");
      self.weekdayContainer.appendChild(container);
    }
    updateWeekdays();
    return self.weekdayContainer;
  }
  function updateWeekdays() {
    if (!self.weekdayContainer) {
      return;
    }
    const firstDayOfWeek = self.l10n.firstDayOfWeek;
    let weekdays = [...self.l10n.weekdays.shorthand];
    if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {
      weekdays = [
        ...weekdays.splice(firstDayOfWeek, weekdays.length),
        ...weekdays.splice(0, firstDayOfWeek)
      ];
    }
    for (let i = self.config.showMonths; i--; ) {
      self.weekdayContainer.children[i].innerHTML = `
      <span class='flatpickr-weekday'>
        ${weekdays.join("</span><span class='flatpickr-weekday'>")}
      </span>
      `;
    }
  }
  function buildWeeks() {
    self.calendarContainer.classList.add("hasWeeks");
    const weekWrapper = createElement("div", "flatpickr-weekwrapper");
    weekWrapper.appendChild(createElement("span", "flatpickr-weekday", self.l10n.weekAbbreviation));
    const weekNumbers = createElement("div", "flatpickr-weeks");
    weekWrapper.appendChild(weekNumbers);
    return {
      weekWrapper,
      weekNumbers
    };
  }
  function changeMonth(value, isOffset = true) {
    const delta = isOffset ? value : value - self.currentMonth;
    if (delta < 0 && self._hidePrevMonthArrow === true || delta > 0 && self._hideNextMonthArrow === true)
      return;
    self.currentMonth += delta;
    if (self.currentMonth < 0 || self.currentMonth > 11) {
      self.currentYear += self.currentMonth > 11 ? 1 : -1;
      self.currentMonth = (self.currentMonth + 12) % 12;
      triggerEvent("onYearChange");
      buildMonthSwitch();
    }
    buildDays();
    triggerEvent("onMonthChange");
    updateNavigationCurrentMonth();
  }
  function clear2(triggerChangeEvent = true, toInitial = true) {
    self.input.value = "";
    if (self.altInput !== void 0)
      self.altInput.value = "";
    if (self.mobileInput !== void 0)
      self.mobileInput.value = "";
    self.selectedDates = [];
    self.latestSelectedDateObj = void 0;
    if (toInitial === true) {
      self.currentYear = self._initialDate.getFullYear();
      self.currentMonth = self._initialDate.getMonth();
    }
    if (self.config.enableTime === true) {
      const {hours, minutes, seconds} = getDefaultHours(self.config);
      setHours(hours, minutes, seconds);
    }
    self.redraw();
    if (triggerChangeEvent)
      triggerEvent("onChange");
  }
  function close() {
    self.isOpen = false;
    if (!self.isMobile) {
      if (self.calendarContainer !== void 0) {
        self.calendarContainer.classList.remove("open");
      }
      if (self._input !== void 0) {
        self._input.classList.remove("active");
      }
    }
    triggerEvent("onClose");
  }
  function destroy() {
    if (self.config !== void 0)
      triggerEvent("onDestroy");
    for (let i = self._handlers.length; i--; ) {
      self._handlers[i].remove();
    }
    self._handlers = [];
    if (self.mobileInput) {
      if (self.mobileInput.parentNode)
        self.mobileInput.parentNode.removeChild(self.mobileInput);
      self.mobileInput = void 0;
    } else if (self.calendarContainer && self.calendarContainer.parentNode) {
      if (self.config.static && self.calendarContainer.parentNode) {
        const wrapper = self.calendarContainer.parentNode;
        wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);
        if (wrapper.parentNode) {
          while (wrapper.firstChild)
            wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);
          wrapper.parentNode.removeChild(wrapper);
        }
      } else
        self.calendarContainer.parentNode.removeChild(self.calendarContainer);
    }
    if (self.altInput) {
      self.input.type = "text";
      if (self.altInput.parentNode)
        self.altInput.parentNode.removeChild(self.altInput);
      delete self.altInput;
    }
    if (self.input) {
      self.input.type = self.input._type;
      self.input.classList.remove("flatpickr-input");
      self.input.removeAttribute("readonly");
    }
    [
      "_showTimeInput",
      "latestSelectedDateObj",
      "_hideNextMonthArrow",
      "_hidePrevMonthArrow",
      "__hideNextMonthArrow",
      "__hidePrevMonthArrow",
      "isMobile",
      "isOpen",
      "selectedDateElem",
      "minDateHasTime",
      "maxDateHasTime",
      "days",
      "daysContainer",
      "_input",
      "_positionElement",
      "innerContainer",
      "rContainer",
      "monthNav",
      "todayDateElem",
      "calendarContainer",
      "weekdayContainer",
      "prevMonthNav",
      "nextMonthNav",
      "monthsDropdownContainer",
      "currentMonthElement",
      "currentYearElement",
      "navigationCurrentMonth",
      "selectedDateElem",
      "config"
    ].forEach((k) => {
      try {
        delete self[k];
      } catch (_) {
      }
    });
  }
  function isCalendarElem(elem) {
    if (self.config.appendTo && self.config.appendTo.contains(elem))
      return true;
    return self.calendarContainer.contains(elem);
  }
  function documentClick(e) {
    if (self.isOpen && !self.config.inline) {
      const eventTarget = getEventTarget(e);
      const isCalendarElement = isCalendarElem(eventTarget);
      const isInput = eventTarget === self.input || eventTarget === self.altInput || self.element.contains(eventTarget) || e.path && e.path.indexOf && (~e.path.indexOf(self.input) || ~e.path.indexOf(self.altInput));
      const lostFocus = e.type === "blur" ? isInput && e.relatedTarget && !isCalendarElem(e.relatedTarget) : !isInput && !isCalendarElement && !isCalendarElem(e.relatedTarget);
      const isIgnored = !self.config.ignoredFocusElements.some((elem) => elem.contains(eventTarget));
      if (lostFocus && isIgnored) {
        if (self.timeContainer !== void 0 && self.minuteElement !== void 0 && self.hourElement !== void 0 && self.input.value !== "" && self.input.value !== void 0) {
          updateTime();
        }
        self.close();
        if (self.config && self.config.mode === "range" && self.selectedDates.length === 1) {
          self.clear(false);
          self.redraw();
        }
      }
    }
  }
  function changeYear(newYear) {
    if (!newYear || self.config.minDate && newYear < self.config.minDate.getFullYear() || self.config.maxDate && newYear > self.config.maxDate.getFullYear())
      return;
    const newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;
    self.currentYear = newYearNum || self.currentYear;
    if (self.config.maxDate && self.currentYear === self.config.maxDate.getFullYear()) {
      self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);
    } else if (self.config.minDate && self.currentYear === self.config.minDate.getFullYear()) {
      self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);
    }
    if (isNewYear) {
      self.redraw();
      triggerEvent("onYearChange");
      buildMonthSwitch();
    }
  }
  function isEnabled(date, timeless = true) {
    var _a;
    const dateToCheck = self.parseDate(date, void 0, timeless);
    if (self.config.minDate && dateToCheck && compareDates(dateToCheck, self.config.minDate, timeless !== void 0 ? timeless : !self.minDateHasTime) < 0 || self.config.maxDate && dateToCheck && compareDates(dateToCheck, self.config.maxDate, timeless !== void 0 ? timeless : !self.maxDateHasTime) > 0)
      return false;
    if (!self.config.enable && self.config.disable.length === 0)
      return true;
    if (dateToCheck === void 0)
      return false;
    const bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;
    for (let i = 0, d2; i < array.length; i++) {
      d2 = array[i];
      if (typeof d2 === "function" && d2(dateToCheck))
        return bool;
      else if (d2 instanceof Date && dateToCheck !== void 0 && d2.getTime() === dateToCheck.getTime())
        return bool;
      else if (typeof d2 === "string") {
        const parsed = self.parseDate(d2, void 0, true);
        return parsed && parsed.getTime() === dateToCheck.getTime() ? bool : !bool;
      } else if (typeof d2 === "object" && dateToCheck !== void 0 && d2.from && d2.to && dateToCheck.getTime() >= d2.from.getTime() && dateToCheck.getTime() <= d2.to.getTime())
        return bool;
    }
    return !bool;
  }
  function isInView(elem) {
    if (self.daysContainer !== void 0)
      return elem.className.indexOf("hidden") === -1 && elem.className.indexOf("flatpickr-disabled") === -1 && self.daysContainer.contains(elem);
    return false;
  }
  function onBlur(e) {
    const isInput = e.target === self._input;
    if (isInput && (self.selectedDates.length > 0 || self._input.value.length > 0) && !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {
      self.setDate(self._input.value, true, e.target === self.altInput ? self.config.altFormat : self.config.dateFormat);
    }
  }
  function onKeyDown(e) {
    const eventTarget = getEventTarget(e);
    const isInput = self.config.wrap ? element.contains(eventTarget) : eventTarget === self._input;
    const allowInput = self.config.allowInput;
    const allowKeydown = self.isOpen && (!allowInput || !isInput);
    const allowInlineKeydown = self.config.inline && isInput && !allowInput;
    if (e.keyCode === 13 && isInput) {
      if (allowInput) {
        self.setDate(self._input.value, true, eventTarget === self.altInput ? self.config.altFormat : self.config.dateFormat);
        return eventTarget.blur();
      } else {
        self.open();
      }
    } else if (isCalendarElem(eventTarget) || allowKeydown || allowInlineKeydown) {
      const isTimeObj = !!self.timeContainer && self.timeContainer.contains(eventTarget);
      switch (e.keyCode) {
        case 13:
          if (isTimeObj) {
            e.preventDefault();
            updateTime();
            focusAndClose();
          } else
            selectDate(e);
          break;
        case 27:
          e.preventDefault();
          focusAndClose();
          break;
        case 8:
        case 46:
          if (isInput && !self.config.allowInput) {
            e.preventDefault();
            self.clear();
          }
          break;
        case 37:
        case 39:
          if (!isTimeObj && !isInput) {
            e.preventDefault();
            if (self.daysContainer !== void 0 && (allowInput === false || document.activeElement && isInView(document.activeElement))) {
              const delta2 = e.keyCode === 39 ? 1 : -1;
              if (!e.ctrlKey)
                focusOnDay(void 0, delta2);
              else {
                e.stopPropagation();
                changeMonth(delta2);
                focusOnDay(getFirstAvailableDay(1), 0);
              }
            }
          } else if (self.hourElement)
            self.hourElement.focus();
          break;
        case 38:
        case 40:
          e.preventDefault();
          const delta = e.keyCode === 40 ? 1 : -1;
          if (self.daysContainer && eventTarget.$i !== void 0 || eventTarget === self.input || eventTarget === self.altInput) {
            if (e.ctrlKey) {
              e.stopPropagation();
              changeYear(self.currentYear - delta);
              focusOnDay(getFirstAvailableDay(1), 0);
            } else if (!isTimeObj)
              focusOnDay(void 0, delta * 7);
          } else if (eventTarget === self.currentYearElement) {
            changeYear(self.currentYear - delta);
          } else if (self.config.enableTime) {
            if (!isTimeObj && self.hourElement)
              self.hourElement.focus();
            updateTime(e);
            self._debouncedChange();
          }
          break;
        case 9:
          if (isTimeObj) {
            const elems = [
              self.hourElement,
              self.minuteElement,
              self.secondElement,
              self.amPM
            ].concat(self.pluginElements).filter((x) => x);
            const i = elems.indexOf(eventTarget);
            if (i !== -1) {
              const target = elems[i + (e.shiftKey ? -1 : 1)];
              e.preventDefault();
              (target || self._input).focus();
            }
          } else if (!self.config.noCalendar && self.daysContainer && self.daysContainer.contains(eventTarget) && e.shiftKey) {
            e.preventDefault();
            self._input.focus();
          }
          break;
      }
    }
    if (self.amPM !== void 0 && eventTarget === self.amPM) {
      switch (e.key) {
        case self.l10n.amPM[0].charAt(0):
        case self.l10n.amPM[0].charAt(0).toLowerCase():
          self.amPM.textContent = self.l10n.amPM[0];
          setHoursFromInputs();
          updateValue();
          break;
        case self.l10n.amPM[1].charAt(0):
        case self.l10n.amPM[1].charAt(0).toLowerCase():
          self.amPM.textContent = self.l10n.amPM[1];
          setHoursFromInputs();
          updateValue();
          break;
      }
    }
    if (isInput || isCalendarElem(eventTarget)) {
      triggerEvent("onKeyDown", e);
    }
  }
  function onMouseOver(elem) {
    if (self.selectedDates.length !== 1 || elem && (!elem.classList.contains("flatpickr-day") || elem.classList.contains("flatpickr-disabled")))
      return;
    const hoverDate = elem ? elem.dateObj.getTime() : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], void 0, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());
    let containsDisabled = false;
    let minRange = 0, maxRange = 0;
    for (let t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {
      if (!isEnabled(new Date(t), true)) {
        containsDisabled = containsDisabled || t > rangeStartDate && t < rangeEndDate;
        if (t < initialDate && (!minRange || t > minRange))
          minRange = t;
        else if (t > initialDate && (!maxRange || t < maxRange))
          maxRange = t;
      }
    }
    for (let m = 0; m < self.config.showMonths; m++) {
      const month = self.daysContainer.children[m];
      for (let i = 0, l = month.children.length; i < l; i++) {
        const dayElem = month.children[i], date = dayElem.dateObj;
        const timestamp = date.getTime();
        const outOfRange = minRange > 0 && timestamp < minRange || maxRange > 0 && timestamp > maxRange;
        if (outOfRange) {
          dayElem.classList.add("notAllowed");
          ["inRange", "startRange", "endRange"].forEach((c) => {
            dayElem.classList.remove(c);
          });
          continue;
        } else if (containsDisabled && !outOfRange)
          continue;
        ["startRange", "inRange", "endRange", "notAllowed"].forEach((c) => {
          dayElem.classList.remove(c);
        });
        if (elem !== void 0) {
          elem.classList.add(hoverDate <= self.selectedDates[0].getTime() ? "startRange" : "endRange");
          if (initialDate < hoverDate && timestamp === initialDate)
            dayElem.classList.add("startRange");
          else if (initialDate > hoverDate && timestamp === initialDate)
            dayElem.classList.add("endRange");
          if (timestamp >= minRange && (maxRange === 0 || timestamp <= maxRange) && isBetween(timestamp, initialDate, hoverDate))
            dayElem.classList.add("inRange");
        }
      }
    }
  }
  function onResize() {
    if (self.isOpen && !self.config.static && !self.config.inline)
      positionCalendar();
  }
  function open(e, positionElement = self._positionElement) {
    if (self.isMobile === true) {
      if (e) {
        e.preventDefault();
        const eventTarget = getEventTarget(e);
        if (eventTarget) {
          eventTarget.blur();
        }
      }
      if (self.mobileInput !== void 0) {
        self.mobileInput.focus();
        self.mobileInput.click();
      }
      triggerEvent("onOpen");
      return;
    } else if (self._input.disabled || self.config.inline) {
      return;
    }
    const wasOpen = self.isOpen;
    self.isOpen = true;
    if (!wasOpen) {
      self.calendarContainer.classList.add("open");
      self._input.classList.add("active");
      triggerEvent("onOpen");
      positionCalendar(positionElement);
    }
    if (self.config.enableTime === true && self.config.noCalendar === true) {
      if (self.config.allowInput === false && (e === void 0 || !self.timeContainer.contains(e.relatedTarget))) {
        setTimeout(() => self.hourElement.select(), 50);
      }
    }
  }
  function minMaxDateSetter(type) {
    return (date) => {
      const dateObj = self.config[`_${type}Date`] = self.parseDate(date, self.config.dateFormat);
      const inverseDateObj = self.config[`_${type === "min" ? "max" : "min"}Date`];
      if (dateObj !== void 0) {
        self[type === "min" ? "minDateHasTime" : "maxDateHasTime"] = dateObj.getHours() > 0 || dateObj.getMinutes() > 0 || dateObj.getSeconds() > 0;
      }
      if (self.selectedDates) {
        self.selectedDates = self.selectedDates.filter((d2) => isEnabled(d2));
        if (!self.selectedDates.length && type === "min")
          setHoursFromDate(dateObj);
        updateValue();
      }
      if (self.daysContainer) {
        redraw();
        if (dateObj !== void 0)
          self.currentYearElement[type] = dateObj.getFullYear().toString();
        else
          self.currentYearElement.removeAttribute(type);
        self.currentYearElement.disabled = !!inverseDateObj && dateObj !== void 0 && inverseDateObj.getFullYear() === dateObj.getFullYear();
      }
    };
  }
  function parseConfig() {
    const boolOpts = [
      "wrap",
      "weekNumbers",
      "allowInput",
      "allowInvalidPreload",
      "clickOpens",
      "time_24hr",
      "enableTime",
      "noCalendar",
      "altInput",
      "shorthandCurrentMonth",
      "inline",
      "static",
      "enableSeconds",
      "disableMobile"
    ];
    const userConfig = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);
    const formats2 = {};
    self.config.parseDate = userConfig.parseDate;
    self.config.formatDate = userConfig.formatDate;
    Object.defineProperty(self.config, "enable", {
      get: () => self.config._enable,
      set: (dates) => {
        self.config._enable = parseDateRules(dates);
      }
    });
    Object.defineProperty(self.config, "disable", {
      get: () => self.config._disable,
      set: (dates) => {
        self.config._disable = parseDateRules(dates);
      }
    });
    const timeMode = userConfig.mode === "time";
    if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {
      const defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaults.dateFormat;
      formats2.dateFormat = userConfig.noCalendar || timeMode ? "H:i" + (userConfig.enableSeconds ? ":S" : "") : defaultDateFormat + " H:i" + (userConfig.enableSeconds ? ":S" : "");
    }
    if (userConfig.altInput && (userConfig.enableTime || timeMode) && !userConfig.altFormat) {
      const defaultAltFormat = flatpickr.defaultConfig.altFormat || defaults.altFormat;
      formats2.altFormat = userConfig.noCalendar || timeMode ? "h:i" + (userConfig.enableSeconds ? ":S K" : " K") : defaultAltFormat + ` h:i${userConfig.enableSeconds ? ":S" : ""} K`;
    }
    Object.defineProperty(self.config, "minDate", {
      get: () => self.config._minDate,
      set: minMaxDateSetter("min")
    });
    Object.defineProperty(self.config, "maxDate", {
      get: () => self.config._maxDate,
      set: minMaxDateSetter("max")
    });
    const minMaxTimeSetter = (type) => (val) => {
      self.config[type === "min" ? "_minTime" : "_maxTime"] = self.parseDate(val, "H:i:S");
    };
    Object.defineProperty(self.config, "minTime", {
      get: () => self.config._minTime,
      set: minMaxTimeSetter("min")
    });
    Object.defineProperty(self.config, "maxTime", {
      get: () => self.config._maxTime,
      set: minMaxTimeSetter("max")
    });
    if (userConfig.mode === "time") {
      self.config.noCalendar = true;
      self.config.enableTime = true;
    }
    Object.assign(self.config, formats2, userConfig);
    for (let i = 0; i < boolOpts.length; i++)
      self.config[boolOpts[i]] = self.config[boolOpts[i]] === true || self.config[boolOpts[i]] === "true";
    HOOKS.filter((hook) => self.config[hook] !== void 0).forEach((hook) => {
      self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);
    });
    self.isMobile = !self.config.disableMobile && !self.config.inline && self.config.mode === "single" && !self.config.disable.length && !self.config.enable && !self.config.weekNumbers && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    for (let i = 0; i < self.config.plugins.length; i++) {
      const pluginConf = self.config.plugins[i](self) || {};
      for (const key in pluginConf) {
        if (HOOKS.indexOf(key) > -1) {
          self.config[key] = arrayify(pluginConf[key]).map(bindToInstance).concat(self.config[key]);
        } else if (typeof userConfig[key] === "undefined")
          self.config[key] = pluginConf[key];
      }
    }
    if (!userConfig.altInputClass) {
      self.config.altInputClass = getInputElem().className + " " + self.config.altInputClass;
    }
    triggerEvent("onParseConfig");
  }
  function getInputElem() {
    return self.config.wrap ? element.querySelector("[data-input]") : element;
  }
  function setupLocale() {
    if (typeof self.config.locale !== "object" && typeof flatpickr.l10ns[self.config.locale] === "undefined")
      self.config.errorHandler(new Error(`flatpickr: invalid locale ${self.config.locale}`));
    self.l10n = Object.assign(Object.assign({}, flatpickr.l10ns.default), typeof self.config.locale === "object" ? self.config.locale : self.config.locale !== "default" ? flatpickr.l10ns[self.config.locale] : void 0);
    tokenRegex.K = `(${self.l10n.amPM[0]}|${self.l10n.amPM[1]}|${self.l10n.amPM[0].toLowerCase()}|${self.l10n.amPM[1].toLowerCase()})`;
    const userConfig = Object.assign(Object.assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));
    if (userConfig.time_24hr === void 0 && flatpickr.defaultConfig.time_24hr === void 0) {
      self.config.time_24hr = self.l10n.time_24hr;
    }
    self.formatDate = createDateFormatter(self);
    self.parseDate = createDateParser({config: self.config, l10n: self.l10n});
  }
  function positionCalendar(customPositionElement) {
    if (typeof self.config.position === "function") {
      return void self.config.position(self, customPositionElement);
    }
    if (self.calendarContainer === void 0)
      return;
    triggerEvent("onPreCalendarPosition");
    const positionElement = customPositionElement || self._positionElement;
    const calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, (acc, child) => acc + child.offsetHeight, 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(" "), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === "above" || configPosVertical !== "below" && distanceFromBottom < calendarHeight && inputBounds.top > calendarHeight;
    const top = window.pageYOffset + inputBounds.top + (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);
    toggleClass(self.calendarContainer, "arrowTop", !showOnTop);
    toggleClass(self.calendarContainer, "arrowBottom", showOnTop);
    if (self.config.inline)
      return;
    let left = window.pageXOffset + inputBounds.left;
    let isCenter = false;
    let isRight = false;
    if (configPosHorizontal === "center") {
      left -= (calendarWidth - inputBounds.width) / 2;
      isCenter = true;
    } else if (configPosHorizontal === "right") {
      left -= calendarWidth - inputBounds.width;
      isRight = true;
    }
    toggleClass(self.calendarContainer, "arrowLeft", !isCenter && !isRight);
    toggleClass(self.calendarContainer, "arrowCenter", isCenter);
    toggleClass(self.calendarContainer, "arrowRight", isRight);
    const right = window.document.body.offsetWidth - (window.pageXOffset + inputBounds.right);
    const rightMost = left + calendarWidth > window.document.body.offsetWidth;
    const centerMost = right + calendarWidth > window.document.body.offsetWidth;
    toggleClass(self.calendarContainer, "rightMost", rightMost);
    if (self.config.static)
      return;
    self.calendarContainer.style.top = `${top}px`;
    if (!rightMost) {
      self.calendarContainer.style.left = `${left}px`;
      self.calendarContainer.style.right = "auto";
    } else if (!centerMost) {
      self.calendarContainer.style.left = "auto";
      self.calendarContainer.style.right = `${right}px`;
    } else {
      const doc = getDocumentStyleSheet();
      if (doc === void 0)
        return;
      const bodyWidth = window.document.body.offsetWidth;
      const centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);
      const centerBefore = ".flatpickr-calendar.centerMost:before";
      const centerAfter = ".flatpickr-calendar.centerMost:after";
      const centerIndex = doc.cssRules.length;
      const centerStyle = `{left:${inputBounds.left}px;right:auto;}`;
      toggleClass(self.calendarContainer, "rightMost", false);
      toggleClass(self.calendarContainer, "centerMost", true);
      doc.insertRule(`${centerBefore},${centerAfter}${centerStyle}`, centerIndex);
      self.calendarContainer.style.left = `${centerLeft}px`;
      self.calendarContainer.style.right = "auto";
    }
  }
  function getDocumentStyleSheet() {
    let editableSheet = null;
    for (let i = 0; i < document.styleSheets.length; i++) {
      const sheet = document.styleSheets[i];
      try {
        sheet.cssRules;
      } catch (err) {
        continue;
      }
      editableSheet = sheet;
      break;
    }
    return editableSheet != null ? editableSheet : createStyleSheet();
  }
  function createStyleSheet() {
    const style2 = document.createElement("style");
    document.head.appendChild(style2);
    return style2.sheet;
  }
  function redraw() {
    if (self.config.noCalendar || self.isMobile)
      return;
    buildMonthSwitch();
    updateNavigationCurrentMonth();
    buildDays();
  }
  function focusAndClose() {
    self._input.focus();
    if (window.navigator.userAgent.indexOf("MSIE") !== -1 || navigator.msMaxTouchPoints !== void 0) {
      setTimeout(self.close, 0);
    } else {
      self.close();
    }
  }
  function selectDate(e) {
    e.preventDefault();
    e.stopPropagation();
    const isSelectable = (day) => day.classList && day.classList.contains("flatpickr-day") && !day.classList.contains("flatpickr-disabled") && !day.classList.contains("notAllowed");
    const t = findParent(getEventTarget(e), isSelectable);
    if (t === void 0)
      return;
    const target = t;
    const selectedDate = self.latestSelectedDateObj = new Date(target.dateObj.getTime());
    const shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth || selectedDate.getMonth() > self.currentMonth + self.config.showMonths - 1) && self.config.mode !== "range";
    self.selectedDateElem = target;
    if (self.config.mode === "single")
      self.selectedDates = [selectedDate];
    else if (self.config.mode === "multiple") {
      const selectedIndex = isDateSelected(selectedDate);
      if (selectedIndex)
        self.selectedDates.splice(parseInt(selectedIndex), 1);
      else
        self.selectedDates.push(selectedDate);
    } else if (self.config.mode === "range") {
      if (self.selectedDates.length === 2) {
        self.clear(false, false);
      }
      self.latestSelectedDateObj = selectedDate;
      self.selectedDates.push(selectedDate);
      if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)
        self.selectedDates.sort((a, b) => a.getTime() - b.getTime());
    }
    setHoursFromInputs();
    if (shouldChangeMonth) {
      const isNewYear = self.currentYear !== selectedDate.getFullYear();
      self.currentYear = selectedDate.getFullYear();
      self.currentMonth = selectedDate.getMonth();
      if (isNewYear) {
        triggerEvent("onYearChange");
        buildMonthSwitch();
      }
      triggerEvent("onMonthChange");
    }
    updateNavigationCurrentMonth();
    buildDays();
    updateValue();
    if (!shouldChangeMonth && self.config.mode !== "range" && self.config.showMonths === 1)
      focusOnDayElem(target);
    else if (self.selectedDateElem !== void 0 && self.hourElement === void 0) {
      self.selectedDateElem && self.selectedDateElem.focus();
    }
    if (self.hourElement !== void 0)
      self.hourElement !== void 0 && self.hourElement.focus();
    if (self.config.closeOnSelect) {
      const single = self.config.mode === "single" && !self.config.enableTime;
      const range = self.config.mode === "range" && self.selectedDates.length === 2 && !self.config.enableTime;
      if (single || range) {
        focusAndClose();
      }
    }
    triggerChange();
  }
  const CALLBACKS = {
    locale: [setupLocale, updateWeekdays],
    showMonths: [buildMonths, setCalendarWidth, buildWeekdays],
    minDate: [jumpToDate],
    maxDate: [jumpToDate],
    clickOpens: [
      () => {
        if (self.config.clickOpens === true) {
          bind(self._input, "focus", self.open);
          bind(self._input, "click", self.open);
        } else {
          self._input.removeEventListener("focus", self.open);
          self._input.removeEventListener("click", self.open);
        }
      }
    ]
  };
  function set(option, value) {
    if (option !== null && typeof option === "object") {
      Object.assign(self.config, option);
      for (const key in option) {
        if (CALLBACKS[key] !== void 0)
          CALLBACKS[key].forEach((x) => x());
      }
    } else {
      self.config[option] = value;
      if (CALLBACKS[option] !== void 0)
        CALLBACKS[option].forEach((x) => x());
      else if (HOOKS.indexOf(option) > -1)
        self.config[option] = arrayify(value);
    }
    self.redraw();
    updateValue(true);
  }
  function setSelectedDate(inputDate, format) {
    let dates = [];
    if (inputDate instanceof Array)
      dates = inputDate.map((d2) => self.parseDate(d2, format));
    else if (inputDate instanceof Date || typeof inputDate === "number")
      dates = [self.parseDate(inputDate, format)];
    else if (typeof inputDate === "string") {
      switch (self.config.mode) {
        case "single":
        case "time":
          dates = [self.parseDate(inputDate, format)];
          break;
        case "multiple":
          dates = inputDate.split(self.config.conjunction).map((date) => self.parseDate(date, format));
          break;
        case "range":
          dates = inputDate.split(self.l10n.rangeSeparator).map((date) => self.parseDate(date, format));
          break;
      }
    } else
      self.config.errorHandler(new Error(`Invalid date supplied: ${JSON.stringify(inputDate)}`));
    self.selectedDates = self.config.allowInvalidPreload ? dates : dates.filter((d2) => d2 instanceof Date && isEnabled(d2, false));
    if (self.config.mode === "range")
      self.selectedDates.sort((a, b) => a.getTime() - b.getTime());
  }
  function setDate(date, triggerChange2 = false, format = self.config.dateFormat) {
    if (date !== 0 && !date || date instanceof Array && date.length === 0)
      return self.clear(triggerChange2);
    setSelectedDate(date, format);
    self.latestSelectedDateObj = self.selectedDates[self.selectedDates.length - 1];
    self.redraw();
    jumpToDate(void 0, triggerChange2);
    setHoursFromDate();
    if (self.selectedDates.length === 0) {
      self.clear(false);
    }
    updateValue(triggerChange2);
    if (triggerChange2)
      triggerEvent("onChange");
  }
  function parseDateRules(arr) {
    return arr.slice().map((rule) => {
      if (typeof rule === "string" || typeof rule === "number" || rule instanceof Date) {
        return self.parseDate(rule, void 0, true);
      } else if (rule && typeof rule === "object" && rule.from && rule.to)
        return {
          from: self.parseDate(rule.from, void 0),
          to: self.parseDate(rule.to, void 0)
        };
      return rule;
    }).filter((x) => x);
  }
  function setupDates() {
    self.selectedDates = [];
    self.now = self.parseDate(self.config.now) || new Date();
    const preloadedDate = self.config.defaultDate || ((self.input.nodeName === "INPUT" || self.input.nodeName === "TEXTAREA") && self.input.placeholder && self.input.value === self.input.placeholder ? null : self.input.value);
    if (preloadedDate)
      setSelectedDate(preloadedDate, self.config.dateFormat);
    self._initialDate = self.selectedDates.length > 0 ? self.selectedDates[0] : self.config.minDate && self.config.minDate.getTime() > self.now.getTime() ? self.config.minDate : self.config.maxDate && self.config.maxDate.getTime() < self.now.getTime() ? self.config.maxDate : self.now;
    self.currentYear = self._initialDate.getFullYear();
    self.currentMonth = self._initialDate.getMonth();
    if (self.selectedDates.length > 0)
      self.latestSelectedDateObj = self.selectedDates[0];
    if (self.config.minTime !== void 0)
      self.config.minTime = self.parseDate(self.config.minTime, "H:i");
    if (self.config.maxTime !== void 0)
      self.config.maxTime = self.parseDate(self.config.maxTime, "H:i");
    self.minDateHasTime = !!self.config.minDate && (self.config.minDate.getHours() > 0 || self.config.minDate.getMinutes() > 0 || self.config.minDate.getSeconds() > 0);
    self.maxDateHasTime = !!self.config.maxDate && (self.config.maxDate.getHours() > 0 || self.config.maxDate.getMinutes() > 0 || self.config.maxDate.getSeconds() > 0);
  }
  function setupInputs() {
    self.input = getInputElem();
    if (!self.input) {
      self.config.errorHandler(new Error("Invalid input element specified"));
      return;
    }
    self.input._type = self.input.type;
    self.input.type = "text";
    self.input.classList.add("flatpickr-input");
    self._input = self.input;
    if (self.config.altInput) {
      self.altInput = createElement(self.input.nodeName, self.config.altInputClass);
      self._input = self.altInput;
      self.altInput.placeholder = self.input.placeholder;
      self.altInput.disabled = self.input.disabled;
      self.altInput.required = self.input.required;
      self.altInput.tabIndex = self.input.tabIndex;
      self.altInput.type = "text";
      self.input.setAttribute("type", "hidden");
      if (!self.config.static && self.input.parentNode)
        self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);
    }
    if (!self.config.allowInput)
      self._input.setAttribute("readonly", "readonly");
    self._positionElement = self.config.positionElement || self._input;
  }
  function setupMobile() {
    const inputType = self.config.enableTime ? self.config.noCalendar ? "time" : "datetime-local" : "date";
    self.mobileInput = createElement("input", self.input.className + " flatpickr-mobile");
    self.mobileInput.tabIndex = 1;
    self.mobileInput.type = inputType;
    self.mobileInput.disabled = self.input.disabled;
    self.mobileInput.required = self.input.required;
    self.mobileInput.placeholder = self.input.placeholder;
    self.mobileFormatStr = inputType === "datetime-local" ? "Y-m-d\\TH:i:S" : inputType === "date" ? "Y-m-d" : "H:i:S";
    if (self.selectedDates.length > 0) {
      self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);
    }
    if (self.config.minDate)
      self.mobileInput.min = self.formatDate(self.config.minDate, "Y-m-d");
    if (self.config.maxDate)
      self.mobileInput.max = self.formatDate(self.config.maxDate, "Y-m-d");
    if (self.input.getAttribute("step"))
      self.mobileInput.step = String(self.input.getAttribute("step"));
    self.input.type = "hidden";
    if (self.altInput !== void 0)
      self.altInput.type = "hidden";
    try {
      if (self.input.parentNode)
        self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);
    } catch (_a) {
    }
    bind(self.mobileInput, "change", (e) => {
      self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);
      triggerEvent("onChange");
      triggerEvent("onClose");
    });
  }
  function toggle(e) {
    if (self.isOpen === true)
      return self.close();
    self.open(e);
  }
  function triggerEvent(event, data2) {
    if (self.config === void 0)
      return;
    const hooks = self.config[event];
    if (hooks !== void 0 && hooks.length > 0) {
      for (let i = 0; hooks[i] && i < hooks.length; i++)
        hooks[i](self.selectedDates, self.input.value, self, data2);
    }
    if (event === "onChange") {
      self.input.dispatchEvent(createEvent("change"));
      self.input.dispatchEvent(createEvent("input"));
    }
  }
  function createEvent(name) {
    const e = document.createEvent("Event");
    e.initEvent(name, true, true);
    return e;
  }
  function isDateSelected(date) {
    for (let i = 0; i < self.selectedDates.length; i++) {
      if (compareDates(self.selectedDates[i], date) === 0)
        return "" + i;
    }
    return false;
  }
  function isDateInRange(date) {
    if (self.config.mode !== "range" || self.selectedDates.length < 2)
      return false;
    return compareDates(date, self.selectedDates[0]) >= 0 && compareDates(date, self.selectedDates[1]) <= 0;
  }
  function updateNavigationCurrentMonth() {
    if (self.config.noCalendar || self.isMobile || !self.monthNav)
      return;
    self.yearElements.forEach((yearElement, i) => {
      const d2 = new Date(self.currentYear, self.currentMonth, 1);
      d2.setMonth(self.currentMonth + i);
      if (self.config.showMonths > 1 || self.config.monthSelectorType === "static") {
        self.monthElements[i].textContent = monthToStr(d2.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + " ";
      } else {
        self.monthsDropdownContainer.value = d2.getMonth().toString();
      }
      yearElement.value = d2.getFullYear().toString();
    });
    self._hidePrevMonthArrow = self.config.minDate !== void 0 && (self.currentYear === self.config.minDate.getFullYear() ? self.currentMonth <= self.config.minDate.getMonth() : self.currentYear < self.config.minDate.getFullYear());
    self._hideNextMonthArrow = self.config.maxDate !== void 0 && (self.currentYear === self.config.maxDate.getFullYear() ? self.currentMonth + 1 > self.config.maxDate.getMonth() : self.currentYear > self.config.maxDate.getFullYear());
  }
  function getDateStr(format) {
    return self.selectedDates.map((dObj) => self.formatDate(dObj, format)).filter((d2, i, arr) => self.config.mode !== "range" || self.config.enableTime || arr.indexOf(d2) === i).join(self.config.mode !== "range" ? self.config.conjunction : self.l10n.rangeSeparator);
  }
  function updateValue(triggerChange2 = true) {
    if (self.mobileInput !== void 0 && self.mobileFormatStr) {
      self.mobileInput.value = self.latestSelectedDateObj !== void 0 ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr) : "";
    }
    self.input.value = getDateStr(self.config.dateFormat);
    if (self.altInput !== void 0) {
      self.altInput.value = getDateStr(self.config.altFormat);
    }
    if (triggerChange2 !== false)
      triggerEvent("onValueUpdate");
  }
  function onMonthNavClick(e) {
    const eventTarget = getEventTarget(e);
    const isPrevMonth = self.prevMonthNav.contains(eventTarget);
    const isNextMonth = self.nextMonthNav.contains(eventTarget);
    if (isPrevMonth || isNextMonth) {
      changeMonth(isPrevMonth ? -1 : 1);
    } else if (self.yearElements.indexOf(eventTarget) >= 0) {
      eventTarget.select();
    } else if (eventTarget.classList.contains("arrowUp")) {
      self.changeYear(self.currentYear + 1);
    } else if (eventTarget.classList.contains("arrowDown")) {
      self.changeYear(self.currentYear - 1);
    }
  }
  function timeWrapper(e) {
    e.preventDefault();
    const isKeyDown = e.type === "keydown", eventTarget = getEventTarget(e), input = eventTarget;
    if (self.amPM !== void 0 && eventTarget === self.amPM) {
      self.amPM.textContent = self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];
    }
    const min = parseFloat(input.getAttribute("min")), max = parseFloat(input.getAttribute("max")), step = parseFloat(input.getAttribute("step")), curValue = parseInt(input.value, 10), delta = e.delta || (isKeyDown ? e.which === 38 ? 1 : -1 : 0);
    let newValue = curValue + step * delta;
    if (typeof input.value !== "undefined" && input.value.length === 2) {
      const isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;
      if (newValue < min) {
        newValue = max + newValue + int(!isHourElem) + (int(isHourElem) && int(!self.amPM));
        if (isMinuteElem)
          incrementNumInput(void 0, -1, self.hourElement);
      } else if (newValue > max) {
        newValue = input === self.hourElement ? newValue - max - int(!self.amPM) : min;
        if (isMinuteElem)
          incrementNumInput(void 0, 1, self.hourElement);
      }
      if (self.amPM && isHourElem && (step === 1 ? newValue + curValue === 23 : Math.abs(newValue - curValue) > step)) {
        self.amPM.textContent = self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];
      }
      input.value = pad(newValue);
    }
  }
  init2();
  return self;
}
function _flatpickr(nodeList, config) {
  const nodes = Array.prototype.slice.call(nodeList).filter((x) => x instanceof HTMLElement);
  const instances = [];
  for (let i = 0; i < nodes.length; i++) {
    const node = nodes[i];
    try {
      if (node.getAttribute("data-fp-omit") !== null)
        continue;
      if (node._flatpickr !== void 0) {
        node._flatpickr.destroy();
        node._flatpickr = void 0;
      }
      node._flatpickr = FlatpickrInstance(node, config || {});
      instances.push(node._flatpickr);
    } catch (e) {
      console.error(e);
    }
  }
  return instances.length === 1 ? instances[0] : instances;
}
if (typeof HTMLElement !== "undefined" && typeof HTMLCollection !== "undefined" && typeof NodeList !== "undefined") {
  HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function(config) {
    return _flatpickr(this, config);
  };
  HTMLElement.prototype.flatpickr = function(config) {
    return _flatpickr([this], config);
  };
}
var flatpickr = function(selector, config) {
  if (typeof selector === "string") {
    return _flatpickr(window.document.querySelectorAll(selector), config);
  } else if (selector instanceof Node) {
    return _flatpickr([selector], config);
  } else {
    return _flatpickr(selector, config);
  }
};
flatpickr.defaultConfig = {};
flatpickr.l10ns = {
  en: Object.assign({}, english),
  default: Object.assign({}, english)
};
flatpickr.localize = (l10n2) => {
  flatpickr.l10ns.default = Object.assign(Object.assign({}, flatpickr.l10ns.default), l10n2);
};
flatpickr.setDefaults = (config) => {
  flatpickr.defaultConfig = Object.assign(Object.assign({}, flatpickr.defaultConfig), config);
};
flatpickr.parseDate = createDateParser({});
flatpickr.formatDate = createDateFormatter({});
flatpickr.compareDates = compareDates;
if (typeof jQuery !== "undefined" && typeof jQuery.fn !== "undefined") {
  jQuery.fn.flatpickr = function(config) {
    return _flatpickr(this, config);
  };
}
Date.prototype.fp_incr = function(days) {
  return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === "string" ? parseInt(days, 10) : days));
};
if (typeof window !== "undefined") {
  window.flatpickr = flatpickr;
}
let l10n;
function updateClasses(instance) {
  const {
    calendarContainer,
    days,
    daysContainer,
    weekdayContainer,
    selectedDates
  } = instance;
  calendarContainer.classList.add("bx--date-picker__calendar");
  calendarContainer.querySelector(".flatpickr-month").classList.add("bx--date-picker__month");
  weekdayContainer.classList.add("bx--date-picker__weekdays");
  weekdayContainer.querySelectorAll(".flatpickr-weekday").forEach((node) => {
    node.classList.add("bx--date-picker__weekday");
  });
  daysContainer.classList.add("bx--date-picker__days");
  days.querySelectorAll(".flatpickr-day").forEach((node) => {
    node.classList.add("bx--date-picker__day");
    if (node.classList.contains("today") && selectedDates.length > 0) {
      node.classList.add("no-border");
    } else if (node.classList.contains("today") && selectedDates.length === 0) {
      node.classList.remove("no-border");
    }
  });
}
function updateMonthNode(instance) {
  const monthText = instance.l10n.months.longhand[instance.currentMonth];
  const staticMonthNode = instance.monthNav.querySelector(".cur-month");
  if (staticMonthNode) {
    staticMonthNode.textContent = monthText;
  } else {
    const monthSelectNode = instance.monthsDropdownContainer;
    const span = document.createElement("span");
    span.setAttribute("class", "cur-month");
    span.textContent = monthText;
    monthSelectNode.parentNode.replaceChild(span, monthSelectNode);
  }
}
async function createCalendar({options: options2, base, input, dispatch}) {
  let locale = options2.locale;
  if (options2.locale === "en" && l10n && l10n.en) {
    l10n.en.weekdays.shorthand.forEach((_, index2) => {
      const shorthand = _.slice(0, 2);
      l10n.en.weekdays.shorthand[index2] = shorthand === "Th" ? "Th" : shorthand.charAt(0);
    });
    locale = l10n.en;
  }
  let rangePlugin2;
  if (options2.mode === "range") {
    const importee = await Promise.resolve().then(function() {
      return rangePlugin$1;
    });
    rangePlugin2 = importee.default;
  }
  return new flatpickr(base, {
    allowInput: true,
    disableMobile: true,
    clickOpens: true,
    locale,
    plugins: [
      options2.mode === "range" && new rangePlugin2({position: "left", input})
    ].filter(Boolean),
    nextArrow: '<svg width="16px" height="16px" viewBox="0 0 16 16"><polygon points="11,8 6,13 5.3,12.3 9.6,8 5.3,3.7 6,3 "/><rect width="16" height="16" style="fill: none" /></svg>',
    prevArrow: '<svg width="16px" height="16px" viewBox="0 0 16 16"><polygon points="5,8 10,3 10.7,3.7 6.4,8 10.7,12.3 10,13 "/><rect width="16" height="16" style="fill: none" /></svg>',
    onChange: () => {
      dispatch("change");
    },
    onClose: () => {
      dispatch("close");
    },
    onMonthChange: (s, d2, instance) => {
      updateMonthNode(instance);
    },
    onOpen: (s, d2, instance) => {
      dispatch("open");
      updateClasses(instance);
      updateMonthNode(instance);
    },
    ...options2
  });
}
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "datePickerType",
    "value",
    "valueFrom",
    "valueTo",
    "dateFormat",
    "maxDate",
    "minDate",
    "locale",
    "short",
    "light",
    "id",
    "flatpickrProps"
  ]);
  let $inputIds, $$unsubscribe_inputIds;
  let $inputValue, $$unsubscribe_inputValue;
  let $mode, $$unsubscribe_mode;
  let $range, $$unsubscribe_range;
  let $inputValueFrom, $$unsubscribe_inputValueFrom;
  let $inputValueTo, $$unsubscribe_inputValueTo;
  let $hasCalendar, $$unsubscribe_hasCalendar;
  let $labelTextEmpty, $$unsubscribe_labelTextEmpty;
  let {datePickerType = "simple"} = $$props;
  let {value = ""} = $$props;
  let {valueFrom = ""} = $$props;
  let {valueTo = ""} = $$props;
  let {dateFormat = "m/d/Y"} = $$props;
  let {maxDate = null} = $$props;
  let {minDate = null} = $$props;
  let {locale = "en"} = $$props;
  let {short = false} = $$props;
  let {light = false} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {flatpickrProps = {}} = $$props;
  const dispatch = createEventDispatcher();
  const inputs = writable([]);
  const inputIds = derived(inputs, (_) => _.map(({id: id2}) => id2));
  $$unsubscribe_inputIds = subscribe(inputIds, (value2) => $inputIds = value2);
  const labelTextEmpty = derived(inputs, (_) => _.filter(({labelText}) => !!labelText).length === 0);
  $$unsubscribe_labelTextEmpty = subscribe(labelTextEmpty, (value2) => $labelTextEmpty = value2);
  const inputValue = writable(value);
  $$unsubscribe_inputValue = subscribe(inputValue, (value2) => $inputValue = value2);
  const inputValueFrom = writable(valueFrom);
  $$unsubscribe_inputValueFrom = subscribe(inputValueFrom, (value2) => $inputValueFrom = value2);
  const inputValueTo = writable(valueTo);
  $$unsubscribe_inputValueTo = subscribe(inputValueTo, (value2) => $inputValueTo = value2);
  const mode = writable(datePickerType);
  $$unsubscribe_mode = subscribe(mode, (value2) => $mode = value2);
  const range = derived(mode, (_) => _ === "range");
  $$unsubscribe_range = subscribe(range, (value2) => $range = value2);
  const hasCalendar = derived(mode, (_) => _ === "single" || _ === "range");
  $$unsubscribe_hasCalendar = subscribe(hasCalendar, (value2) => $hasCalendar = value2);
  let calendar = null;
  let datePickerRef = null;
  let inputRef = null;
  let inputRefTo = null;
  setContext("DatePicker", {
    range,
    inputValue,
    inputValueFrom,
    inputValueTo,
    inputIds,
    hasCalendar,
    add: (data2) => {
      inputs.update((_) => [..._, data2]);
    },
    declareRef: ({id: id2, ref}) => {
      if ($inputIds.indexOf(id2) === 0) {
        inputRef = ref;
      } else {
        inputRefTo = ref;
      }
    },
    updateValue: ({type, value: value2}) => {
      if (!calendar && type === "input" || type === "change") {
        inputValue.set(value2);
      }
      if (!calendar && type === "change") {
        dispatch("change", value2);
      }
    },
    blurInput: (relatedTarget) => {
      if (calendar && !calendar.calendarContainer.contains(relatedTarget)) {
        calendar.close();
      }
    },
    openCalendar: () => {
      calendar.open();
    },
    focusCalendar: () => {
      (calendar.selectedDateElem || calendar.todayDateElem || calendar.calendarContainer.querySelector(".flatpickr-day[tabindex]") || calendar.calendarContainer).focus();
    }
  });
  async function initCalendar(options2) {
    if (calendar) {
      calendar.set("minDate", minDate);
      calendar.set("maxDate", maxDate);
      calendar.set("locale", locale);
      calendar.set("dateFormat", dateFormat);
      Object.entries(flatpickrProps).forEach(([option, value2]) => {
        calendar.set(options2, value2);
      });
      return;
    }
    calendar = await createCalendar({
      options: {
        ...options2,
        appendTo: datePickerRef,
        defaultDate: $inputValue,
        mode: $mode
      },
      base: inputRef,
      input: inputRefTo,
      dispatch: (event) => {
        const detail = {selectedDates: calendar.selectedDates};
        if ($range) {
          const from = inputRef.value;
          const to = inputRefTo.value;
          detail.dateStr = {
            from: inputRef.value,
            to: inputRefTo.value
          };
          valueFrom = from;
          valueTo = to;
        } else {
          detail.dateStr = inputRef.value;
        }
        return dispatch(event, detail);
      }
    });
  }
  onMount(() => {
    return () => {
      if (calendar) {
        calendar.destroy();
        calendar = null;
      }
    };
  });
  afterUpdate(() => {
    if (calendar) {
      if ($range) {
        calendar.setDate([$inputValueFrom, $inputValueTo]);
        inputRef.value = $inputValueFrom;
      } else {
        calendar.setDate($inputValue);
      }
    }
  });
  if ($$props.datePickerType === void 0 && $$bindings.datePickerType && datePickerType !== void 0)
    $$bindings.datePickerType(datePickerType);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.valueFrom === void 0 && $$bindings.valueFrom && valueFrom !== void 0)
    $$bindings.valueFrom(valueFrom);
  if ($$props.valueTo === void 0 && $$bindings.valueTo && valueTo !== void 0)
    $$bindings.valueTo(valueTo);
  if ($$props.dateFormat === void 0 && $$bindings.dateFormat && dateFormat !== void 0)
    $$bindings.dateFormat(dateFormat);
  if ($$props.maxDate === void 0 && $$bindings.maxDate && maxDate !== void 0)
    $$bindings.maxDate(maxDate);
  if ($$props.minDate === void 0 && $$bindings.minDate && minDate !== void 0)
    $$bindings.minDate(minDate);
  if ($$props.locale === void 0 && $$bindings.locale && locale !== void 0)
    $$bindings.locale(locale);
  if ($$props.short === void 0 && $$bindings.short && short !== void 0)
    $$bindings.short(short);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.flatpickrProps === void 0 && $$bindings.flatpickrProps && flatpickrProps !== void 0)
    $$bindings.flatpickrProps(flatpickrProps);
  value = $inputValue;
  {
    inputValue.set(value);
  }
  valueFrom = $inputValueFrom;
  {
    inputValueFrom.set(valueFrom);
  }
  valueTo = $inputValueTo;
  {
    inputValueTo.set(valueTo);
  }
  {
    if ($hasCalendar && inputRef) {
      initCalendar({
        dateFormat,
        locale,
        maxDate,
        minDate,
        ...flatpickrProps
      });
    }
  }
  $$unsubscribe_inputIds();
  $$unsubscribe_inputValue();
  $$unsubscribe_mode();
  $$unsubscribe_range();
  $$unsubscribe_inputValueFrom();
  $$unsubscribe_inputValueTo();
  $$unsubscribe_hasCalendar();
  $$unsubscribe_labelTextEmpty();
  return `


<div${spread([$$restProps], "bx--form-item")}><div${add_attribute("id", id, 0)} class="${[
    escape(datePickerType && `bx--date-picker--${datePickerType}`) + "\n      " + escape(datePickerType === "range" && $labelTextEmpty && "bx--date-picker--nolabel"),
    "bx--date-picker " + (short ? "bx--date-picker--short" : "") + " " + (light ? "bx--date-picker--light" : "")
  ].join(" ").trim()}"${add_attribute("this", datePickerRef, 1)}>${slots.default ? slots.default({}) : ``}</div></div>`;
});
const Calendar16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Calendar16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M26,4h-4V2h-2v2h-8V2h-2v2H6C4.9,4,4,4.9,4,6v20c0,1.1,0.9,2,2,2h20c1.1,0,2-0.9,2-2V6C28,4.9,27.1,4,26,4z M26,26H6V12h20	V26z M26,10H6V6h4v2h2V6h8v2h2V6h4V10z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "size",
    "type",
    "placeholder",
    "pattern",
    "disabled",
    "helperText",
    "iconDescription",
    "id",
    "labelText",
    "hideLabel",
    "invalid",
    "invalidText",
    "warn",
    "warnText",
    "name",
    "ref"
  ]);
  let $$slots = compute_slots(slots);
  let $range, $$unsubscribe_range;
  let $inputIds, $$unsubscribe_inputIds;
  let $inputValueFrom, $$unsubscribe_inputValueFrom;
  let $inputValueTo, $$unsubscribe_inputValueTo;
  let $inputValue, $$unsubscribe_inputValue;
  let $hasCalendar, $$unsubscribe_hasCalendar;
  let {size = void 0} = $$props;
  let {type = "text"} = $$props;
  let {placeholder = ""} = $$props;
  let {pattern = "\\d{1,2}\\/\\d{1,2}\\/\\d{4}"} = $$props;
  let {disabled = false} = $$props;
  let {helperText = ""} = $$props;
  let {iconDescription = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {labelText = ""} = $$props;
  let {hideLabel = false} = $$props;
  let {invalid = false} = $$props;
  let {invalidText = ""} = $$props;
  let {warn = false} = $$props;
  let {warnText = ""} = $$props;
  let {name = void 0} = $$props;
  let {ref = null} = $$props;
  const {range, add, hasCalendar, declareRef, inputIds, updateValue, blurInput, openCalendar, focusCalendar, inputValue, inputValueFrom, inputValueTo} = getContext("DatePicker");
  $$unsubscribe_range = subscribe(range, (value) => $range = value);
  $$unsubscribe_hasCalendar = subscribe(hasCalendar, (value) => $hasCalendar = value);
  $$unsubscribe_inputIds = subscribe(inputIds, (value) => $inputIds = value);
  $$unsubscribe_inputValue = subscribe(inputValue, (value) => $inputValue = value);
  $$unsubscribe_inputValueFrom = subscribe(inputValueFrom, (value) => $inputValueFrom = value);
  $$unsubscribe_inputValueTo = subscribe(inputValueTo, (value) => $inputValueTo = value);
  add({id, labelText});
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0)
    $$bindings.placeholder(placeholder);
  if ($$props.pattern === void 0 && $$bindings.pattern && pattern !== void 0)
    $$bindings.pattern(pattern);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.helperText === void 0 && $$bindings.helperText && helperText !== void 0)
    $$bindings.helperText(helperText);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.invalidText === void 0 && $$bindings.invalidText && invalidText !== void 0)
    $$bindings.invalidText(invalidText);
  if ($$props.warn === void 0 && $$bindings.warn && warn !== void 0)
    $$bindings.warn(warn);
  if ($$props.warnText === void 0 && $$bindings.warnText && warnText !== void 0)
    $$bindings.warnText(warnText);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  {
    if (ref)
      declareRef({id, ref});
  }
  $$unsubscribe_range();
  $$unsubscribe_inputIds();
  $$unsubscribe_inputValueFrom();
  $$unsubscribe_inputValueTo();
  $$unsubscribe_inputValue();
  $$unsubscribe_hasCalendar();
  return `<div${add_classes([
    "bx--date-picker-container " + (!labelText ? "bx--date-picker--nolabel" : "")
  ].join(" ").trim())}>${labelText || $$slots.labelText ? `<label${add_attribute("for", id, 0)}${add_classes([
    "bx--label " + (hideLabel ? "bx--visually-hidden" : "") + " " + (disabled ? "bx--label--disabled" : "")
  ].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
        ${escape(labelText)}
      `}</label>` : ``}
  <div${add_classes([
    "bx--date-picker-input__wrapper " + (invalid ? "bx--date-picker-input__wrapper--invalid" : "") + " " + (warn ? "bx--date-picker-input__wrapper--warn" : "")
  ].join(" ").trim())}><input${spread([
    {
      "data-invalid": escape(invalid || void 0)
    },
    {id: escape(id)},
    {name: escape(name)},
    {placeholder: escape(placeholder)},
    {type: escape(type)},
    {pattern: escape(pattern)},
    {disabled: disabled || null},
    $$restProps,
    {
      value: escape($range ? $inputIds.indexOf(id) === 0 ? $inputValueFrom : $inputValueTo : $inputValue)
    },
    {
      class: escape(size && `bx--date-picker__input--${size}`)
    }
  ], "bx--date-picker__input " + (invalid ? "bx--date-picker__input--invalid" : ""))}${add_attribute("this", ref, 1)}>
    ${!$hasCalendar ? `${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {
    class: "bx--date-picker__icon bx--date-picker__icon--invalid"
  }, {}, {})}` : ``}
      ${!invalid && warn ? `${validate_component(WarningAltFilled16, "WarningAltFilled16").$$render($$result, {
    class: "bx--date-picker__icon bx--date-picker__icon--warn"
  }, {}, {})}` : ``}` : ``}
    ${$hasCalendar ? `${validate_component(Calendar16, "Calendar16").$$render($$result, {
    role: "img",
    class: "bx--date-picker__icon",
    "aria-label": iconDescription,
    title: iconDescription
  }, {}, {})}` : ``}</div>
  ${invalid ? `<div${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(invalidText)}</div>` : ``}
  ${!invalid && warn ? `<div${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(warnText)}</div>` : ``}
  ${helperText ? `<div${add_classes([
    "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "")
  ].join(" ").trim())}>${escape(helperText)}</div>` : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["range", "id"]);
  let {range = false} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  if ($$props.range === void 0 && $$bindings.range && range !== void 0)
    $$bindings.range(range);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  return `
<div${spread([$$restProps], "bx--form-item")}><div${add_classes([
    "bx--date-picker bx--skeleton bx--date-picker--range " + (!range ? "bx--date-picker--short" : "") + " " + (!range ? "bx--date-picker--simple" : "")
  ].join(" ").trim())}>${each(Array.from({length: range ? 2 : 1}, (_, i) => i), (input, i) => `<div${add_classes(["bx--date-picker-container"].join(" ").trim())}><label${add_attribute("for", id, 0)}${add_classes(["bx--label"].join(" ").trim())}></label>
        <div${add_classes(["bx--date-picker__input bx--skeleton"].join(" ").trim())}></div>
      </div>`)}</div></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let selectedItem;
  let $$restProps = compute_rest_props($$props, [
    "items",
    "itemToString",
    "selectedId",
    "type",
    "direction",
    "size",
    "open",
    "inline",
    "light",
    "disabled",
    "titleText",
    "invalid",
    "invalidText",
    "warn",
    "warnText",
    "helperText",
    "label",
    "hideLabel",
    "translateWithId",
    "id",
    "name",
    "ref"
  ]);
  let {items = []} = $$props;
  let {itemToString = (item) => item.text || item.id} = $$props;
  let {selectedId = void 0} = $$props;
  let {type = "default"} = $$props;
  let {direction: direction2 = "bottom"} = $$props;
  let {size = void 0} = $$props;
  let {open = false} = $$props;
  let {inline = false} = $$props;
  let {light = false} = $$props;
  let {disabled = false} = $$props;
  let {titleText = ""} = $$props;
  let {invalid = false} = $$props;
  let {invalidText = ""} = $$props;
  let {warn = false} = $$props;
  let {warnText = ""} = $$props;
  let {helperText = ""} = $$props;
  let {label = void 0} = $$props;
  let {hideLabel = false} = $$props;
  let {translateWithId = void 0} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  let {ref = null} = $$props;
  const dispatch = createEventDispatcher();
  let highlightedIndex = -1;
  if ($$props.items === void 0 && $$bindings.items && items !== void 0)
    $$bindings.items(items);
  if ($$props.itemToString === void 0 && $$bindings.itemToString && itemToString !== void 0)
    $$bindings.itemToString(itemToString);
  if ($$props.selectedId === void 0 && $$bindings.selectedId && selectedId !== void 0)
    $$bindings.selectedId(selectedId);
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  if ($$props.direction === void 0 && $$bindings.direction && direction2 !== void 0)
    $$bindings.direction(direction2);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.inline === void 0 && $$bindings.inline && inline !== void 0)
    $$bindings.inline(inline);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.titleText === void 0 && $$bindings.titleText && titleText !== void 0)
    $$bindings.titleText(titleText);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.invalidText === void 0 && $$bindings.invalidText && invalidText !== void 0)
    $$bindings.invalidText(invalidText);
  if ($$props.warn === void 0 && $$bindings.warn && warn !== void 0)
    $$bindings.warn(warn);
  if ($$props.warnText === void 0 && $$bindings.warnText && warnText !== void 0)
    $$bindings.warnText(warnText);
  if ($$props.helperText === void 0 && $$bindings.helperText && helperText !== void 0)
    $$bindings.helperText(helperText);
  if ($$props.label === void 0 && $$bindings.label && label !== void 0)
    $$bindings.label(label);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.translateWithId === void 0 && $$bindings.translateWithId && translateWithId !== void 0)
    $$bindings.translateWithId(translateWithId);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  selectedItem = items.find((item) => item.id === selectedId);
  {
    if (selectedId !== void 0) {
      dispatch("select", {selectedId, selectedItem});
    }
  }
  inline = type === "inline";
  {
    if (!open) {
      highlightedIndex = -1;
    }
  }
  return `

<div${spread([$$restProps], "bx--dropdown__wrapper bx--list-box__wrapper " + (inline ? "bx--dropdown__wrapper--inline" : "") + " " + (inline ? "bx--list-box__wrapper--inline" : "") + " " + (inline && invalid ? "bx--dropdown__wrapper--inline--invalid" : ""))}>${titleText ? `<label${add_attribute("for", id, 0)}${add_classes([
    "bx--label " + (disabled ? "bx--label--disabled" : "") + " " + (hideLabel ? "bx--visually-hidden" : "")
  ].join(" ").trim())}>${escape(titleText)}</label>` : ``}
  ${validate_component(ListBox, "ListBox").$$render($$result, {
    type,
    size,
    id,
    name,
    "aria-label": $$props["aria-label"],
    class: "bx--dropdown " + (direction2 === "top" && "bx--list-box--up") + " " + (invalid && "bx--dropdown--invalid") + " " + (!invalid && warn && "bx--dropdown--warning") + " " + (open && "bx--dropdown--open") + "\n      " + (size === "sm" && "bx--dropdown--sm") + "\n      " + (size === "xl" && "bx--dropdown--xl") + "\n      " + (inline && "bx--dropdown--inline") + "\n      " + (disabled && "bx--dropdown--disabled") + "\n      " + (light && "bx--dropdown--light"),
    disabled,
    open,
    invalid,
    invalidText,
    light,
    warn,
    warnText
  }, {}, {
    default: () => `${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {class: "bx--list-box__invalid-icon"}, {}, {})}` : ``}
    ${!invalid && warn ? `${validate_component(WarningAltFilled16, "WarningAltFilled16").$$render($$result, {
      class: "bx--list-box__invalid-icon bx--list-box__invalid-icon--warning"
    }, {}, {})}` : ``}
    <button tabindex="${"0"}"${add_attribute("aria-expanded", open, 0)} ${disabled ? "disabled" : ""}${add_attribute("translateWithId", translateWithId, 0)}${add_attribute("id", id, 0)}${add_classes(["bx--list-box__field"].join(" ").trim())}${add_attribute("this", ref, 1)}><span class="${"bx--list-box__label"}">${selectedItem ? `${escape(itemToString(selectedItem))}` : `${escape(label)}`}</span>
      ${validate_component(ListBoxMenuIcon, "ListBoxMenuIcon").$$render($$result, {translateWithId, open}, {}, {})}</button>
    ${open ? `${validate_component(ListBoxMenu, "ListBoxMenu").$$render($$result, {"aria-labelledby": id, id}, {}, {
      default: () => `${each(items, (item, i) => `${validate_component(ListBoxMenuItem, "ListBoxMenuItem").$$render($$result, {
        id: item.id,
        active: selectedId === item.id,
        highlighted: highlightedIndex === i || selectedId === item.id
      }, {}, {
        default: () => `${slots.default ? slots.default({item, index: i}) : `
              ${escape(itemToString(item))}
            `}
          `
      })}`)}`
    })}` : ``}`
  })}
  ${!inline && !invalid && !warn && helperText ? `<div${add_classes([
    "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "")
  ].join(" ").trim())}>${escape(helperText)}</div>` : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["inline"]);
  let {inline = false} = $$props;
  if ($$props.inline === void 0 && $$bindings.inline && inline !== void 0)
    $$bindings.inline(inline);
  return `
<div${spread([$$restProps], "bx--skeleton bx--dropdown-v2 bx--list-box bx--form-item " + (inline ? "bx--list-box--inline" : ""))}><div role="${"button"}"${add_classes(["bx--list-box__field"].join(" ").trim())}><span${add_classes(["bx--list-box__label"].join(" ").trim())}></span></div></div>`;
});
const CheckmarkFilled16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "CheckmarkFilled16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M8,1C4.1,1,1,4.1,1,8c0,3.9,3.1,7,7,7s7-3.1,7-7C15,4.1,11.9,1,8,1z M7,11L4.3,8.3l0.9-0.8L7,9.3l4-3.9l0.9,0.8L7,11z"}"></path><path d="${"M7,11L4.3,8.3l0.9-0.8L7,9.3l4-3.9l0.9,0.8L7,11z"}" data-icon-path="${"inner-path"}" opacity="${"0"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const Loading = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let spinnerRadius;
  let $$restProps = compute_rest_props($$props, ["small", "active", "withOverlay", "description", "id"]);
  let {small = false} = $$props;
  let {active = true} = $$props;
  let {withOverlay = true} = $$props;
  let {description = "Active loading indicator"} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  if ($$props.small === void 0 && $$bindings.small && small !== void 0)
    $$bindings.small(small);
  if ($$props.active === void 0 && $$bindings.active && active !== void 0)
    $$bindings.active(active);
  if ($$props.withOverlay === void 0 && $$bindings.withOverlay && withOverlay !== void 0)
    $$bindings.withOverlay(withOverlay);
  if ($$props.description === void 0 && $$bindings.description && description !== void 0)
    $$bindings.description(description);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  spinnerRadius = small ? "42" : "44";
  return `${withOverlay ? `<div${spread([$$restProps], "bx--loading-overlay " + (!active ? "bx--loading-overlay--stop" : ""))}><div aria-atomic="${"true"}"${add_attribute("aria-labelledby", id, 0)}${add_attribute("aria-live", active ? "assertive" : "off", 0)}${add_classes([
    "bx--loading " + (small ? "bx--loading--small" : "") + " " + (!active ? "bx--loading--stop" : "")
  ].join(" ").trim())}>
      <label${add_attribute("id", id, 0)}${add_classes(["bx--visually-hidden"].join(" ").trim())}>${escape(description)}</label>
      <svg viewBox="${"0 0 100 100"}"${add_classes(["bx--loading__svg"].join(" ").trim())}><title>${escape(description)}</title>${small ? `<circle cx="${"50%"}" cy="${"50%"}"${add_attribute("r", spinnerRadius, 0)}${add_classes(["bx--loading__background"].join(" ").trim())}></circle>` : ``}<circle cx="${"50%"}" cy="${"50%"}"${add_attribute("r", spinnerRadius, 0)}${add_classes(["bx--loading__stroke"].join(" ").trim())}></circle></svg></div></div>` : `<div${spread([
    {"aria-atomic": "true"},
    {"aria-labelledby": escape(id)},
    {
      "aria-live": escape(active ? "assertive" : "off")
    },
    $$restProps
  ], "bx--loading " + (small ? "bx--loading--small" : "") + " " + (!active ? "bx--loading--stop" : ""))}>
    <label${add_attribute("id", id, 0)}${add_classes(["bx--visually-hidden"].join(" ").trim())}>${escape(description)}</label>
    <svg viewBox="${"0 0 100 100"}"${add_classes(["bx--loading__svg"].join(" ").trim())}><title>${escape(description)}</title>${small ? `<circle cx="${"50%"}" cy="${"50%"}"${add_attribute("r", spinnerRadius, 0)}${add_classes(["bx--loading__background"].join(" ").trim())}></circle>` : ``}<circle cx="${"50%"}" cy="${"50%"}"${add_attribute("r", spinnerRadius, 0)}${add_classes(["bx--loading__stroke"].join(" ").trim())}></circle></svg></div>`}`;
});
const Filename = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["status", "iconDescription", "invalid"]);
  let {status = "uploading"} = $$props;
  let {iconDescription = ""} = $$props;
  let {invalid = false} = $$props;
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  return `${status === "uploading" ? `${validate_component(Loading, "Loading").$$render($$result, Object.assign({description: iconDescription}, $$restProps, {small: true}, {withOverlay: false}), {}, {})}` : ``}

${status === "edit" ? `${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {class: "bx--file-invalid"}, {}, {})}` : ``}
  ${validate_component(Close16, "Close16").$$render($$result, Object.assign({"aria-label": iconDescription}, {title: iconDescription}, {class: "bx--file-close"}, $$restProps), {}, {})}` : ``}

${status === "complete" ? `${validate_component(CheckmarkFilled16, "CheckmarkFilled16").$$render($$result, Object.assign({"aria-label": iconDescription}, {title: iconDescription}, {class: "bx--file-complete"}, $$restProps), {}, {})}` : ``}`;
});
const FileUploaderButton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "accept",
    "files",
    "multiple",
    "disabled",
    "disableLabelChanges",
    "kind",
    "labelText",
    "role",
    "tabindex",
    "id",
    "name",
    "ref"
  ]);
  let {accept = []} = $$props;
  let {files = []} = $$props;
  let {multiple = false} = $$props;
  let {disabled = false} = $$props;
  let {disableLabelChanges = false} = $$props;
  let {kind = "primary"} = $$props;
  let {labelText = "Add file"} = $$props;
  let {role = "button"} = $$props;
  let {tabindex = "0"} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = ""} = $$props;
  let {ref = null} = $$props;
  createEventDispatcher();
  let initialLabelText = labelText;
  if ($$props.accept === void 0 && $$bindings.accept && accept !== void 0)
    $$bindings.accept(accept);
  if ($$props.files === void 0 && $$bindings.files && files !== void 0)
    $$bindings.files(files);
  if ($$props.multiple === void 0 && $$bindings.multiple && multiple !== void 0)
    $$bindings.multiple(multiple);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.disableLabelChanges === void 0 && $$bindings.disableLabelChanges && disableLabelChanges !== void 0)
    $$bindings.disableLabelChanges(disableLabelChanges);
  if ($$props.kind === void 0 && $$bindings.kind && kind !== void 0)
    $$bindings.kind(kind);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.role === void 0 && $$bindings.role && role !== void 0)
    $$bindings.role(role);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  {
    if (ref && files.length === 0) {
      labelText = initialLabelText;
      ref.value = null;
    }
  }
  return `<label${add_attribute("aria-disabled", disabled, 0)}${add_attribute("for", id, 0)}${add_attribute("tabindex", disabled ? "-1" : tabindex, 0)} class="${[
    escape(kind && `bx--btn--${kind}`),
    "bx--btn bx--btn--sm " + (disabled ? "bx--btn--disabled" : "")
  ].join(" ").trim()}"><span${add_attribute("role", role, 0)}>${slots.labelText ? slots.labelText({}) : `
      ${escape(labelText)}
    `}</span></label>
<input${spread([
    {type: "file"},
    {tabindex: "-1"},
    {accept: escape(accept)},
    {disabled: disabled || null},
    {id: escape(id)},
    {multiple: multiple || null},
    {name: escape(name)},
    $$restProps
  ], "bx--visually-hidden")}>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "status",
    "disabled",
    "accept",
    "files",
    "multiple",
    "clearFiles",
    "labelDescription",
    "labelTitle",
    "kind",
    "buttonLabel",
    "iconDescription",
    "name"
  ]);
  let {status = "uploading"} = $$props;
  let {disabled = false} = $$props;
  let {accept = []} = $$props;
  let {files = []} = $$props;
  let {multiple = false} = $$props;
  const clearFiles = () => {
    files = [];
  };
  let {labelDescription = ""} = $$props;
  let {labelTitle = ""} = $$props;
  let {kind = "primary"} = $$props;
  let {buttonLabel = ""} = $$props;
  let {iconDescription = "Provide icon description"} = $$props;
  let {name = ""} = $$props;
  const dispatch = createEventDispatcher();
  let prevFiles = [];
  const getFileId = (file) => file.lastModified + file.name;
  afterUpdate(() => {
    const fileIds = files.map(getFileId);
    const prevFileIds = prevFiles.map(getFileId);
    const addedIds = fileIds.filter((_) => !prevFileIds.includes(_));
    const removedIds = prevFileIds.filter((_) => !fileIds.includes(_));
    if (addedIds.length > 0) {
      dispatch("add", addedIds.map((id) => files.find((file) => id === getFileId(file))));
    }
    if (removedIds.length > 0) {
      dispatch("remove", removedIds.map((id) => prevFiles.find((file) => id === getFileId(file))));
    }
    prevFiles = [...files];
  });
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.accept === void 0 && $$bindings.accept && accept !== void 0)
    $$bindings.accept(accept);
  if ($$props.files === void 0 && $$bindings.files && files !== void 0)
    $$bindings.files(files);
  if ($$props.multiple === void 0 && $$bindings.multiple && multiple !== void 0)
    $$bindings.multiple(multiple);
  if ($$props.clearFiles === void 0 && $$bindings.clearFiles && clearFiles !== void 0)
    $$bindings.clearFiles(clearFiles);
  if ($$props.labelDescription === void 0 && $$bindings.labelDescription && labelDescription !== void 0)
    $$bindings.labelDescription(labelDescription);
  if ($$props.labelTitle === void 0 && $$bindings.labelTitle && labelTitle !== void 0)
    $$bindings.labelTitle(labelTitle);
  if ($$props.kind === void 0 && $$bindings.kind && kind !== void 0)
    $$bindings.kind(kind);
  if ($$props.buttonLabel === void 0 && $$bindings.buttonLabel && buttonLabel !== void 0)
    $$bindings.buttonLabel(buttonLabel);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  return `
<div${spread([$$restProps], "bx--form-item")}><p${add_classes([
    "bx--file--label " + (disabled ? "bx--label-description--disabled" : "")
  ].join(" ").trim())}>${escape(labelTitle)}</p>
  <p${add_classes([
    "bx--label-description " + (disabled ? "bx--label-description--disabled" : "")
  ].join(" ").trim())}>${escape(labelDescription)}</p>
  ${validate_component(FileUploaderButton, "FileUploaderButton").$$render($$result, {
    disabled,
    disableLabelChanges: true,
    labelText: buttonLabel,
    accept,
    name,
    multiple,
    kind
  }, {}, {})}
  <div${add_classes(["bx--file-container"].join(" ").trim())}>${each(files, ({name: name2}, i) => `<span${add_classes(["bx--file__selected-file"].join(" ").trim())}><p${add_classes(["bx--file-filename"].join(" ").trim())}>${escape(name2)}</p>
        <span${add_classes(["bx--file__state-container"].join(" ").trim())}>${validate_component(Filename, "Filename").$$render($$result, {iconDescription, status}, {}, {})}</span>
      </span>`)}</div></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "status",
    "size",
    "iconDescription",
    "invalid",
    "errorSubject",
    "errorBody",
    "id",
    "name"
  ]);
  let {status = "uploading"} = $$props;
  let {size = "default"} = $$props;
  let {iconDescription = ""} = $$props;
  let {invalid = false} = $$props;
  let {errorSubject = ""} = $$props;
  let {errorBody = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = ""} = $$props;
  createEventDispatcher();
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.errorSubject === void 0 && $$bindings.errorSubject && errorSubject !== void 0)
    $$bindings.errorSubject(errorSubject);
  if ($$props.errorBody === void 0 && $$bindings.errorBody && errorBody !== void 0)
    $$bindings.errorBody(errorBody);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  return `
<span${spread([{id: escape(id)}, $$restProps], "bx--file__selected-file " + (invalid ? "bx--file__selected-file--invalid" : "") + " " + (size === "field" ? "bx--file__selected-file--md" : "") + " " + (size === "small" ? "bx--file__selected-file--sm" : ""))}><p${add_classes(["bx--file-filename"].join(" ").trim())}>${escape(name)}</p>
  <span${add_classes(["bx--file__state-container"].join(" ").trim())}>${validate_component(Filename, "Filename").$$render($$result, {iconDescription, status, invalid}, {}, {})}</span>
  ${invalid && errorSubject ? `<div${add_classes(["bx--form-requirement"].join(" ").trim())}><div${add_classes(["bx--form-requirement__title"].join(" ").trim())}>${escape(errorSubject)}</div>
      ${errorBody ? `<p${add_classes(["bx--form-requirement__supplement"].join(" ").trim())}>${escape(errorBody)}</p>` : ``}</div>` : ``}</span>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "accept",
    "files",
    "multiple",
    "validateFiles",
    "labelText",
    "role",
    "disabled",
    "tabindex",
    "id",
    "name",
    "ref"
  ]);
  let {accept = []} = $$props;
  let {files = []} = $$props;
  let {multiple = false} = $$props;
  let {validateFiles = (files2) => files2} = $$props;
  let {labelText = "Add file"} = $$props;
  let {role = "button"} = $$props;
  let {disabled = false} = $$props;
  let {tabindex = "0"} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = ""} = $$props;
  let {ref = null} = $$props;
  createEventDispatcher();
  if ($$props.accept === void 0 && $$bindings.accept && accept !== void 0)
    $$bindings.accept(accept);
  if ($$props.files === void 0 && $$bindings.files && files !== void 0)
    $$bindings.files(files);
  if ($$props.multiple === void 0 && $$bindings.multiple && multiple !== void 0)
    $$bindings.multiple(multiple);
  if ($$props.validateFiles === void 0 && $$bindings.validateFiles && validateFiles !== void 0)
    $$bindings.validateFiles(validateFiles);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.role === void 0 && $$bindings.role && role !== void 0)
    $$bindings.role(role);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `<div${spread([$$restProps], "bx--file")}><label${add_attribute("for", id, 0)}${add_attribute("tabindex", tabindex, 0)}${add_classes([
    "bx--file-browse-btn " + (disabled ? "bx--file-browse-btn--disabled" : "")
  ].join(" ").trim())}><div${add_attribute("role", role, 0)}${add_classes([
    "bx--file__drop-container "
  ].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
        ${escape(labelText)}
      `}</div></label>
  <input type="${"file"}" tabindex="${"-1"}"${add_attribute("id", id, 0)} ${disabled ? "disabled" : ""}${add_attribute("accept", accept, 0)}${add_attribute("name", name, 0)} ${multiple ? "multiple" : ""}${add_classes(["bx--file-input"].join(" ").trim())}></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<div${spread([$$restProps], "bx--form-item")}>${validate_component(SkeletonText, "SkeletonText").$$render($$result, {heading: true, width: "100px"}, {}, {})}
  ${validate_component(SkeletonText, "SkeletonText").$$render($$result, {
    width: "225px",
    class: "bx--label-description"
  }, {}, {})}
  ${validate_component(ButtonSkeleton, "ButtonSkeleton").$$render($$result, {}, {}, {})}</div>`;
});
const Form = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["ref"]);
  let {ref = null} = $$props;
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `
<form${spread([$$restProps], "bx--form")}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}</form>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  setContext("Form", {isFluid: true});
  return `${validate_component(Form, "Form").$$render($$result, Object.assign($$restProps, {
    class: "bx--form--fluid " + $$restProps.class
  }), {}, {
    default: () => `${slots.default ? slots.default({}) : ``}`
  })}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["noMargin", "invalid", "message", "messageText", "legendText", "legendId"]);
  let {noMargin = false} = $$props;
  let {invalid = false} = $$props;
  let {message = false} = $$props;
  let {messageText = ""} = $$props;
  let {legendText = ""} = $$props;
  let {legendId = ""} = $$props;
  if ($$props.noMargin === void 0 && $$bindings.noMargin && noMargin !== void 0)
    $$bindings.noMargin(noMargin);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.message === void 0 && $$bindings.message && message !== void 0)
    $$bindings.message(message);
  if ($$props.messageText === void 0 && $$bindings.messageText && messageText !== void 0)
    $$bindings.messageText(messageText);
  if ($$props.legendText === void 0 && $$bindings.legendText && legendText !== void 0)
    $$bindings.legendText(legendText);
  if ($$props.legendId === void 0 && $$bindings.legendId && legendId !== void 0)
    $$bindings.legendId(legendId);
  return `
<fieldset${spread([
    {
      "data-invalid": escape(invalid || void 0)
    },
    {
      "aria-labelledby": escape($$restProps["aria-labelledby"] || legendId)
    },
    $$restProps
  ], "bx--fieldset " + (noMargin ? "bx--fieldset--no-margin" : ""))}>${legendText ? `<legend${add_attribute("id", legendId || $$restProps["aria-labelledby"], 0)}${add_classes(["bx--label"].join(" ").trim())}>${escape(legendText)}</legend>` : ``}
  ${slots.default ? slots.default({}) : ``}
  ${message ? `<div${add_classes(["bx--form__requirement"].join(" ").trim())}>${escape(messageText)}</div>` : ``}</fieldset>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<div${spread([$$restProps], "bx--form-item")}>${slots.default ? slots.default({}) : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["id"]);
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  return `
<label${spread([{for: escape(id)}, $$restProps], "bx--label")}>${slots.default ? slots.default({}) : ``}</label>`;
});
const Grid = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let props;
  let $$restProps = compute_rest_props($$props, [
    "as",
    "condensed",
    "narrow",
    "fullWidth",
    "noGutter",
    "noGutterLeft",
    "noGutterRight",
    "padding"
  ]);
  let {as = false} = $$props;
  let {condensed = false} = $$props;
  let {narrow = false} = $$props;
  let {fullWidth = false} = $$props;
  let {noGutter = false} = $$props;
  let {noGutterLeft = false} = $$props;
  let {noGutterRight = false} = $$props;
  let {padding = false} = $$props;
  if ($$props.as === void 0 && $$bindings.as && as !== void 0)
    $$bindings.as(as);
  if ($$props.condensed === void 0 && $$bindings.condensed && condensed !== void 0)
    $$bindings.condensed(condensed);
  if ($$props.narrow === void 0 && $$bindings.narrow && narrow !== void 0)
    $$bindings.narrow(narrow);
  if ($$props.fullWidth === void 0 && $$bindings.fullWidth && fullWidth !== void 0)
    $$bindings.fullWidth(fullWidth);
  if ($$props.noGutter === void 0 && $$bindings.noGutter && noGutter !== void 0)
    $$bindings.noGutter(noGutter);
  if ($$props.noGutterLeft === void 0 && $$bindings.noGutterLeft && noGutterLeft !== void 0)
    $$bindings.noGutterLeft(noGutterLeft);
  if ($$props.noGutterRight === void 0 && $$bindings.noGutterRight && noGutterRight !== void 0)
    $$bindings.noGutterRight(noGutterRight);
  if ($$props.padding === void 0 && $$bindings.padding && padding !== void 0)
    $$bindings.padding(padding);
  props = {
    ...$$restProps,
    class: [
      $$restProps.class,
      "bx--grid",
      condensed && "bx--grid--condensed",
      narrow && "bx--grid--narrow",
      fullWidth && "bx--grid--full-width",
      noGutter && "bx--no-gutter",
      noGutterLeft && "bx--no-gutter--left",
      noGutterRight && "bx--no-gutter--right",
      padding && "bx--row-padding"
    ].filter(Boolean).join(" ")
  };
  return `${as ? `${slots.default ? slots.default({props}) : ``}` : `<div${spread([props])}>${slots.default ? slots.default({}) : ``}</div>`}`;
});
const Row = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let props;
  let $$restProps = compute_rest_props($$props, ["as", "condensed", "narrow", "noGutter", "noGutterLeft", "noGutterRight", "padding"]);
  let {as = false} = $$props;
  let {condensed = false} = $$props;
  let {narrow = false} = $$props;
  let {noGutter = false} = $$props;
  let {noGutterLeft = false} = $$props;
  let {noGutterRight = false} = $$props;
  let {padding = false} = $$props;
  if ($$props.as === void 0 && $$bindings.as && as !== void 0)
    $$bindings.as(as);
  if ($$props.condensed === void 0 && $$bindings.condensed && condensed !== void 0)
    $$bindings.condensed(condensed);
  if ($$props.narrow === void 0 && $$bindings.narrow && narrow !== void 0)
    $$bindings.narrow(narrow);
  if ($$props.noGutter === void 0 && $$bindings.noGutter && noGutter !== void 0)
    $$bindings.noGutter(noGutter);
  if ($$props.noGutterLeft === void 0 && $$bindings.noGutterLeft && noGutterLeft !== void 0)
    $$bindings.noGutterLeft(noGutterLeft);
  if ($$props.noGutterRight === void 0 && $$bindings.noGutterRight && noGutterRight !== void 0)
    $$bindings.noGutterRight(noGutterRight);
  if ($$props.padding === void 0 && $$bindings.padding && padding !== void 0)
    $$bindings.padding(padding);
  props = {
    ...$$restProps,
    class: [
      $$restProps.class,
      "bx--row",
      condensed && "bx--row--condensed",
      narrow && "bx--row--narrow",
      noGutter && "bx--no-gutter",
      noGutterLeft && "bx--no-gutter--left",
      noGutterRight && "bx--no-gutter--right",
      padding && "bx--row-padding"
    ].filter(Boolean).join(" ")
  };
  return `${as ? `${slots.default ? slots.default({props}) : ``}` : `<div${spread([props])}>${slots.default ? slots.default({}) : ``}</div>`}`;
});
const Column = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let columnClass;
  let props;
  let $$restProps = compute_rest_props($$props, [
    "as",
    "noGutter",
    "noGutterLeft",
    "noGutterRight",
    "padding",
    "aspectRatio",
    "sm",
    "md",
    "lg",
    "xlg",
    "max"
  ]);
  let {as = false} = $$props;
  let {noGutter = false} = $$props;
  let {noGutterLeft = false} = $$props;
  let {noGutterRight = false} = $$props;
  let {padding = false} = $$props;
  let {aspectRatio = void 0} = $$props;
  let {sm = void 0} = $$props;
  let {md = void 0} = $$props;
  let {lg = void 0} = $$props;
  let {xlg = void 0} = $$props;
  let {max = void 0} = $$props;
  const breakpoints2 = ["sm", "md", "lg", "xlg", "max"];
  if ($$props.as === void 0 && $$bindings.as && as !== void 0)
    $$bindings.as(as);
  if ($$props.noGutter === void 0 && $$bindings.noGutter && noGutter !== void 0)
    $$bindings.noGutter(noGutter);
  if ($$props.noGutterLeft === void 0 && $$bindings.noGutterLeft && noGutterLeft !== void 0)
    $$bindings.noGutterLeft(noGutterLeft);
  if ($$props.noGutterRight === void 0 && $$bindings.noGutterRight && noGutterRight !== void 0)
    $$bindings.noGutterRight(noGutterRight);
  if ($$props.padding === void 0 && $$bindings.padding && padding !== void 0)
    $$bindings.padding(padding);
  if ($$props.aspectRatio === void 0 && $$bindings.aspectRatio && aspectRatio !== void 0)
    $$bindings.aspectRatio(aspectRatio);
  if ($$props.sm === void 0 && $$bindings.sm && sm !== void 0)
    $$bindings.sm(sm);
  if ($$props.md === void 0 && $$bindings.md && md !== void 0)
    $$bindings.md(md);
  if ($$props.lg === void 0 && $$bindings.lg && lg !== void 0)
    $$bindings.lg(lg);
  if ($$props.xlg === void 0 && $$bindings.xlg && xlg !== void 0)
    $$bindings.xlg(xlg);
  if ($$props.max === void 0 && $$bindings.max && max !== void 0)
    $$bindings.max(max);
  columnClass = [sm, md, lg, xlg, max].map((breakpoint, i) => {
    const name = breakpoints2[i];
    if (breakpoint === true) {
      return `bx--col-${name}`;
    } else if (typeof breakpoint === "number") {
      return `bx--col-${name}-${breakpoint}`;
    } else if (typeof breakpoint === "object") {
      let bp = [];
      if (typeof breakpoint.span === "number") {
        bp = [...bp, `bx--col-${name}-${breakpoint.span}`];
      } else if (breakpoint.span === true) {
        bp = [...bp, `bx--col-${name}`];
      }
      if (typeof breakpoint.offset === "number") {
        bp = [...bp, `bx--offset-${name}-${breakpoint.offset}`];
      }
      return bp.join(" ");
    }
  }).filter(Boolean).join(" ");
  props = {
    ...$$restProps,
    class: [
      $$restProps.class,
      columnClass,
      !columnClass && "bx--col",
      noGutter && "bx--no-gutter",
      noGutterLeft && "bx--no-gutter--left",
      noGutterRight && "bx--no-gutter--right",
      aspectRatio && `bx--aspect-ratio bx--aspect-ratio--${aspectRatio}`,
      padding && "bx--col-padding"
    ].filter(Boolean).join(" ")
  };
  return `${as ? `${slots.default ? slots.default({props}) : ``}` : `<div${spread([props])}>${slots.default ? slots.default({}) : ``}</div>`}`;
});
const IconSkeleton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["size"]);
  let {size = 16} = $$props;
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  return `


<div${spread([
    $$restProps,
    {
      style: escape($$restProps.style) + "; width: " + escape(size) + "px; height: " + escape(size) + "px"
    }
  ], "bx--icon--skeleton")}></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["render", "skeleton"]);
  let {render: render2 = void 0} = $$props;
  let {skeleton = false} = $$props;
  if ($$props.render === void 0 && $$bindings.render && render2 !== void 0)
    $$bindings.render(render2);
  if ($$props.skeleton === void 0 && $$bindings.skeleton && skeleton !== void 0)
    $$bindings.skeleton(skeleton);
  return `

${skeleton ? `${validate_component(IconSkeleton, "IconSkeleton").$$render($$result, Object.assign($$restProps), {}, {})}` : `${validate_component(render2 || missing_component, "svelte:component").$$render($$result, Object.assign($$restProps), {}, {})}`}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["src", "alt", "ratio", "loading", "loaded", "error", "fadeIn", "loadImage"]);
  let {src = ""} = $$props;
  let {alt = ""} = $$props;
  let {ratio = void 0} = $$props;
  let {loading = false} = $$props;
  let {loaded = false} = $$props;
  let {error: error2 = false} = $$props;
  let {fadeIn = false} = $$props;
  const loadImage = (url) => {
    if (image != null)
      image = null;
    loaded = false;
    error2 = false;
    image = new Image();
    image.src = url || src;
    image.onload = () => loaded = true;
    image.onerror = () => error2 = true;
  };
  const dispatch = createEventDispatcher();
  let image = null;
  onMount(() => {
    return () => image = null;
  });
  if ($$props.src === void 0 && $$bindings.src && src !== void 0)
    $$bindings.src(src);
  if ($$props.alt === void 0 && $$bindings.alt && alt !== void 0)
    $$bindings.alt(alt);
  if ($$props.ratio === void 0 && $$bindings.ratio && ratio !== void 0)
    $$bindings.ratio(ratio);
  if ($$props.loading === void 0 && $$bindings.loading && loading !== void 0)
    $$bindings.loading(loading);
  if ($$props.loaded === void 0 && $$bindings.loaded && loaded !== void 0)
    $$bindings.loaded(loaded);
  if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
    $$bindings.error(error2);
  if ($$props.fadeIn === void 0 && $$bindings.fadeIn && fadeIn !== void 0)
    $$bindings.fadeIn(fadeIn);
  if ($$props.loadImage === void 0 && $$bindings.loadImage && loadImage !== void 0)
    $$bindings.loadImage(loadImage);
  loading = !loaded && !error2;
  {
    if (src && typeof window !== "undefined")
      loadImage();
  }
  {
    if (loaded)
      dispatch("load");
  }
  {
    if (error2)
      dispatch("error");
  }
  return `${ratio === void 0 ? `${loading ? `${slots.loading ? slots.loading({}) : ``}` : ``}
  ${loaded ? `<img${spread([
    $$restProps,
    {
      style: "width: 100%;" + escape($$restProps.style)
    },
    {src: escape(src)},
    {alt: escape(alt)}
  ])}>` : ``}
  ${error2 ? `${slots.error ? slots.error({}) : ``}` : ``}` : `${validate_component(AspectRatio, "AspectRatio").$$render($$result, {ratio}, {}, {
    default: () => `${loading ? `${slots.loading ? slots.loading({}) : ``}` : ``}
    ${loaded ? `<img${spread([
      $$restProps,
      {
        style: "width: 100%;" + escape($$restProps.style)
      },
      {src: escape(src)},
      {alt: escape(alt)}
    ])}>` : ``}
    ${error2 ? `${slots.error ? slots.error({}) : ``}` : ``}`
  })}`}`;
});
const ErrorFilled16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "ErrorFilled16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M8,1C4.1,1,1,4.1,1,8s3.1,7,7,7s7-3.1,7-7S11.9,1,8,1z M10.7,11.5L4.5,5.3l0.8-0.8l6.2,6.2L10.7,11.5z"}"></path><path fill="${"none"}" d="${"M10.7,11.5L4.5,5.3l0.8-0.8l6.2,6.2L10.7,11.5z"}" data-icon-path="${"inner-path"}" opacity="${"0"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["status", "description", "iconDescription", "successDelay"]);
  let {status = "active"} = $$props;
  let {description = void 0} = $$props;
  let {iconDescription = void 0} = $$props;
  let {successDelay = 1500} = $$props;
  const dispatch = createEventDispatcher();
  let timeout = void 0;
  onMount(() => {
    return () => {
      clearTimeout(timeout);
    };
  });
  afterUpdate(() => {
    if (status === "finished") {
      timeout = setTimeout(() => {
        dispatch("success");
      }, successDelay);
    }
  });
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.description === void 0 && $$bindings.description && description !== void 0)
    $$bindings.description(description);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.successDelay === void 0 && $$bindings.successDelay && successDelay !== void 0)
    $$bindings.successDelay(successDelay);
  return `
<div${spread([{"aria-live": "assertive"}, $$restProps], "bx--inline-loading")}><div${add_classes(["bx--inline-loading__animation"].join(" ").trim())}>${status === "error" ? `${validate_component(ErrorFilled16, "ErrorFilled16").$$render($$result, {
    class: "bx--inline-loading--error",
    title: iconDescription
  }, {}, {})}` : `${status === "finished" ? `${validate_component(CheckmarkFilled16, "CheckmarkFilled16").$$render($$result, {
    class: "bx--inline-loading__checkmark-container",
    title: iconDescription
  }, {}, {})}` : `${status === "inactive" || status === "active" ? `${validate_component(Loading, "Loading").$$render($$result, {
    small: true,
    description: iconDescription,
    withOverlay: false,
    active: status === "active"
  }, {}, {})}` : ``}`}`}</div>
  ${description ? `<div${add_classes(["bx--inline-loading__text"].join(" ").trim())}>${escape(description)}</div>` : ``}</div>`;
});
const Launch16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Launch16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M13,14H3c-0.6,0-1-0.4-1-1V3c0-0.6,0.4-1,1-1h5v1H3v10h10V8h1v5C14,13.6,13.6,14,13,14z"}"></path><path d="${"M10 1L10 2 13.3 2 9 6.3 9.7 7 14 2.7 14 6 15 6 15 1z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `${validate_component(Link, "Link").$$render($$result, Object.assign($$restProps, {target: "_blank"}, {icon: Launch16}), {}, {
    default: () => `${slots.default ? slots.default({}) : ``}`
  })}`;
});
const ListItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<li${spread([$$restProps], "bx--list__item")}>${slots.default ? slots.default({}) : ``}</li>`;
});
function clearAll() {
  localStorage.clear();
}
const LocalStorage = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {key = "local-storage-key"} = $$props;
  let {value = ""} = $$props;
  function clearItem() {
    localStorage.removeItem(key);
  }
  const dispatch = createEventDispatcher();
  let prevValue = value;
  function setItem() {
    if (typeof value === "object") {
      localStorage.setItem(key, JSON.stringify(value));
    } else {
      localStorage.setItem(key, value);
    }
  }
  onMount(() => {
    const item = localStorage.getItem(key);
    if (item != null) {
      try {
        value = JSON.parse(item);
      } catch (e) {
        value = item;
      }
    } else {
      setItem();
      dispatch("save");
    }
  });
  afterUpdate(() => {
    if (prevValue !== value) {
      setItem();
      dispatch("update", {prevValue, value});
    }
    prevValue = value;
  });
  if ($$props.key === void 0 && $$bindings.key && key !== void 0)
    $$bindings.key(key);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.clearItem === void 0 && $$bindings.clearItem && clearItem !== void 0)
    $$bindings.clearItem(clearItem);
  if ($$props.clearAll === void 0 && $$bindings.clearAll && clearAll !== void 0)
    $$bindings.clearAll(clearAll);
  return ``;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  var _a, _b;
  let menuId;
  let inline;
  let ariaLabel;
  let sortedItems;
  let checked;
  let unchecked;
  let filteredItems;
  let $$restProps = compute_rest_props($$props, [
    "items",
    "itemToString",
    "itemToInput",
    "selectedIds",
    "value",
    "size",
    "type",
    "direction",
    "selectionFeedback",
    "disabled",
    "filterable",
    "filterItem",
    "open",
    "light",
    "locale",
    "placeholder",
    "sortItem",
    "translateWithId",
    "titleText",
    "useTitleInItem",
    "invalid",
    "invalidText",
    "warn",
    "warnText",
    "helperText",
    "label",
    "hideLabel",
    "id",
    "name",
    "inputRef",
    "multiSelectRef",
    "fieldRef",
    "selectionRef",
    "highlightedId"
  ]);
  let {items = []} = $$props;
  let {itemToString = (item) => item.text || item.id} = $$props;
  let {itemToInput = (item) => {
  }} = $$props;
  let {selectedIds = []} = $$props;
  let {value = ""} = $$props;
  let {size = void 0} = $$props;
  let {type = "default"} = $$props;
  let {direction: direction2 = "bottom"} = $$props;
  let {selectionFeedback = "top-after-reopen"} = $$props;
  let {disabled = false} = $$props;
  let {filterable = false} = $$props;
  let {filterItem = (item, value2) => item.text.toLowerCase().includes(value2.trim().toLowerCase())} = $$props;
  let {open = false} = $$props;
  let {light = false} = $$props;
  let {locale = "en"} = $$props;
  let {placeholder = ""} = $$props;
  let {sortItem = (a, b) => a.text.localeCompare(b.text, locale, {numeric: true})} = $$props;
  let {translateWithId = void 0} = $$props;
  let {titleText = ""} = $$props;
  let {useTitleInItem = false} = $$props;
  let {invalid = false} = $$props;
  let {invalidText = ""} = $$props;
  let {warn = false} = $$props;
  let {warnText = ""} = $$props;
  let {helperText = ""} = $$props;
  let {label = ""} = $$props;
  let {hideLabel = false} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  let {inputRef = null} = $$props;
  let {multiSelectRef = null} = $$props;
  let {fieldRef = null} = $$props;
  let {selectionRef = null} = $$props;
  let {highlightedId = null} = $$props;
  const dispatch = createEventDispatcher();
  let inputValue = "";
  let initialSorted = false;
  let highlightedIndex = -1;
  let prevChecked = [];
  setContext("MultiSelect", {
    declareRef: ({key, ref}) => {
      switch (key) {
        case "field":
          fieldRef = ref;
          break;
        case "selection":
          selectionRef = ref;
          break;
      }
    }
  });
  function sort() {
    return [
      ...checked.length > 1 ? checked.sort(sortItem) : checked,
      ...unchecked.sort(sortItem)
    ];
  }
  afterUpdate(() => {
    if (checked.length !== prevChecked.length) {
      if (selectionFeedback === "top") {
        sortedItems = sort();
      }
      prevChecked = checked;
      selectedIds = checked.map(({id: id2}) => id2);
      dispatch("select", {
        selectedIds,
        selected: checked,
        unselected: unchecked
      });
    }
    if (!open) {
      if (!initialSorted || selectionFeedback !== "fixed") {
        sortedItems = sort();
        initialSorted = true;
      }
      highlightedIndex = -1;
      inputValue = "";
    }
    items = sortedItems;
  });
  if ($$props.items === void 0 && $$bindings.items && items !== void 0)
    $$bindings.items(items);
  if ($$props.itemToString === void 0 && $$bindings.itemToString && itemToString !== void 0)
    $$bindings.itemToString(itemToString);
  if ($$props.itemToInput === void 0 && $$bindings.itemToInput && itemToInput !== void 0)
    $$bindings.itemToInput(itemToInput);
  if ($$props.selectedIds === void 0 && $$bindings.selectedIds && selectedIds !== void 0)
    $$bindings.selectedIds(selectedIds);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  if ($$props.direction === void 0 && $$bindings.direction && direction2 !== void 0)
    $$bindings.direction(direction2);
  if ($$props.selectionFeedback === void 0 && $$bindings.selectionFeedback && selectionFeedback !== void 0)
    $$bindings.selectionFeedback(selectionFeedback);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.filterable === void 0 && $$bindings.filterable && filterable !== void 0)
    $$bindings.filterable(filterable);
  if ($$props.filterItem === void 0 && $$bindings.filterItem && filterItem !== void 0)
    $$bindings.filterItem(filterItem);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.locale === void 0 && $$bindings.locale && locale !== void 0)
    $$bindings.locale(locale);
  if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0)
    $$bindings.placeholder(placeholder);
  if ($$props.sortItem === void 0 && $$bindings.sortItem && sortItem !== void 0)
    $$bindings.sortItem(sortItem);
  if ($$props.translateWithId === void 0 && $$bindings.translateWithId && translateWithId !== void 0)
    $$bindings.translateWithId(translateWithId);
  if ($$props.titleText === void 0 && $$bindings.titleText && titleText !== void 0)
    $$bindings.titleText(titleText);
  if ($$props.useTitleInItem === void 0 && $$bindings.useTitleInItem && useTitleInItem !== void 0)
    $$bindings.useTitleInItem(useTitleInItem);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.invalidText === void 0 && $$bindings.invalidText && invalidText !== void 0)
    $$bindings.invalidText(invalidText);
  if ($$props.warn === void 0 && $$bindings.warn && warn !== void 0)
    $$bindings.warn(warn);
  if ($$props.warnText === void 0 && $$bindings.warnText && warnText !== void 0)
    $$bindings.warnText(warnText);
  if ($$props.helperText === void 0 && $$bindings.helperText && helperText !== void 0)
    $$bindings.helperText(helperText);
  if ($$props.label === void 0 && $$bindings.label && label !== void 0)
    $$bindings.label(label);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.inputRef === void 0 && $$bindings.inputRef && inputRef !== void 0)
    $$bindings.inputRef(inputRef);
  if ($$props.multiSelectRef === void 0 && $$bindings.multiSelectRef && multiSelectRef !== void 0)
    $$bindings.multiSelectRef(multiSelectRef);
  if ($$props.fieldRef === void 0 && $$bindings.fieldRef && fieldRef !== void 0)
    $$bindings.fieldRef(fieldRef);
  if ($$props.selectionRef === void 0 && $$bindings.selectionRef && selectionRef !== void 0)
    $$bindings.selectionRef(selectionRef);
  if ($$props.highlightedId === void 0 && $$bindings.highlightedId && highlightedId !== void 0)
    $$bindings.highlightedId(highlightedId);
  menuId = `menu-${id}`;
  inline = type === "inline";
  ariaLabel = $$props["aria-label"] || "Choose an item";
  sortedItems = items.map((item) => ({
    ...item,
    checked: selectedIds.includes(item.id)
  }));
  checked = sortedItems.filter(({checked: checked2}) => checked2);
  unchecked = sortedItems.filter(({checked: checked2}) => !checked2);
  value = inputValue;
  filteredItems = sortedItems.filter((item) => filterItem(item, value));
  highlightedId = highlightedIndex > -1 ? (_b = (_a = (filterable ? filteredItems : sortedItems)[highlightedIndex]) == null ? void 0 : _a.id) != null ? _b : null : null;
  return `

<div${add_classes([
    "bx--multi-select__wrapper bx--list-box__wrapper " + (inline ? "bx--multi-select__wrapper--inline" : "") + " " + (inline ? "bx--list-box__wrapper--inline" : "") + " " + (inline && invalid ? "bx--multi-select__wrapper--inline--invalid" : "")
  ].join(" ").trim())}${add_attribute("this", multiSelectRef, 1)}>${titleText ? `<label${add_attribute("for", id, 0)}${add_classes([
    "bx--label " + (disabled ? "bx--label--disabled" : "") + " " + (hideLabel ? "bx--visually-hidden" : "")
  ].join(" ").trim())}>${escape(titleText)}</label>` : ``}
  ${validate_component(ListBox, "ListBox").$$render($$result, {
    role: void 0,
    disabled,
    invalid,
    invalidText,
    open,
    light,
    size,
    warn,
    warnText,
    class: "bx--multi-select " + (direction2 === "top" && "bx--list-box--up") + " " + (filterable && "bx--combo-box") + "\n      " + (filterable && "bx--multi-select--filterable") + "\n      " + (invalid && "bx--multi-select--invalid") + "\n      " + (inline && "bx--multi-select--inline") + "\n      " + (checked.length > 0 && "bx--multi-select--selected")
  }, {}, {
    default: () => `${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {class: "bx--list-box__invalid-icon"}, {}, {})}` : ``}
    ${!invalid && warn ? `${validate_component(WarningAltFilled16, "WarningAltFilled16").$$render($$result, {
      class: "bx--list-box__invalid-icon bx--list-box__invalid-icon--warning"
    }, {}, {})}` : ``}
    ${validate_component(ListBoxField, "ListBoxField").$$render($$result, {
      role: "button",
      tabindex: "0",
      "aria-expanded": open,
      id,
      disabled,
      translateWithId
    }, {}, {
      default: () => `${checked.length > 0 ? `${validate_component(ListBoxSelection, "ListBoxSelection").$$render($$result, {
        selectionCount: checked.length,
        translateWithId,
        disabled
      }, {}, {})}` : ``}
      ${filterable ? `<input${spread([
        $$restProps,
        {role: "combobox"},
        {tabindex: "0"},
        {autocomplete: "off"},
        {"aria-autocomplete": "list"},
        {"aria-expanded": escape(open)},
        {
          "aria-activedescendant": escape(highlightedId)
        },
        {"aria-disabled": escape(disabled)},
        {"aria-controls": escape(menuId)},
        {disabled: disabled || null},
        {placeholder: escape(placeholder)},
        {id: escape(id)},
        {name: escape(name)},
        {value: escape(inputValue)}
      ], "bx--text-input " + (inputValue === "" ? "bx--text-input--empty" : "") + " " + (light ? "bx--text-input--light" : ""))}${add_attribute("this", inputRef, 1)}>
        ${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {class: "bx--list-box__invalid-icon"}, {}, {})}` : ``}
        ${inputValue ? `${validate_component(ListBoxSelection, "ListBoxSelection").$$render($$result, {translateWithId, disabled, open}, {}, {})}` : ``}
        ${validate_component(ListBoxMenuIcon, "ListBoxMenuIcon").$$render($$result, {
        style: "pointer-events: " + (open ? "auto" : "none"),
        translateWithId,
        open
      }, {}, {})}` : ``}
      ${!filterable ? `<span class="${"bx--list-box__label"}">${escape(label)}</span>
        ${validate_component(ListBoxMenuIcon, "ListBoxMenuIcon").$$render($$result, {open, translateWithId}, {}, {})}` : ``}`
    })}
    ${open ? `${validate_component(ListBoxMenu, "ListBoxMenu").$$render($$result, {
      "aria-label": ariaLabel,
      id,
      "aria-multiselectable": "true"
    }, {}, {
      default: () => `${each(filterable ? filteredItems : sortedItems, (item, i) => `${validate_component(ListBoxMenuItem, "ListBoxMenuItem").$$render($$result, {
        id: item.id,
        role: "option",
        "aria-labelledby": "checkbox-" + item.id,
        "aria-selected": item.checked,
        active: item.checked,
        highlighted: highlightedIndex === i
      }, {}, {
        default: () => `${validate_component(Checkbox, "Checkbox").$$render($$result, Object.assign({name: item.id}, {
          title: useTitleInItem ? itemToString(item) : void 0
        }, itemToInput(item), {readonly: true}, {tabindex: "-1"}, {id: "checkbox-" + item.id}, {checked: item.checked}, {disabled}), {}, {
          labelText: () => `${slots.default ? slots.default({slot: "labelText", item, index: i}) : `
                ${escape(itemToString(item))}
              `}`
        })}
          `
      })}`)}`
    })}` : ``}`
  })}
  ${!inline && !invalid && !warn && helperText ? `<div${add_classes([
    "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "")
  ].join(" ").trim())}>${escape(helperText)}</div>` : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let modalLabelId;
  let modalHeadingId;
  let modalBodyId;
  let ariaLabel;
  let $$restProps = compute_rest_props($$props, [
    "size",
    "open",
    "danger",
    "alert",
    "passiveModal",
    "modalHeading",
    "modalLabel",
    "modalAriaLabel",
    "iconDescription",
    "hasForm",
    "hasScrollingContent",
    "primaryButtonText",
    "primaryButtonDisabled",
    "primaryButtonIcon",
    "shouldSubmitOnEnter",
    "secondaryButtonText",
    "secondaryButtons",
    "selectorPrimaryFocus",
    "preventCloseOnClickOutside",
    "id",
    "ref"
  ]);
  let {size = void 0} = $$props;
  let {open = false} = $$props;
  let {danger = false} = $$props;
  let {alert = false} = $$props;
  let {passiveModal = false} = $$props;
  let {modalHeading = void 0} = $$props;
  let {modalLabel = void 0} = $$props;
  let {modalAriaLabel = void 0} = $$props;
  let {iconDescription = "Close the modal"} = $$props;
  let {hasForm = false} = $$props;
  let {hasScrollingContent = false} = $$props;
  let {primaryButtonText = ""} = $$props;
  let {primaryButtonDisabled = false} = $$props;
  let {primaryButtonIcon = void 0} = $$props;
  let {shouldSubmitOnEnter = true} = $$props;
  let {secondaryButtonText = ""} = $$props;
  let {secondaryButtons = []} = $$props;
  let {selectorPrimaryFocus = "[data-modal-primary-focus]"} = $$props;
  let {preventCloseOnClickOutside = false} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  const dispatch = createEventDispatcher();
  let buttonRef = null;
  let innerModal = null;
  let opened = false;
  function focus(element) {
    const node = (element || innerModal).querySelector(selectorPrimaryFocus) || buttonRef;
    node.focus();
  }
  onMount(() => {
    return () => {
      document.body.classList.remove("bx--body--with-modal-open");
    };
  });
  afterUpdate(() => {
    if (opened) {
      if (!open) {
        opened = false;
        dispatch("close");
        document.body.classList.remove("bx--body--with-modal-open");
      }
    } else if (open) {
      opened = true;
      focus();
      dispatch("open");
      document.body.classList.add("bx--body--with-modal-open");
    }
  });
  let alertDialogProps = {};
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.danger === void 0 && $$bindings.danger && danger !== void 0)
    $$bindings.danger(danger);
  if ($$props.alert === void 0 && $$bindings.alert && alert !== void 0)
    $$bindings.alert(alert);
  if ($$props.passiveModal === void 0 && $$bindings.passiveModal && passiveModal !== void 0)
    $$bindings.passiveModal(passiveModal);
  if ($$props.modalHeading === void 0 && $$bindings.modalHeading && modalHeading !== void 0)
    $$bindings.modalHeading(modalHeading);
  if ($$props.modalLabel === void 0 && $$bindings.modalLabel && modalLabel !== void 0)
    $$bindings.modalLabel(modalLabel);
  if ($$props.modalAriaLabel === void 0 && $$bindings.modalAriaLabel && modalAriaLabel !== void 0)
    $$bindings.modalAriaLabel(modalAriaLabel);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.hasForm === void 0 && $$bindings.hasForm && hasForm !== void 0)
    $$bindings.hasForm(hasForm);
  if ($$props.hasScrollingContent === void 0 && $$bindings.hasScrollingContent && hasScrollingContent !== void 0)
    $$bindings.hasScrollingContent(hasScrollingContent);
  if ($$props.primaryButtonText === void 0 && $$bindings.primaryButtonText && primaryButtonText !== void 0)
    $$bindings.primaryButtonText(primaryButtonText);
  if ($$props.primaryButtonDisabled === void 0 && $$bindings.primaryButtonDisabled && primaryButtonDisabled !== void 0)
    $$bindings.primaryButtonDisabled(primaryButtonDisabled);
  if ($$props.primaryButtonIcon === void 0 && $$bindings.primaryButtonIcon && primaryButtonIcon !== void 0)
    $$bindings.primaryButtonIcon(primaryButtonIcon);
  if ($$props.shouldSubmitOnEnter === void 0 && $$bindings.shouldSubmitOnEnter && shouldSubmitOnEnter !== void 0)
    $$bindings.shouldSubmitOnEnter(shouldSubmitOnEnter);
  if ($$props.secondaryButtonText === void 0 && $$bindings.secondaryButtonText && secondaryButtonText !== void 0)
    $$bindings.secondaryButtonText(secondaryButtonText);
  if ($$props.secondaryButtons === void 0 && $$bindings.secondaryButtons && secondaryButtons !== void 0)
    $$bindings.secondaryButtons(secondaryButtons);
  if ($$props.selectorPrimaryFocus === void 0 && $$bindings.selectorPrimaryFocus && selectorPrimaryFocus !== void 0)
    $$bindings.selectorPrimaryFocus(selectorPrimaryFocus);
  if ($$props.preventCloseOnClickOutside === void 0 && $$bindings.preventCloseOnClickOutside && preventCloseOnClickOutside !== void 0)
    $$bindings.preventCloseOnClickOutside(preventCloseOnClickOutside);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  modalLabelId = `bx--modal-header__label--modal-${id}`;
  modalHeadingId = `bx--modal-header__heading--modal-${id}`;
  modalBodyId = `bx--modal-body--${id}`;
  ariaLabel = modalLabel || $$props["aria-label"] || modalAriaLabel || modalHeading;
  {
    if (alert) {
      if (passiveModal) {
        alertDialogProps.role = "alert";
      }
      if (!passiveModal) {
        alertDialogProps.role = "alertdialog";
        alertDialogProps["aria-describedby"] = modalBodyId;
      }
    }
  }
  return `
<div${spread([{role: "presentation"}, {id: escape(id)}, $$restProps], "bx--modal " + (!passiveModal ? "bx--modal-tall" : "") + " " + (open ? "is-visible" : "") + " " + (danger ? "bx--modal--danger" : ""))}${add_attribute("this", ref, 1)}><div${spread([
    {role: "dialog"},
    {tabindex: "-1"},
    alertDialogProps,
    {"aria-modal": "true"},
    {"aria-label": escape(ariaLabel)}
  ], "bx--modal-container " + (size === "xs" ? "bx--modal-container--xs" : "") + " " + (size === "sm" ? "bx--modal-container--sm" : "") + " " + (size === "lg" ? "bx--modal-container--lg" : ""))}${add_attribute("this", innerModal, 1)}><div${add_classes(["bx--modal-header"].join(" ").trim())}>${passiveModal ? `<button type="${"button"}"${add_attribute("aria-label", iconDescription, 0)}${add_attribute("title", iconDescription, 0)}${add_classes(["bx--modal-close"].join(" ").trim())}${add_attribute("this", buttonRef, 1)}>${validate_component(Close20, "Close20").$$render($$result, {
    "aria-label": iconDescription,
    class: "bx--modal-close__icon"
  }, {}, {})}</button>` : ``}
      ${modalLabel ? `<h2${add_attribute("id", modalLabelId, 0)}${add_classes(["bx--modal-header__label"].join(" ").trim())}>${slots.label ? slots.label({}) : `${escape(modalLabel)}`}</h2>` : ``}
      <h3${add_attribute("id", modalHeadingId, 0)}${add_classes(["bx--modal-header__heading"].join(" ").trim())}>${slots.heading ? slots.heading({}) : `${escape(modalHeading)}`}</h3>
      ${!passiveModal ? `<button type="${"button"}"${add_attribute("aria-label", iconDescription, 0)}${add_attribute("title", iconDescription, 0)}${add_classes(["bx--modal-close"].join(" ").trim())}${add_attribute("this", buttonRef, 1)}>${validate_component(Close20, "Close20").$$render($$result, {
    "aria-label": iconDescription,
    class: "bx--modal-close__icon"
  }, {}, {})}</button>` : ``}</div>
    <div${add_attribute("id", modalBodyId, 0)}${add_attribute("tabindex", hasScrollingContent ? "0" : void 0, 0)}${add_attribute("role", hasScrollingContent ? "region" : void 0, 0)}${add_attribute("aria-label", hasScrollingContent ? ariaLabel : void 0, 0)}${add_attribute("aria-labelledby", modalLabel ? modalLabelId : modalHeadingId, 0)}${add_classes([
    "bx--modal-content " + (hasForm ? "bx--modal-content--with-form" : "") + " " + (hasScrollingContent ? "bx--modal-scroll-content" : "")
  ].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</div>
    ${hasScrollingContent ? `<div${add_classes(["bx--modal-content--overflow-indicator"].join(" ").trim())}></div>` : ``}
    ${!passiveModal ? `<div${add_classes([
    "bx--modal-footer " + (secondaryButtons.length === 2 ? "bx--modal-footer--three-button" : "")
  ].join(" ").trim())}>${secondaryButtons.length > 0 ? `${each(secondaryButtons, (button) => `${validate_component(Button, "Button").$$render($$result, {kind: "secondary"}, {}, {
    default: () => `${escape(button.text)}
            `
  })}`)}` : `${secondaryButtonText ? `${validate_component(Button, "Button").$$render($$result, {kind: "secondary"}, {}, {
    default: () => `${escape(secondaryButtonText)}`
  })}` : ``}`}
        ${validate_component(Button, "Button").$$render($$result, {
    kind: danger ? "danger" : "primary",
    disabled: primaryButtonDisabled,
    icon: primaryButtonIcon
  }, {}, {
    default: () => `${escape(primaryButtonText)}`
  })}</div>` : ``}</div></div>`;
});
const NotificationButton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["notificationType", "icon", "title", "iconDescription"]);
  let {notificationType = "toast"} = $$props;
  let {icon = Close20} = $$props;
  let {title = void 0} = $$props;
  let {iconDescription = "Close icon"} = $$props;
  if ($$props.notificationType === void 0 && $$bindings.notificationType && notificationType !== void 0)
    $$bindings.notificationType(notificationType);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  return `
<button${spread([
    {type: "button"},
    {"aria-label": escape(iconDescription)},
    {title: escape(iconDescription)},
    $$restProps
  ], (notificationType === "toast" ? "bx--toast-notification__close-button" : "") + " " + (notificationType === "inline" ? "bx--inline-notification__close-button" : ""))}>${validate_component(icon || missing_component, "svelte:component").$$render($$result, {
    title,
    class: "bx--" + notificationType + "-notification__close-icon"
  }, {}, {})}</button>`;
});
const CheckmarkFilled20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "CheckmarkFilled20"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 20 20"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M10,1c-4.9,0-9,4.1-9,9s4.1,9,9,9s9-4,9-9S15,1,10,1z M8.7,13.5l-3.2-3.2l1-1l2.2,2.2l4.8-4.8l1,1L8.7,13.5z"}"></path><path fill="${"none"}" d="${"M8.7,13.5l-3.2-3.2l1-1l2.2,2.2l4.8-4.8l1,1L8.7,13.5z"}" data-icon-path="${"inner-path"}" opacity="${"0"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const ErrorFilled20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "ErrorFilled20"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 20 20"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M10,1c-5,0-9,4-9,9s4,9,9,9s9-4,9-9S15,1,10,1z M13.5,14.5l-8-8l1-1l8,8L13.5,14.5z"}"></path><path d="${"M13.5,14.5l-8-8l1-1l8,8L13.5,14.5z"}" data-icon-path="${"inner-path"}" opacity="${"0"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const InformationFilled20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {
      "data-carbon-icon": "InformationFilled20"
    },
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path fill="${"none"}" d="${"M16,8a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,13.875H17.125v-8H13v2.25h1.875v5.75H12v2.25h8Z"}" data-icon-path="${"inner-path"}"></path><path d="${"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,6a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,16.125H12v-2.25h2.875v-5.75H13v-2.25h4.125v8H20Z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const InformationSquareFilled20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {
      "data-carbon-icon": "InformationSquareFilled20"
    },
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path fill="${"none"}" d="${"M16,8a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,13.875H17.125v-8H13v2.25h1.875v5.75H12v2.25h8Z"}" data-icon-path="${"inner-path"}"></path><path d="${"M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM16,8a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,16.125H12v-2.25h2.875v-5.75H13v-2.25h4.125v8H20Z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const WarningFilled20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "WarningFilled20"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 20 20"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M10,1c-5,0-9,4-9,9s4,9,9,9s9-4,9-9S15,1,10,1z M9.2,5h1.5v7H9.2V5z M10,16c-0.6,0-1-0.4-1-1s0.4-1,1-1	s1,0.4,1,1S10.6,16,10,16z"}"></path><path d="${"M9.2,5h1.5v7H9.2V5z M10,16c-0.6,0-1-0.4-1-1s0.4-1,1-1s1,0.4,1,1S10.6,16,10,16z"}" data-icon-path="${"inner-path"}" opacity="${"0"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const WarningAltFilled20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "WarningAltFilled20"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path fill="${"none"}" d="${"M16,26a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,26Zm-1.125-5h2.25V12h-2.25Z"}" data-icon-path="${"inner-path"}"></path><path d="${"M16.002,6.1714h-.004L4.6487,27.9966,4.6506,28H27.3494l.0019-.0034ZM14.875,12h2.25v9h-2.25ZM16,26a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,26Z"}"></path><path d="${"M29,30H3a1,1,0,0,1-.8872-1.4614l13-25a1,1,0,0,1,1.7744,0l13,25A1,1,0,0,1,29,30ZM4.6507,28H27.3493l.002-.0033L16.002,6.1714h-.004L4.6487,27.9967Z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const NotificationIcon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {kind = "error"} = $$props;
  let {notificationType = "toast"} = $$props;
  let {iconDescription = "Closes notification"} = $$props;
  const icons = {
    error: ErrorFilled20,
    "info-square": InformationSquareFilled20,
    info: InformationFilled20,
    success: CheckmarkFilled20,
    warning: WarningFilled20,
    "warning-alt": WarningAltFilled20
  };
  if ($$props.kind === void 0 && $$bindings.kind && kind !== void 0)
    $$bindings.kind(kind);
  if ($$props.notificationType === void 0 && $$bindings.notificationType && notificationType !== void 0)
    $$bindings.notificationType(notificationType);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  return `${validate_component(icons[kind] || missing_component, "svelte:component").$$render($$result, {
    title: iconDescription,
    class: "bx--" + notificationType + "-notification__icon"
  }, {}, {})}`;
});
const ToastNotification = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "kind",
    "lowContrast",
    "timeout",
    "role",
    "title",
    "subtitle",
    "caption",
    "iconDescription",
    "hideCloseButton"
  ]);
  let {kind = "error"} = $$props;
  let {lowContrast = false} = $$props;
  let {timeout = 0} = $$props;
  let {role = "alert"} = $$props;
  let {title = ""} = $$props;
  let {subtitle = ""} = $$props;
  let {caption = ""} = $$props;
  let {iconDescription = "Closes notification"} = $$props;
  let {hideCloseButton = false} = $$props;
  const dispatch = createEventDispatcher();
  let open = true;
  let timeoutId = void 0;
  function close(closeFromTimeout) {
    open = false;
    dispatch("close", {timeout: closeFromTimeout === true});
  }
  onMount(() => {
    if (timeout) {
      timeoutId = setTimeout(() => close(true), timeout);
    }
    return () => {
      clearTimeout(timeoutId);
    };
  });
  if ($$props.kind === void 0 && $$bindings.kind && kind !== void 0)
    $$bindings.kind(kind);
  if ($$props.lowContrast === void 0 && $$bindings.lowContrast && lowContrast !== void 0)
    $$bindings.lowContrast(lowContrast);
  if ($$props.timeout === void 0 && $$bindings.timeout && timeout !== void 0)
    $$bindings.timeout(timeout);
  if ($$props.role === void 0 && $$bindings.role && role !== void 0)
    $$bindings.role(role);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.subtitle === void 0 && $$bindings.subtitle && subtitle !== void 0)
    $$bindings.subtitle(subtitle);
  if ($$props.caption === void 0 && $$bindings.caption && caption !== void 0)
    $$bindings.caption(caption);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.hideCloseButton === void 0 && $$bindings.hideCloseButton && hideCloseButton !== void 0)
    $$bindings.hideCloseButton(hideCloseButton);
  return `
${open ? `<div${spread([{role: escape(role)}, {kind: escape(kind)}, $$restProps], "bx--toast-notification " + (lowContrast ? "bx--toast-notification--low-contrast" : "") + " " + (kind === "error" ? "bx--toast-notification--error" : "") + " " + (kind === "info" ? "bx--toast-notification--info" : "") + " " + (kind === "info-square" ? "bx--toast-notification--info-square" : "") + " " + (kind === "success" ? "bx--toast-notification--success" : "") + " " + (kind === "warning" ? "bx--toast-notification--warning" : "") + " " + (kind === "warning-alt" ? "bx--toast-notification--warning-alt" : ""))}>${validate_component(NotificationIcon, "NotificationIcon").$$render($$result, {kind}, {}, {})}
    <div${add_classes(["bx--toast-notification__details"].join(" ").trim())}><h3${add_classes(["bx--toast-notification__title"].join(" ").trim())}>${slots.title ? slots.title({}) : `${escape(title)}`}</h3>
      <div${add_classes(["bx--toast-notification__subtitle"].join(" ").trim())}>${slots.subtitle ? slots.subtitle({}) : `${escape(subtitle)}`}</div>
      <div${add_classes(["bx--toast-notification__caption"].join(" ").trim())}>${slots.caption ? slots.caption({}) : `${escape(caption)}`}</div>
      ${slots.default ? slots.default({}) : ``}</div>
    ${!hideCloseButton ? `${validate_component(NotificationButton, "NotificationButton").$$render($$result, {iconDescription}, {}, {})}` : ``}</div>` : ``}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "kind",
    "lowContrast",
    "timeout",
    "role",
    "title",
    "subtitle",
    "hideCloseButton",
    "iconDescription"
  ]);
  let {kind = "error"} = $$props;
  let {lowContrast = false} = $$props;
  let {timeout = 0} = $$props;
  let {role = "alert"} = $$props;
  let {title = ""} = $$props;
  let {subtitle = ""} = $$props;
  let {hideCloseButton = false} = $$props;
  let {iconDescription = "Closes notification"} = $$props;
  const dispatch = createEventDispatcher();
  let open = true;
  let timeoutId = void 0;
  function close(closeFromTimeout) {
    open = false;
    dispatch("close", {timeout: closeFromTimeout === true});
  }
  onMount(() => {
    if (timeout) {
      timeoutId = setTimeout(() => close(true), timeout);
    }
    return () => {
      clearTimeout(timeoutId);
    };
  });
  if ($$props.kind === void 0 && $$bindings.kind && kind !== void 0)
    $$bindings.kind(kind);
  if ($$props.lowContrast === void 0 && $$bindings.lowContrast && lowContrast !== void 0)
    $$bindings.lowContrast(lowContrast);
  if ($$props.timeout === void 0 && $$bindings.timeout && timeout !== void 0)
    $$bindings.timeout(timeout);
  if ($$props.role === void 0 && $$bindings.role && role !== void 0)
    $$bindings.role(role);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.subtitle === void 0 && $$bindings.subtitle && subtitle !== void 0)
    $$bindings.subtitle(subtitle);
  if ($$props.hideCloseButton === void 0 && $$bindings.hideCloseButton && hideCloseButton !== void 0)
    $$bindings.hideCloseButton(hideCloseButton);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  return `
${open ? `<div${spread([{role: escape(role)}, {kind: escape(kind)}, $$restProps], "bx--inline-notification " + (lowContrast ? "bx--inline-notification--low-contrast" : "") + " " + (hideCloseButton ? "bx--inline-notification--hide-close-button" : "") + " " + (kind === "error" ? "bx--inline-notification--error" : "") + " " + (kind === "info" ? "bx--inline-notification--info" : "") + " " + (kind === "info-square" ? "bx--inline-notification--info-square" : "") + " " + (kind === "success" ? "bx--inline-notification--success" : "") + " " + (kind === "warning" ? "bx--inline-notification--warning" : "") + " " + (kind === "warning-alt" ? "bx--inline-notification--warning-alt" : ""))}><div${add_classes(["bx--inline-notification__details"].join(" ").trim())}>${validate_component(NotificationIcon, "NotificationIcon").$$render($$result, {notificationType: "inline", kind}, {}, {})}
      <div${add_classes(["bx--inline-notification__text-wrapper"].join(" ").trim())}><p${add_classes(["bx--inline-notification__title"].join(" ").trim())}>${slots.title ? slots.title({}) : `${escape(title)}`}</p>
        <div${add_classes(["bx--inline-notification__subtitle"].join(" ").trim())}>${slots.subtitle ? slots.subtitle({}) : `${escape(subtitle)}`}</div>
        ${slots.default ? slots.default({}) : ``}</div></div>
    ${slots.actions ? slots.actions({}) : ``}
    ${!hideCloseButton ? `${validate_component(NotificationButton, "NotificationButton").$$render($$result, {
    iconDescription,
    notificationType: "inline"
  }, {}, {})}` : ``}</div>` : ``}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `${validate_component(Button, "Button").$$render($$result, Object.assign({kind: "ghost"}, {size: "small"}, $$restProps, {
    class: "bx--inline-notification__action-button " + $$restProps.class
  }), {}, {
    default: () => `${slots.default ? slots.default({}) : ``}`
  })}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {notificationType = "toast"} = $$props;
  let {title = "Title"} = $$props;
  let {subtitle = ""} = $$props;
  let {caption = "Caption"} = $$props;
  if ($$props.notificationType === void 0 && $$bindings.notificationType && notificationType !== void 0)
    $$bindings.notificationType(notificationType);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.subtitle === void 0 && $$bindings.subtitle && subtitle !== void 0)
    $$bindings.subtitle(subtitle);
  if ($$props.caption === void 0 && $$bindings.caption && caption !== void 0)
    $$bindings.caption(caption);
  return `

${notificationType === "toast" ? `<div${add_classes(["bx--toast-notification__details"].join(" ").trim())}><h3${add_classes(["bx--toast-notification__title"].join(" ").trim())}>${escape(title)}</h3>
    <div${add_classes(["bx--toast-notification__subtitle"].join(" ").trim())}>${escape(subtitle)}</div>
    <div${add_classes(["bx--toast-notification__caption"].join(" ").trim())}>${escape(caption)}</div>
    ${slots.default ? slots.default({}) : ``}</div>` : ``}

${notificationType === "inline" ? `<div${add_classes(["bx--inline-notification__text-wrapper"].join(" ").trim())}><p${add_classes(["bx--inline-notification__title"].join(" ").trim())}>${escape(title)}</p>
    <div${add_classes(["bx--inline-notification__subtitle"].join(" ").trim())}>${escape(subtitle)}</div>
    ${slots.default ? slots.default({}) : ``}</div>` : ``}`;
});
const Add16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Add16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M17 15L17 8 15 8 15 15 8 15 8 17 15 17 15 24 17 24 17 17 24 17 24 15z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const Subtract16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Subtract16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M8 15H24V17H8z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const EditOff16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "EditOff16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M30 28.6L3.4 2 2 3.4l10.1 10.1L4 21.6V28h6.4l8.1-8.1L28.6 30 30 28.6zM9.6 26H6v-3.6l7.5-7.5 3.6 3.6L9.6 26zM29.4 6.2L29.4 6.2l-3.6-3.6c-.8-.8-2-.8-2.8 0l0 0 0 0-8 8 1.4 1.4L20 8.4l3.6 3.6L20 15.6l1.4 1.4 8-8C30.2 8.2 30.2 7 29.4 6.2L29.4 6.2zM25 10.6L21.4 7l3-3L28 7.6 25 10.6z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let incrementLabel;
  let decrementLabel;
  let error2;
  let errorId;
  let ariaLabel;
  let $$restProps = compute_rest_props($$props, [
    "size",
    "value",
    "step",
    "max",
    "min",
    "light",
    "readonly",
    "mobile",
    "allowEmpty",
    "disabled",
    "hideSteppers",
    "iconDescription",
    "invalid",
    "invalidText",
    "warn",
    "warnText",
    "helperText",
    "label",
    "hideLabel",
    "translateWithId",
    "translationIds",
    "id",
    "name",
    "ref"
  ]);
  let $$slots = compute_slots(slots);
  let {size = void 0} = $$props;
  let {value = null} = $$props;
  let {step = 1} = $$props;
  let {max = void 0} = $$props;
  let {min = void 0} = $$props;
  let {light = false} = $$props;
  let {readonly = false} = $$props;
  let {mobile = false} = $$props;
  let {allowEmpty = false} = $$props;
  let {disabled = false} = $$props;
  let {hideSteppers = false} = $$props;
  let {iconDescription = ""} = $$props;
  let {invalid = false} = $$props;
  let {invalidText = ""} = $$props;
  let {warn = false} = $$props;
  let {warnText = ""} = $$props;
  let {helperText = ""} = $$props;
  let {label = ""} = $$props;
  let {hideLabel = false} = $$props;
  let {translateWithId = (id2) => defaultTranslations[id2]} = $$props;
  const translationIds = {
    increment: "increment",
    decrement: "decrement"
  };
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  let {ref = null} = $$props;
  const defaultTranslations = {
    [translationIds.increment]: "Increment number",
    [translationIds.decrement]: "Decrement number"
  };
  createEventDispatcher();
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.step === void 0 && $$bindings.step && step !== void 0)
    $$bindings.step(step);
  if ($$props.max === void 0 && $$bindings.max && max !== void 0)
    $$bindings.max(max);
  if ($$props.min === void 0 && $$bindings.min && min !== void 0)
    $$bindings.min(min);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.readonly === void 0 && $$bindings.readonly && readonly !== void 0)
    $$bindings.readonly(readonly);
  if ($$props.mobile === void 0 && $$bindings.mobile && mobile !== void 0)
    $$bindings.mobile(mobile);
  if ($$props.allowEmpty === void 0 && $$bindings.allowEmpty && allowEmpty !== void 0)
    $$bindings.allowEmpty(allowEmpty);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.hideSteppers === void 0 && $$bindings.hideSteppers && hideSteppers !== void 0)
    $$bindings.hideSteppers(hideSteppers);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.invalidText === void 0 && $$bindings.invalidText && invalidText !== void 0)
    $$bindings.invalidText(invalidText);
  if ($$props.warn === void 0 && $$bindings.warn && warn !== void 0)
    $$bindings.warn(warn);
  if ($$props.warnText === void 0 && $$bindings.warnText && warnText !== void 0)
    $$bindings.warnText(warnText);
  if ($$props.helperText === void 0 && $$bindings.helperText && helperText !== void 0)
    $$bindings.helperText(helperText);
  if ($$props.label === void 0 && $$bindings.label && label !== void 0)
    $$bindings.label(label);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.translateWithId === void 0 && $$bindings.translateWithId && translateWithId !== void 0)
    $$bindings.translateWithId(translateWithId);
  if ($$props.translationIds === void 0 && $$bindings.translationIds && translationIds !== void 0)
    $$bindings.translationIds(translationIds);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  incrementLabel = translateWithId("increment");
  decrementLabel = translateWithId("decrement");
  error2 = invalid || !allowEmpty && value == null || value > max || value < min;
  errorId = `error-${id}`;
  ariaLabel = $$props["aria-label"] || "Numeric input field with increment and decrement buttons";
  return `
<div${add_classes(["bx--form-item"].join(" ").trim())}><div${add_attribute("data-invalid", error2 || void 0, 0)} class="${[
    escape(size && `bx--number--${size}`),
    "bx--number bx--number--helpertext " + (readonly ? "bx--number--readonly" : "") + " " + (light ? "bx--number--light" : "") + " " + (hideLabel ? "bx--number--nolabel" : "") + " " + (hideSteppers ? "bx--number--nosteppers" : "") + " " + (mobile ? "bx--number--mobile" : "")
  ].join(" ").trim()}">${mobile ? `${$$slots.label || label ? `<label${add_attribute("for", id, 0)}${add_classes([
    "bx--label " + (disabled ? "bx--label--disabled" : "") + " " + (hideLabel ? "bx--visually-hidden" : "")
  ].join(" ").trim())}>${slots.label ? slots.label({}) : `${escape(label)}`}</label>` : ``}
      <div${add_classes([
    "bx--number__input-wrapper " + (!invalid && warn ? "bx--number__input-wrapper--warning" : "")
  ].join(" ").trim())}><button type="${"button"}" aria-live="${"polite"}" aria-atomic="${"true"}"${add_attribute("title", decrementLabel, 0)}${add_attribute("aria-label", decrementLabel || iconDescription, 0)} ${disabled ? "disabled" : ""}${add_classes(["bx--number__control-btn down-icon"].join(" ").trim())}>${validate_component(Subtract16, "Subtract16").$$render($$result, {class: "down-icon"}, {}, {})}</button>
        <input${spread([
    {type: "number"},
    {pattern: "[0-9]*"},
    {
      "aria-label": escape(label ? void 0 : ariaLabel)
    },
    {disabled: disabled || null},
    {id: escape(id)},
    {name: escape(name)},
    {max: escape(max)},
    {min: escape(min)},
    {step: escape(step)},
    {value: escape(value != null ? value : "")},
    {readonly: readonly || null},
    $$restProps
  ])}${add_attribute("this", ref, 1)}>
        <button type="${"button"}" aria-live="${"polite"}" aria-atomic="${"true"}"${add_attribute("title", incrementLabel, 0)}${add_attribute("aria-label", incrementLabel || iconDescription, 0)} ${disabled ? "disabled" : ""}${add_classes(["bx--number__control-btn up-icon"].join(" ").trim())}>${validate_component(Add16, "Add16").$$render($$result, {class: "up-icon"}, {}, {})}</button></div>` : `${$$slots.label || label ? `<label${add_attribute("for", id, 0)}${add_classes([
    "bx--label " + (disabled ? "bx--label--disabled" : "") + " " + (hideLabel ? "bx--visually-hidden" : "")
  ].join(" ").trim())}>${slots.label ? slots.label({}) : `${escape(label)}`}</label>` : ``}
      <div${add_classes([
    "bx--number__input-wrapper " + (!invalid && warn ? "bx--number__input-wrapper--warning" : "")
  ].join(" ").trim())}><input${spread([
    {type: "number"},
    {pattern: "[0-9]*"},
    {"aria-describedby": escape(errorId)},
    {
      "data-invalid": escape(invalid || void 0)
    },
    {
      "aria-invalid": escape(invalid || void 0)
    },
    {
      "aria-label": escape(label ? void 0 : ariaLabel)
    },
    {disabled: disabled || null},
    {id: escape(id)},
    {name: escape(name)},
    {max: escape(max)},
    {min: escape(min)},
    {step: escape(step)},
    {value: escape(value != null ? value : "")},
    {readonly: readonly || null},
    $$restProps
  ])}${add_attribute("this", ref, 1)}>
        ${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {class: "bx--number__invalid"}, {}, {})}` : ``}
        ${!invalid && warn ? `${validate_component(WarningAltFilled16, "WarningAltFilled16").$$render($$result, {
    class: "bx--number__invalid bx--number__invalid--warning"
  }, {}, {})}` : ``}
        ${readonly ? `${validate_component(EditOff16, "EditOff16").$$render($$result, {class: "bx--text-input__readonly-icon"}, {}, {})}` : ``}
        ${!hideSteppers ? `<div${add_classes(["bx--number__controls"].join(" ").trim())}><button type="${"button"}" tabindex="${"-1"}"${add_attribute("title", decrementLabel || iconDescription, 0)}${add_attribute("aria-label", decrementLabel || iconDescription, 0)} ${disabled ? "disabled" : ""}${add_classes(["bx--number__control-btn down-icon"].join(" ").trim())}>${validate_component(Subtract16, "Subtract16").$$render($$result, {class: "down-icon"}, {}, {})}</button>
            <div${add_classes(["bx--number__rule-divider"].join(" ").trim())}></div>
            <button type="${"button"}" tabindex="${"-1"}"${add_attribute("title", incrementLabel || iconDescription, 0)}${add_attribute("aria-label", incrementLabel || iconDescription, 0)} ${disabled ? "disabled" : ""}${add_classes(["bx--number__control-btn up-icon"].join(" ").trim())}>${validate_component(Add16, "Add16").$$render($$result, {class: "up-icon"}, {}, {})}</button>
            <div${add_classes(["bx--number__rule-divider"].join(" ").trim())}></div></div>` : ``}</div>`}
    ${!error2 && !warn && helperText ? `<div${add_classes([
    "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "")
  ].join(" ").trim())}>${escape(helperText)}</div>` : ``}
    ${error2 ? `<div${add_attribute("id", errorId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(invalidText)}</div>` : ``}
    ${!error2 && warn ? `<div${add_attribute("id", errorId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(warnText)}</div>` : ``}</div></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["hideLabel"]);
  let {hideLabel = false} = $$props;
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  return `
<div${spread([$$restProps], "bx--form-item")}>${!hideLabel ? `<span${add_classes(["bx--label bx--skeleton"].join(" ").trim())}></span>` : ``}
  <div${add_classes(["bx--number bx--skeleton"].join(" ").trim())}></div></div>`;
});
const OrderedList = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["nested", "native", "expressive"]);
  let {nested = false} = $$props;
  let {native = false} = $$props;
  let {expressive = false} = $$props;
  if ($$props.nested === void 0 && $$bindings.nested && nested !== void 0)
    $$bindings.nested(nested);
  if ($$props.native === void 0 && $$bindings.native && native !== void 0)
    $$bindings.native(native);
  if ($$props.expressive === void 0 && $$bindings.expressive && expressive !== void 0)
    $$bindings.expressive(expressive);
  return `
<ol${spread([$$restProps], (!native ? "bx--list--ordered" : "") + " " + (native ? "bx--list--ordered--native" : "") + " " + (nested ? "bx--list--nested" : "") + " " + (expressive ? "bx--list--expressive" : ""))}>${slots.default ? slots.default({}) : ``}</ol>`;
});
const CaretLeft16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "CaretLeft16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M20 24L10 16 20 8z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const Select = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let errorId;
  let $$restProps = compute_rest_props($$props, [
    "selected",
    "size",
    "inline",
    "light",
    "disabled",
    "id",
    "name",
    "invalid",
    "invalidText",
    "warn",
    "warnText",
    "helperText",
    "noLabel",
    "labelText",
    "hideLabel",
    "ref",
    "required"
  ]);
  let $selectedValue, $$unsubscribe_selectedValue;
  let {selected: selected2 = void 0} = $$props;
  let {size = void 0} = $$props;
  let {inline = false} = $$props;
  let {light = false} = $$props;
  let {disabled = false} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  let {invalid = false} = $$props;
  let {invalidText = ""} = $$props;
  let {warn = false} = $$props;
  let {warnText = ""} = $$props;
  let {helperText = ""} = $$props;
  let {noLabel = false} = $$props;
  let {labelText = ""} = $$props;
  let {hideLabel = false} = $$props;
  let {ref = null} = $$props;
  let {required = false} = $$props;
  const dispatch = createEventDispatcher();
  const selectedValue = writable(selected2);
  $$unsubscribe_selectedValue = subscribe(selectedValue, (value) => $selectedValue = value);
  setContext("Select", {selectedValue});
  afterUpdate(() => {
    selected2 = $selectedValue;
    dispatch("change", $selectedValue);
  });
  if ($$props.selected === void 0 && $$bindings.selected && selected2 !== void 0)
    $$bindings.selected(selected2);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.inline === void 0 && $$bindings.inline && inline !== void 0)
    $$bindings.inline(inline);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.invalidText === void 0 && $$bindings.invalidText && invalidText !== void 0)
    $$bindings.invalidText(invalidText);
  if ($$props.warn === void 0 && $$bindings.warn && warn !== void 0)
    $$bindings.warn(warn);
  if ($$props.warnText === void 0 && $$bindings.warnText && warnText !== void 0)
    $$bindings.warnText(warnText);
  if ($$props.helperText === void 0 && $$bindings.helperText && helperText !== void 0)
    $$bindings.helperText(helperText);
  if ($$props.noLabel === void 0 && $$bindings.noLabel && noLabel !== void 0)
    $$bindings.noLabel(noLabel);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  if ($$props.required === void 0 && $$bindings.required && required !== void 0)
    $$bindings.required(required);
  errorId = `error-${id}`;
  {
    selectedValue.set(selected2);
  }
  $$unsubscribe_selectedValue();
  return `<div${spread([$$restProps], "bx--form-item")}><div${add_classes([
    "bx--select " + (inline ? "bx--select--inline" : "") + " " + (light ? "bx--select--light" : "") + " " + (invalid ? "bx--select--invalid" : "") + " " + (disabled ? "bx--select--disabled" : "") + " " + (warn ? "bx--select--warning" : "")
  ].join(" ").trim())}>${!noLabel ? `<label${add_attribute("for", id, 0)}${add_classes([
    "bx--label " + (hideLabel ? "bx--visually-hidden" : "") + " " + (disabled ? "bx--label--disabled" : "")
  ].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
          ${escape(labelText)}
        `}</label>` : ``}
    ${inline ? `<div${add_classes(["bx--select-input--inline__wrapper"].join(" ").trim())}><div${add_attribute("data-invalid", invalid || void 0, 0)}${add_classes(["bx--select-input__wrapper"].join(" ").trim())}><select${add_attribute("aria-describedby", invalid ? errorId : void 0, 0)}${add_attribute("aria-invalid", invalid || void 0, 0)} ${disabled || void 0 ? "disabled" : ""} ${required || void 0 ? "required" : ""}${add_attribute("id", id, 0)}${add_attribute("name", name, 0)} class="${[escape(size && `bx--select-input--${size}`), "bx--select-input"].join(" ").trim()}"${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}</select>
          ${validate_component(ChevronDown16, "ChevronDown16").$$render($$result, {class: "bx--select__arrow"}, {}, {})}
          ${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {class: "bx--select__invalid-icon"}, {}, {})}` : ``}</div>
        ${invalid ? `<div${add_attribute("id", errorId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(invalidText)}</div>` : ``}</div>
      ${helperText ? `<div${add_classes([
    "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "")
  ].join(" ").trim())}>${escape(helperText)}</div>` : ``}` : ``}
    ${!inline ? `<div${add_attribute("data-invalid", invalid || void 0, 0)}${add_classes(["bx--select-input__wrapper"].join(" ").trim())}><select${add_attribute("id", id, 0)}${add_attribute("name", name, 0)}${add_attribute("aria-describedby", invalid ? errorId : void 0, 0)} ${disabled || void 0 ? "disabled" : ""} ${required || void 0 ? "required" : ""}${add_attribute("aria-invalid", invalid || void 0, 0)} class="${[escape(size && `bx--select-input--${size}`), "bx--select-input"].join(" ").trim()}"${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}</select>
        ${validate_component(ChevronDown16, "ChevronDown16").$$render($$result, {class: "bx--select__arrow"}, {}, {})}
        ${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {class: "bx--select__invalid-icon"}, {}, {})}` : ``}
        ${!invalid && warn ? `${validate_component(WarningAltFilled16, "WarningAltFilled16").$$render($$result, {
    class: "bx--select__invalid-icon bx--select__invalid-icon--warning"
  }, {}, {})}` : ``}</div>
      ${!invalid && helperText ? `<div${add_classes([
    "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "")
  ].join(" ").trim())}>${escape(helperText)}</div>` : ``}
      ${invalid ? `<div${add_attribute("id", errorId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(invalidText)}</div>` : ``}
      ${!invalid && warn ? `<div${add_attribute("id", errorId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(warnText)}</div>` : ``}` : ``}</div></div>`;
});
const SelectItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["value", "text", "hidden", "disabled"]);
  let {value = ""} = $$props;
  let {text = ""} = $$props;
  let {hidden = false} = $$props;
  let {disabled = false} = $$props;
  const ctx = getContext("Select") || getContext("TimePickerSelect");
  let selected2 = false;
  const unsubscribe = ctx.selectedValue.subscribe((currentValue) => {
    selected2 = currentValue === value;
  });
  onMount(() => {
    return () => unsubscribe();
  });
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.hidden === void 0 && $$bindings.hidden && hidden !== void 0)
    $$bindings.hidden(hidden);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  return `<option${add_attribute("value", value, 0)} ${disabled ? "disabled" : ""} ${hidden ? "hidden" : ""} ${selected2 ? "selected" : ""} class="${[escape($$restProps.class), "bx--select-option"].join(" ").trim()}"${add_attribute("style", $$restProps.style, 0)}>${escape(text || value)}</option>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let totalPages;
  let selectItems;
  let backButtonDisabled;
  let forwardButtonDisabled;
  let $$restProps = compute_rest_props($$props, [
    "page",
    "totalItems",
    "disabled",
    "forwardText",
    "backwardText",
    "itemsPerPageText",
    "itemText",
    "itemRangeText",
    "pageInputDisabled",
    "pageSizeInputDisabled",
    "pageSize",
    "pageSizes",
    "pagesUnknown",
    "pageText",
    "pageRangeText",
    "id"
  ]);
  let {page = 1} = $$props;
  let {totalItems = 0} = $$props;
  let {disabled = false} = $$props;
  let {forwardText = "Next page"} = $$props;
  let {backwardText = "Previous page"} = $$props;
  let {itemsPerPageText = "Items per page:"} = $$props;
  let {itemText = (min, max) => `${min}\u2013${max} items`} = $$props;
  let {itemRangeText = (min, max, total) => `${min}\u2013${max} of ${total} items`} = $$props;
  let {pageInputDisabled = false} = $$props;
  let {pageSizeInputDisabled = false} = $$props;
  let {pageSize = 10} = $$props;
  let {pageSizes = [10]} = $$props;
  let {pagesUnknown = false} = $$props;
  let {pageText = (page2) => `page ${page2}`} = $$props;
  let {pageRangeText = (current, total) => `of ${total} page${total === 1 ? "" : "s"}`} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  const dispatch = createEventDispatcher();
  afterUpdate(() => {
    if (page > totalPages) {
      page = totalPages;
    }
  });
  if ($$props.page === void 0 && $$bindings.page && page !== void 0)
    $$bindings.page(page);
  if ($$props.totalItems === void 0 && $$bindings.totalItems && totalItems !== void 0)
    $$bindings.totalItems(totalItems);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.forwardText === void 0 && $$bindings.forwardText && forwardText !== void 0)
    $$bindings.forwardText(forwardText);
  if ($$props.backwardText === void 0 && $$bindings.backwardText && backwardText !== void 0)
    $$bindings.backwardText(backwardText);
  if ($$props.itemsPerPageText === void 0 && $$bindings.itemsPerPageText && itemsPerPageText !== void 0)
    $$bindings.itemsPerPageText(itemsPerPageText);
  if ($$props.itemText === void 0 && $$bindings.itemText && itemText !== void 0)
    $$bindings.itemText(itemText);
  if ($$props.itemRangeText === void 0 && $$bindings.itemRangeText && itemRangeText !== void 0)
    $$bindings.itemRangeText(itemRangeText);
  if ($$props.pageInputDisabled === void 0 && $$bindings.pageInputDisabled && pageInputDisabled !== void 0)
    $$bindings.pageInputDisabled(pageInputDisabled);
  if ($$props.pageSizeInputDisabled === void 0 && $$bindings.pageSizeInputDisabled && pageSizeInputDisabled !== void 0)
    $$bindings.pageSizeInputDisabled(pageSizeInputDisabled);
  if ($$props.pageSize === void 0 && $$bindings.pageSize && pageSize !== void 0)
    $$bindings.pageSize(pageSize);
  if ($$props.pageSizes === void 0 && $$bindings.pageSizes && pageSizes !== void 0)
    $$bindings.pageSizes(pageSizes);
  if ($$props.pagesUnknown === void 0 && $$bindings.pagesUnknown && pagesUnknown !== void 0)
    $$bindings.pagesUnknown(pagesUnknown);
  if ($$props.pageText === void 0 && $$bindings.pageText && pageText !== void 0)
    $$bindings.pageText(pageText);
  if ($$props.pageRangeText === void 0 && $$bindings.pageRangeText && pageRangeText !== void 0)
    $$bindings.pageRangeText(pageRangeText);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    {
      {
        if (typeof page !== "number") {
          page = Number(page);
        }
        if (typeof pageSize !== "number") {
          pageSize = Number(pageSize);
        }
        dispatch("update", {pageSize, page});
      }
    }
    totalPages = Math.max(Math.ceil(totalItems / pageSize), 1);
    selectItems = Array.from({length: totalPages}, (_, i) => i);
    backButtonDisabled = disabled || page === 1;
    forwardButtonDisabled = disabled || page === totalPages;
    $$rendered = `<div${spread([{id: escape(id)}, $$restProps], "bx--pagination")}><div${add_classes(["bx--pagination__left"].join(" ").trim())}>${!pageSizeInputDisabled ? `<label id="${"bx--pagination-select-" + escape(id) + "-count-label"}" for="${"bx--pagination-select-" + escape(id)}"${add_classes(["bx--pagination__text"].join(" ").trim())}>${escape(itemsPerPageText)}</label>
      ${validate_component(Select, "Select").$$render($$result, {
      id: "bx--pagination-select-" + id,
      class: "bx--select__item-count",
      hideLabel: true,
      noLabel: true,
      inline: true,
      selected: pageSize
    }, {
      selected: ($$value) => {
        pageSize = $$value;
        $$settled = false;
      }
    }, {
      default: () => `${each(pageSizes, (size, i) => `${validate_component(SelectItem, "SelectItem").$$render($$result, {value: size, text: size.toString()}, {}, {})}`)}`
    })}` : ``}
    <span${add_classes([!pageSizeInputDisabled ? "bx--pagination__text" : ""].join(" ").trim())}>${pagesUnknown ? `${escape(itemText(pageSize * (page - 1) + 1, page * pageSize))}` : `${escape(itemRangeText(Math.min(pageSize * (page - 1) + 1, totalItems), Math.min(page * pageSize, totalItems), totalItems))}`}</span></div>
  <div${add_classes(["bx--pagination__right"].join(" ").trim())}>${!pageInputDisabled ? `${validate_component(Select, "Select").$$render($$result, {
      id: "bx--pagination-select-" + (id + 2),
      class: "bx--select__page-number",
      labelText: "Page number, of " + totalPages + " pages",
      inline: true,
      hideLabel: true,
      selected: page
    }, {
      selected: ($$value) => {
        page = $$value;
        $$settled = false;
      }
    }, {
      default: () => `${each(selectItems, (size, i) => `${validate_component(SelectItem, "SelectItem").$$render($$result, {
        value: size + 1,
        text: (size + 1).toString()
      }, {}, {})}`)}`
    })}
      <span${add_classes(["bx--pagination__text"].join(" ").trim())}>${pagesUnknown ? `${escape(pageText(page))}` : `${escape(pageRangeText(page, totalPages))}`}</span>` : ``}
    ${validate_component(Button, "Button").$$render($$result, {
      hasIconOnly: true,
      kind: "ghost",
      tooltipAlignment: "center",
      tooltipPosition: "top",
      icon: CaretLeft16,
      iconDescription: backwardText,
      disabled: backButtonDisabled,
      class: "bx--pagination__button bx--pagination__button--backward " + (backButtonDisabled ? "bx--pagination__button--no-index" : "")
    }, {}, {})}
    ${validate_component(Button, "Button").$$render($$result, {
      hasIconOnly: true,
      kind: "ghost",
      tooltipAlignment: "end",
      tooltipPosition: "top",
      icon: CaretRight16,
      iconDescription: forwardText,
      disabled: forwardButtonDisabled,
      class: "bx--pagination__button bx--pagination__button--forward " + (forwardButtonDisabled ? "bx--pagination__button--no-index" : "")
    }, {}, {})}</div></div>`;
  } while (!$$settled);
  return $$rendered;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<div${spread([$$restProps], "bx--pagination bx--skeleton")}><div${add_classes(["bx--pagination__left"].join(" ").trim())}>${validate_component(SkeletonText, "SkeletonText").$$render($$result, {width: "70px"}, {}, {})}
    ${validate_component(SkeletonText, "SkeletonText").$$render($$result, {width: "35px"}, {}, {})}
    ${validate_component(SkeletonText, "SkeletonText").$$render($$result, {width: "105px"}, {}, {})}</div>
  <div${add_classes([
    "bx--pagination__right bx--pagination--inline"
  ].join(" ").trim())}>${validate_component(SkeletonText, "SkeletonText").$$render($$result, {width: "70px"}, {}, {})}</div></div>`;
});
const PaginationItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {page = 0} = $$props;
  let {active = false} = $$props;
  if ($$props.page === void 0 && $$bindings.page && page !== void 0)
    $$bindings.page(page);
  if ($$props.active === void 0 && $$bindings.active && active !== void 0)
    $$bindings.active(active);
  return `<li${add_classes(["bx--pagination-nav__list-item"].join(" ").trim())}><button${add_attribute("data-page", page, 0)}${add_attribute("aria-current", active ? "page" : void 0, 0)}${add_classes([
    "bx--pagination-nav__page " + (active ? "bx--pagination-nav__page--active" : "")
  ].join(" ").trim())}><span${add_classes(["bx--pagination-nav__accessibility-label"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</span>
    ${escape(page)}</button></li>`;
});
const PaginationOverflow = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {fromIndex = 0} = $$props;
  let {count = 0} = $$props;
  createEventDispatcher();
  let value = "";
  if ($$props.fromIndex === void 0 && $$bindings.fromIndex && fromIndex !== void 0)
    $$bindings.fromIndex(fromIndex);
  if ($$props.count === void 0 && $$bindings.count && count !== void 0)
    $$bindings.count(count);
  return `${count > 1 ? `<li${add_classes(["bx--pagination-nav__list-item"].join(" ").trim())}><div${add_classes(["bx--pagination-nav__select"].join(" ").trim())}>
      <select aria-label="${"Select Page number"}"${add_attribute("value", value, 0)}${add_classes([
    "bx--pagination-nav__page bx--pagination-nav__page--select"
  ].join(" ").trim())}><option value="${""}" hidden></option>${each(Array.from({length: count}, (_, i) => i), (i) => `<option${add_attribute("value", fromIndex + i, 0)}${add_attribute("data-page", fromIndex + i + 1, 0)}>${escape(fromIndex + i + 1)}
          </option>`)}</select>
      <div${add_classes(["bx--pagination-nav__select-icon-wrapper"].join(" ").trim())}>${validate_component(OverflowMenuHorizontal16, "OverflowMenuHorizontal16").$$render($$result, {class: "bx--pagination-nav__select-icon"}, {}, {})}</div></div></li>` : `${count === 1 ? `${validate_component(PaginationItem, "PaginationItem").$$render($$result, {page: fromIndex + 1}, {}, {
    default: () => `Page
  `
  })}` : ``}`}`;
});
const MIN = 4;
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let fit;
  let startOffset;
  let items;
  let $$restProps = compute_rest_props($$props, ["page", "total", "shown", "loop", "forwardText", "backwardText"]);
  let {page = 0} = $$props;
  let {total = 10} = $$props;
  let {shown = 10} = $$props;
  let {loop = false} = $$props;
  let {forwardText = "Next page"} = $$props;
  let {backwardText = "Previous page"} = $$props;
  const dispatch = createEventDispatcher();
  afterUpdate(() => {
    dispatch("change", {page});
  });
  let front = 0;
  let back = 0;
  if ($$props.page === void 0 && $$bindings.page && page !== void 0)
    $$bindings.page(page);
  if ($$props.total === void 0 && $$bindings.total && total !== void 0)
    $$bindings.total(total);
  if ($$props.shown === void 0 && $$bindings.shown && shown !== void 0)
    $$bindings.shown(shown);
  if ($$props.loop === void 0 && $$bindings.loop && loop !== void 0)
    $$bindings.loop(loop);
  if ($$props.forwardText === void 0 && $$bindings.forwardText && forwardText !== void 0)
    $$bindings.forwardText(forwardText);
  if ($$props.backwardText === void 0 && $$bindings.backwardText && backwardText !== void 0)
    $$bindings.backwardText(backwardText);
  fit = shown >= MIN ? shown : MIN;
  startOffset = fit <= MIN && page > 1 ? 0 : 1;
  {
    if (fit >= total) {
      front = 0;
      back = 0;
    }
  }
  {
    if (fit < total) {
      const split = Math.ceil(fit / 2) - 1;
      front = page - split + 1;
      back = total - page - (fit - split) + 1;
      if (front <= 1) {
        back -= front <= 0 ? Math.abs(front) + 1 : 0;
        front = 0;
      }
      if (back <= 1) {
        front -= back <= 0 ? Math.abs(back) + 1 : 0;
        back = 0;
      }
    }
  }
  items = Array.from({length: total}).map((e, i) => i).slice(startOffset + front, (back + 1) * -1);
  return `<nav${spread([{"aria-label": "pagination"}, $$restProps], "bx--pagination-nav")}><ul${add_classes(["bx--pagination-nav__list"].join(" ").trim())}><li${add_classes(["bx--pagination-nav__list-item"].join(" ").trim())}>${validate_component(Button, "Button").$$render($$result, {
    hasIconOnly: true,
    kind: "ghost",
    tooltipAlignment: "center",
    tooltipPosition: "bottom",
    iconDescription: backwardText,
    disabled: !loop && page === 0,
    icon: CaretLeft16
  }, {}, {})}</li>
    ${fit > MIN || fit <= MIN && page <= 1 ? `${validate_component(PaginationItem, "PaginationItem").$$render($$result, {page: 1, active: page === 0}, {}, {
    default: () => `${escape(page === 0 ? "Active, Page" : "Page")}`
  })}` : ``}
    ${validate_component(PaginationOverflow, "PaginationOverflow").$$render($$result, {fromIndex: startOffset, count: front}, {}, {})}
    ${each(items, (item) => `${validate_component(PaginationItem, "PaginationItem").$$render($$result, {page: item + 1, active: page === item}, {}, {
    default: () => `${escape(page === item ? "Active, Page" : "Page")}
      `
  })}`)}
    ${validate_component(PaginationOverflow, "PaginationOverflow").$$render($$result, {fromIndex: total - back - 1, count: back}, {}, {})}
    ${total > 1 ? `${validate_component(PaginationItem, "PaginationItem").$$render($$result, {page: total, active: page === total - 1}, {}, {
    default: () => `${escape(page === total - 1 ? "Active, Page" : "Page")}`
  })}` : ``}
    <li${add_classes(["bx--pagination-nav__list-item"].join(" ").trim())}>${validate_component(Button, "Button").$$render($$result, {
    hasIconOnly: true,
    kind: "ghost",
    tooltipAlignment: "center",
    tooltipPosition: "bottom",
    iconDescription: forwardText,
    disabled: !loop && page === total - 1,
    icon: CaretRight16
  }, {}, {})}</li></ul>
  <div aria-live="${"polite"}" aria-atomic="${"true"}"${add_classes(["bx--pagination-nav__accessibility-label"].join(" ").trim())}>Page
    ${escape(page + 1)}
    of
    ${escape(total)}</div></nav>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["open", "closeOnOutsideClick", "caret", "align", "light", "highContrast", "relative"]);
  let {open = false} = $$props;
  let {closeOnOutsideClick = false} = $$props;
  let {caret = false} = $$props;
  let {align = "top"} = $$props;
  let {light = false} = $$props;
  let {highContrast = false} = $$props;
  let {relative = false} = $$props;
  createEventDispatcher();
  let ref = null;
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.closeOnOutsideClick === void 0 && $$bindings.closeOnOutsideClick && closeOnOutsideClick !== void 0)
    $$bindings.closeOnOutsideClick(closeOnOutsideClick);
  if ($$props.caret === void 0 && $$bindings.caret && caret !== void 0)
    $$bindings.caret(caret);
  if ($$props.align === void 0 && $$bindings.align && align !== void 0)
    $$bindings.align(align);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.highContrast === void 0 && $$bindings.highContrast && highContrast !== void 0)
    $$bindings.highContrast(highContrast);
  if ($$props.relative === void 0 && $$bindings.relative && relative !== void 0)
    $$bindings.relative(relative);
  return `

<div${spread([
    $$restProps,
    {
      style: escape($$restProps.style) + "; " + escape(relative && "position: relative")
    }
  ], "bx--popover " + (caret ? "bx--popover--caret" : "") + " " + (light ? "bx--popover--light" : "") + " " + (highContrast ? "bx--popover--high-contrast" : "") + " " + (align === "top" ? "bx--popover--top" : "") + " " + (align === "top-left" ? "bx--popover--top-left" : "") + " " + (align === "top-right" ? "bx--popover--top-right" : "") + " " + (align === "bottom" ? "bx--popover--bottom" : "") + " " + (align === "bottom-left" ? "bx--popover--bottom-left" : "") + " " + (align === "bottom-right" ? "bx--popover--bottom-right" : "") + " " + (align === "left" ? "bx--popover--left" : "") + " " + (align === "left-bottom" ? "bx--popover--left-bottom" : "") + " " + (align === "left-top" ? "bx--popover--left-top" : "") + " " + (align === "right" ? "bx--popover--right" : "") + " " + (align === "right-bottom" ? "bx--popover--right-bottom" : "") + " " + (align === "right-top" ? "bx--popover--right-top" : "") + " " + (open ? "bx--popover--open" : "") + " " + (relative ? "bx--popover--relative" : ""))}${add_attribute("this", ref, 1)}><div${add_classes(["bx--popover-contents"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</div></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let indeterminate;
  let capped;
  let $$restProps = compute_rest_props($$props, ["value", "max", "size", "labelText", "hideLabel", "helperText", "id"]);
  let {value = void 0} = $$props;
  let {max = 100} = $$props;
  let {size = "md"} = $$props;
  let {labelText = ""} = $$props;
  let {hideLabel = false} = $$props;
  let {helperText = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let helperId = "ccs-" + Math.random().toString(36);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.max === void 0 && $$bindings.max && max !== void 0)
    $$bindings.max(max);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.helperText === void 0 && $$bindings.helperText && helperText !== void 0)
    $$bindings.helperText(helperText);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  indeterminate = value === void 0;
  capped = value > max ? max : value < 0 ? 0 : value;
  return `<div${spread([$$restProps], "bx--progress-bar " + (indeterminate ? "bx--progress-bar--indeterminate" : "") + " " + (size === "md" ? "bx--progress-bar--big" : "") + " " + (size === "sm" ? "bx--progress-bar--small" : ""))}><label${add_attribute("for", id, 0)}${add_classes([
    "bx--progress-bar__label " + (hideLabel ? "bx--visually-hidden" : "")
  ].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
      ${escape(labelText)}
    `}</label>
  <div role="${"progressbar"}"${add_attribute("id", id, 0)}${add_attribute("aria-valuemin", indeterminate ? void 0 : 0, 0)}${add_attribute("aria-valuemax", indeterminate ? void 0 : max, 0)}${add_attribute("aria-valuenow", indeterminate ? void 0 : capped, 0)}${add_attribute("aria-describedby", helperText ? helperId : null, 0)}${add_classes(["bx--progress-bar__track"].join(" ").trim())}><div style="${"transform: scaleX(" + escape(capped / max) + ")"}"${add_classes(["bx--progress-bar__bar"].join(" ").trim())}></div></div>
  ${helperText ? `<div${add_attribute("id", helperId, 0)}${add_classes(["bx--progress-bar__helper-text"].join(" ").trim())}>${escape(helperText)}</div>` : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["currentIndex", "vertical", "spaceEqually", "preventChangeOnClick"]);
  let $stepsById, $$unsubscribe_stepsById;
  let {currentIndex = 0} = $$props;
  let {vertical = false} = $$props;
  let {spaceEqually = false} = $$props;
  let {preventChangeOnClick = false} = $$props;
  const dispatch = createEventDispatcher();
  const steps = writable([]);
  const stepsById = derived(steps, ($) => $.reduce((a, c) => ({...a, [c.id]: c}), {}));
  $$unsubscribe_stepsById = subscribe(stepsById, (value) => $stepsById = value);
  setContext("ProgressIndicator", {
    steps,
    stepsById,
    add: (step) => {
      steps.update((_) => {
        if (step.id in $stepsById) {
          return _.map((_step) => {
            if (_step.id === step.id)
              return {..._step, ...step};
            return _step;
          });
        }
        return [
          ..._,
          {
            ...step,
            index: _.length,
            current: _.length === currentIndex,
            complete: step.complete
          }
        ];
      });
    },
    change: (index2) => {
      if (preventChangeOnClick)
        return;
      currentIndex = index2;
      dispatch("change", index2);
    }
  });
  if ($$props.currentIndex === void 0 && $$bindings.currentIndex && currentIndex !== void 0)
    $$bindings.currentIndex(currentIndex);
  if ($$props.vertical === void 0 && $$bindings.vertical && vertical !== void 0)
    $$bindings.vertical(vertical);
  if ($$props.spaceEqually === void 0 && $$bindings.spaceEqually && spaceEqually !== void 0)
    $$bindings.spaceEqually(spaceEqually);
  if ($$props.preventChangeOnClick === void 0 && $$bindings.preventChangeOnClick && preventChangeOnClick !== void 0)
    $$bindings.preventChangeOnClick(preventChangeOnClick);
  {
    steps.update((_) => _.map((step, i) => ({...step, current: i === currentIndex})));
  }
  $$unsubscribe_stepsById();
  return `
<ul${spread([$$restProps], "bx--progress " + (vertical ? "bx--progress--vertical" : "") + " " + (spaceEqually && !vertical ? "bx--progress--space-equal" : ""))}>${slots.default ? slots.default({}) : ``}</ul>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["vertical", "count"]);
  let {vertical = false} = $$props;
  let {count = 4} = $$props;
  if ($$props.vertical === void 0 && $$bindings.vertical && vertical !== void 0)
    $$bindings.vertical(vertical);
  if ($$props.count === void 0 && $$bindings.count && count !== void 0)
    $$bindings.count(count);
  return `
<ul${spread([$$restProps], "bx--progress " + (vertical ? "bx--progress--vertical" : "") + " bx--skeleton")}>${each(Array.from({length: count}, (_, i) => i), (item, i) => `<li${add_classes([
    "bx--progress-step bx--progress-step--incomplete"
  ].join(" ").trim())}><div${add_classes([
    "bx--progress-step-button bx--progress-step-button--unclickable"
  ].join(" ").trim())}><svg><path d="${"M 7, 7 m -7, 0 a 7,7 0 1,0 14,0 a 7,7 0 1,0 -14,0"}"></path></svg>
        <p${add_classes(["bx--progress-label"].join(" ").trim())}></p>
        <span${add_classes(["bx--progress-line"].join(" ").trim())}></span></div>
    </li>`)}</ul>`;
});
const CheckmarkOutline16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "CheckmarkOutline16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M14 21.414L9 16.413 10.413 15 14 18.586 21.585 11 23 12.415 14 21.414z"}"></path><path d="${"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,26A12,12,0,1,1,28,16,12,12,0,0,1,16,28Z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const Warning16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Warning16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M8,1C4.1,1,1,4.1,1,8s3.1,7,7,7s7-3.1,7-7S11.9,1,8,1z M8,14c-3.3,0-6-2.7-6-6s2.7-6,6-6s6,2.7,6,6S11.3,14,8,14z"}"></path><path d="${"M7.5 4H8.5V9H7.5zM8 10.2c-.4 0-.8.3-.8.8s.3.8.8.8c.4 0 .8-.3.8-.8S8.4 10.2 8 10.2z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const CircleDash16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "CircleDash16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M7.7 4.7a14.7 14.7 0 00-3 3.1L6.3 9A13.26 13.26 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.51 12.51 0 002 16H4A11.48 11.48 0 014.6 12.3zM2.7 20.4a14.4 14.4 0 002 3.9l1.6-1.2a12.89 12.89 0 01-1.7-3.3zM7.8 27.3a14.4 14.4 0 003.9 2l.6-1.9A12.89 12.89 0 019 25.7zM11.7 2.7l.6 1.9A11.48 11.48 0 0116 4V2A12.51 12.51 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.53 11.53 0 0123 25.7zM27.4 19.7l1.9.6A15.47 15.47 0 0030 16H28A11.48 11.48 0 0127.4 19.7zM29.2 11.6a14.4 14.4 0 00-2-3.9L25.6 8.9a12.89 12.89 0 011.7 3.3zM24.1 4.6a14.4 14.4 0 00-3.9-2l-.6 1.9a12.89 12.89 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.48 11.48 0 0116 28v2A21.42 21.42 0 0020.3 29.3z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const Incomplete16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Incomplete16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M23.7642 6.8593l1.2851-1.5315A13.976 13.976 0 0020.8672 2.887l-.6836 1.8776A11.9729 11.9729 0 0123.7642 6.8593zM27.81 14l1.9677-.4128A13.8888 13.8888 0 0028.14 9.0457L26.4087 10A12.52 12.52 0 0127.81 14zM20.1836 27.2354l.6836 1.8776a13.976 13.976 0 004.1821-2.4408l-1.2851-1.5315A11.9729 11.9729 0 0120.1836 27.2354zM26.4087 22L28.14 23a14.14 14.14 0 001.6382-4.5872L27.81 18.0659A12.1519 12.1519 0 0126.4087 22zM16 30V2a14 14 0 000 28z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "complete",
    "current",
    "disabled",
    "invalid",
    "description",
    "label",
    "secondaryLabel",
    "id"
  ]);
  let {complete = false} = $$props;
  let {current = false} = $$props;
  let {disabled = false} = $$props;
  let {invalid = false} = $$props;
  let {description = ""} = $$props;
  let {label = ""} = $$props;
  let {secondaryLabel = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let step = {};
  const {stepsById, add, change} = getContext("ProgressIndicator");
  const unsubscribe = stepsById.subscribe((value) => {
    if (value[id]) {
      step = value[id];
      current = step.current;
      complete = step.complete;
    }
  });
  onMount(() => {
    return () => {
      unsubscribe();
    };
  });
  if ($$props.complete === void 0 && $$bindings.complete && complete !== void 0)
    $$bindings.complete(complete);
  if ($$props.current === void 0 && $$bindings.current && current !== void 0)
    $$bindings.current(current);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.description === void 0 && $$bindings.description && description !== void 0)
    $$bindings.description(description);
  if ($$props.label === void 0 && $$bindings.label && label !== void 0)
    $$bindings.label(label);
  if ($$props.secondaryLabel === void 0 && $$bindings.secondaryLabel && secondaryLabel !== void 0)
    $$bindings.secondaryLabel(secondaryLabel);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  {
    add({id, complete, disabled});
  }
  return `
<li${spread([{"aria-disabled": escape(disabled)}, {id: escape(id)}, $$restProps], "bx--progress-step " + (current ? "bx--progress-step--current" : "") + " " + (complete ? "bx--progress-step--complete" : "") + " " + (!complete && !current ? "bx--progress-step--incomplete" : "") + " " + (disabled ? "bx--progress-step--disabled" : ""))}><button ${disabled ? "disabled" : ""}${add_attribute("aria-disabled", disabled, 0)}${add_attribute("tabindex", !current && !disabled ? "0" : "-1", 0)}${add_classes([
    "bx--progress-step-button " + (current ? "bx--progress-step-button--unclickable" : "")
  ].join(" ").trim())}>${invalid ? `${validate_component(Warning16, "Warning16").$$render($$result, {
    class: "bx--progress__warning",
    title: description
  }, {}, {})}` : `${current ? `${validate_component(Incomplete16, "Incomplete16").$$render($$result, {title: description}, {}, {})}` : `${complete ? `${validate_component(CheckmarkOutline16, "CheckmarkOutline16").$$render($$result, {title: description}, {}, {})}` : `${validate_component(CircleDash16, "CircleDash16").$$render($$result, {title: description}, {}, {})}`}`}`}
    ${slots.default ? slots.default({props: {class: "bx--progress-label"}}) : `
      <p${add_classes(["bx--progress-label"].join(" ").trim())}>${escape(label)}</p>
    `}
    ${secondaryLabel ? `<p${add_classes(["bx--progress-optional"].join(" ").trim())}>${escape(secondaryLabel)}</p>` : ``}
    <span${add_classes(["bx--progress-line"].join(" ").trim())}></span></button></li>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<div${spread([$$restProps], "bx--radio-button-wrapper")}><div${add_classes(["bx--radio-button bx--skeleton"].join(" ").trim())}></div>
  <span${add_classes(["bx--radio-button__label bx--skeleton"].join(" ").trim())}></span></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "selected",
    "disabled",
    "legendText",
    "hideLegend",
    "labelPosition",
    "orientation",
    "id"
  ]);
  let $$slots = compute_slots(slots);
  let $selectedValue, $$unsubscribe_selectedValue;
  let {selected: selected2 = void 0} = $$props;
  let {disabled = false} = $$props;
  let {legendText = ""} = $$props;
  let {hideLegend = false} = $$props;
  let {labelPosition = "right"} = $$props;
  let {orientation = "horizontal"} = $$props;
  let {id = void 0} = $$props;
  const dispatch = createEventDispatcher();
  const selectedValue = writable(selected2);
  $$unsubscribe_selectedValue = subscribe(selectedValue, (value) => $selectedValue = value);
  setContext("RadioButtonGroup", {
    selectedValue,
    add: ({checked, value}) => {
      if (checked) {
        selectedValue.set(value);
      }
    },
    update: (value) => {
      selected2 = value;
    }
  });
  onMount(() => {
    set_store_value(selectedValue, $selectedValue = selected2, $selectedValue);
  });
  beforeUpdate(() => {
    set_store_value(selectedValue, $selectedValue = selected2, $selectedValue);
  });
  selectedValue.subscribe((value) => {
    selected2 = value;
    dispatch("change", value);
  });
  if ($$props.selected === void 0 && $$bindings.selected && selected2 !== void 0)
    $$bindings.selected(selected2);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.legendText === void 0 && $$bindings.legendText && legendText !== void 0)
    $$bindings.legendText(legendText);
  if ($$props.hideLegend === void 0 && $$bindings.hideLegend && hideLegend !== void 0)
    $$bindings.hideLegend(hideLegend);
  if ($$props.labelPosition === void 0 && $$bindings.labelPosition && labelPosition !== void 0)
    $$bindings.labelPosition(labelPosition);
  if ($$props.orientation === void 0 && $$bindings.orientation && orientation !== void 0)
    $$bindings.orientation(orientation);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  $$unsubscribe_selectedValue();
  return `
<div${spread([{id: escape(id)}, $$restProps], "bx--form-item")}><fieldset ${disabled ? "disabled" : ""}${add_classes([
    "bx--radio-button-group " + (orientation === "vertical" ? "bx--radio-button-group--vertical" : "") + " " + (labelPosition === "left" ? "bx--radio-button-group--label-left" : "") + " " + (labelPosition === "right" ? "bx--radio-button-group--label-right" : "")
  ].join(" ").trim())}>${legendText || $$slots.legendText ? `<legend${add_classes(["bx--label " + (hideLegend ? "bx--visually-hidden" : "")].join(" ").trim())}>${slots.legendText ? slots.legendText({}) : `${escape(legendText)}`}</legend>` : ``}
    ${slots.default ? slots.default({}) : ``}</fieldset></div>`;
});
const UnorderedList = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["nested", "expressive"]);
  let {nested = false} = $$props;
  let {expressive = false} = $$props;
  if ($$props.nested === void 0 && $$bindings.nested && nested !== void 0)
    $$bindings.nested(nested);
  if ($$props.expressive === void 0 && $$bindings.expressive && expressive !== void 0)
    $$bindings.expressive(expressive);
  return `
<ul${spread([$$restProps], "bx--list--unordered " + (nested ? "bx--list--nested" : "") + " " + (expressive ? "bx--list--expressive" : ""))}>${slots.default ? slots.default({}) : ``}</ul>`;
});
const RecursiveListItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {text = ""} = $$props;
  let {href = ""} = $$props;
  let {html = ""} = $$props;
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.html === void 0 && $$bindings.html && html !== void 0)
    $$bindings.html(html);
  return `${validate_component(ListItem, "ListItem").$$render($$result, {}, {}, {
    default: () => `${text && !href ? `${escape(text)}` : ``}
  ${href ? `<a${add_attribute("href", href, 0)}${add_classes(["bx--link"].join(" ").trim())}>${escape(text || href)}</a>` : ``}
  ${!text && html ? `${html}` : ``}
  ${slots.default ? slots.default({}) : ``}`
  })}`;
});
const RecursiveList = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["children", "type"]);
  let {children = []} = $$props;
  let {type = "unordered"} = $$props;
  if ($$props.children === void 0 && $$bindings.children && children !== void 0)
    $$bindings.children(children);
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  return `${validate_component((type === "unordered" ? UnorderedList : OrderedList) || missing_component, "svelte:component").$$render($$result, Object.assign({native: type === "ordered-native"}, $$restProps), {}, {
    default: () => `${each(children, (child) => `${Array.isArray(child.children) ? `${validate_component(RecursiveListItem, "RecursiveListItem").$$render($$result, Object.assign(child), {}, {
      default: () => `${validate_component(RecursiveList, "svelte:self").$$render($$result, Object.assign(child, {type}, {nested: true}), {}, {})}
      `
    })}` : `${validate_component(RecursiveListItem, "RecursiveListItem").$$render($$result, Object.assign(child), {}, {})}`}`)}`
  })}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["hideLabel"]);
  let {hideLabel = false} = $$props;
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  return `
<div${spread([$$restProps], "bx--form-item")}>${!hideLabel ? `<span${add_classes(["bx--label bx--skeleton"].join(" ").trim())}></span>` : ``}
  <div${add_classes(["bx--select bx--skeleton"].join(" ").trim())}><div${add_classes(["bx--select-input"].join(" ").trim())}></div></div></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["disabled", "label"]);
  let {disabled = false} = $$props;
  let {label = "Provide label"} = $$props;
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.label === void 0 && $$bindings.label && label !== void 0)
    $$bindings.label(label);
  return `<optgroup${spread([{label: escape(label)}, {disabled: disabled || null}, $$restProps], "bx--select-optgroup")}>${slots.default ? slots.default({}) : ``}</optgroup>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<div${spread([$$restProps], "bx--skeleton__placeholder")}></div>`;
});
const Slider = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let labelId;
  let range;
  let left;
  let $$restProps = compute_rest_props($$props, [
    "value",
    "max",
    "maxLabel",
    "min",
    "minLabel",
    "step",
    "stepMultiplier",
    "required",
    "inputType",
    "disabled",
    "light",
    "hideTextInput",
    "id",
    "invalid",
    "labelText",
    "name",
    "ref"
  ]);
  let {value = 0} = $$props;
  let {max = 100} = $$props;
  let {maxLabel = ""} = $$props;
  let {min = 0} = $$props;
  let {minLabel = ""} = $$props;
  let {step = 1} = $$props;
  let {stepMultiplier = 4} = $$props;
  let {required = false} = $$props;
  let {inputType = "number"} = $$props;
  let {disabled = false} = $$props;
  let {light = false} = $$props;
  let {hideTextInput = false} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {invalid = false} = $$props;
  let {labelText = ""} = $$props;
  let {name = ""} = $$props;
  let {ref = null} = $$props;
  const dispatch = createEventDispatcher();
  let trackRef = null;
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.max === void 0 && $$bindings.max && max !== void 0)
    $$bindings.max(max);
  if ($$props.maxLabel === void 0 && $$bindings.maxLabel && maxLabel !== void 0)
    $$bindings.maxLabel(maxLabel);
  if ($$props.min === void 0 && $$bindings.min && min !== void 0)
    $$bindings.min(min);
  if ($$props.minLabel === void 0 && $$bindings.minLabel && minLabel !== void 0)
    $$bindings.minLabel(minLabel);
  if ($$props.step === void 0 && $$bindings.step && step !== void 0)
    $$bindings.step(step);
  if ($$props.stepMultiplier === void 0 && $$bindings.stepMultiplier && stepMultiplier !== void 0)
    $$bindings.stepMultiplier(stepMultiplier);
  if ($$props.required === void 0 && $$bindings.required && required !== void 0)
    $$bindings.required(required);
  if ($$props.inputType === void 0 && $$bindings.inputType && inputType !== void 0)
    $$bindings.inputType(inputType);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.hideTextInput === void 0 && $$bindings.hideTextInput && hideTextInput !== void 0)
    $$bindings.hideTextInput(hideTextInput);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  labelId = `label-${id}`;
  range = max - min;
  {
    {
      if (value <= min) {
        value = min;
      } else if (value >= max) {
        value = max;
      }
      if (!disabled) {
        dispatch("change", value);
      }
    }
  }
  left = (value - min) / range * 100;
  return `


<div${spread([$$restProps], "bx--form-item")}><label${add_attribute("for", id, 0)}${add_attribute("id", labelId, 0)}${add_classes(["bx--label " + (disabled ? "bx--label--disabled" : "")].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
      ${escape(labelText)}
    `}</label>
  <div${add_classes(["bx--slider-container"].join(" ").trim())}><span${add_classes(["bx--slider__range-label"].join(" ").trim())}>${escape(minLabel || min)}</span>
    <div role="${"presentation"}" tabindex="${"-1"}"${add_classes(["bx--slider " + (disabled ? "bx--slider--disabled" : "")].join(" ").trim())}${add_attribute("this", ref, 1)}><div role="${"slider"}" tabindex="${"0"}" style="${"left: " + escape(left) + "%"}"${add_attribute("aria-valuemax", max, 0)}${add_attribute("aria-valuemin", min, 0)}${add_attribute("aria-valuenow", value, 0)}${add_attribute("id", id, 0)}${add_classes(["bx--slider__thumb"].join(" ").trim())}></div>
      <div${add_classes(["bx--slider__track"].join(" ").trim())}${add_attribute("this", trackRef, 1)}></div>
      <div style="${"transform: translate(0, -50%) scaleX(" + escape(left / 100) + ")"}"${add_classes(["bx--slider__filled-track"].join(" ").trim())}></div>
      <input type="${"hidden"}"${add_attribute("name", name, 0)}${add_attribute("value", value, 0)} ${required ? "required" : ""}${add_attribute("min", min, 0)}${add_attribute("max", max, 0)}${add_attribute("step", step, 0)}${add_classes(["bx--slider__input"].join(" ").trim())}></div>
    <span${add_classes(["bx--slider__range-label"].join(" ").trim())}>${escape(maxLabel || max)}</span>
    <input${add_attribute("type", hideTextInput ? "hidden" : inputType, 0)}${add_attribute("style", hideTextInput ? "display: none" : void 0, 0)} id="${"input-" + escape(id)}"${add_attribute("name", name, 0)}${add_attribute("value", value, 0)}${add_attribute("aria-labelledby", $$props["aria-label"] ? void 0 : labelId, 0)}${add_attribute("aria-label", $$props["aria-label"] || "Slider number input", 0)} ${disabled ? "disabled" : ""} ${required ? "required" : ""}${add_attribute("min", min, 0)}${add_attribute("max", max, 0)}${add_attribute("step", step, 0)}${add_attribute("data-invalid", invalid || null, 0)}${add_attribute("aria-invalid", invalid || null, 0)}${add_classes([
    "bx--text-input bx--slider-text-input " + (light ? "bx--text-input--light" : "") + " " + (invalid ? "bx--text-input--invalid" : "")
  ].join(" ").trim())}></div></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["hideLabel"]);
  let {hideLabel = false} = $$props;
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  return `
<div${spread([$$restProps], "bx--form-item")}>${!hideLabel ? `<span${add_classes(["bx--label bx--skeleton"].join(" ").trim())}></span>` : ``}
  <div${add_classes(["bx--slider-container bx--skeleton"].join(" ").trim())}><span${add_classes(["bx--slider__range-label"].join(" ").trim())}></span>
    <div${add_classes(["bx--slider"].join(" ").trim())}><div${add_classes(["bx--slider__track"].join(" ").trim())}></div>
      <div${add_classes(["bx--slider__filled-track"].join(" ").trim())}></div>
      <div${add_classes(["bx--slider__thumb"].join(" ").trim())}></div></div>
    <span${add_classes(["bx--slider__range-label"].join(" ").trim())}></span></div></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["selected", "border", "condensed", "flush", "selection"]);
  let $selectedValue, $$unsubscribe_selectedValue;
  let {selected: selected2 = void 0} = $$props;
  let {border = false} = $$props;
  let {condensed = false} = $$props;
  let {flush = false} = $$props;
  let {selection = false} = $$props;
  const dispatch = createEventDispatcher();
  const selectedValue = writable(selected2);
  $$unsubscribe_selectedValue = subscribe(selectedValue, (value) => $selectedValue = value);
  setContext("StructuredListWrapper", {
    selectedValue,
    update: (value) => {
      selectedValue.set(value);
    }
  });
  if ($$props.selected === void 0 && $$bindings.selected && selected2 !== void 0)
    $$bindings.selected(selected2);
  if ($$props.border === void 0 && $$bindings.border && border !== void 0)
    $$bindings.border(border);
  if ($$props.condensed === void 0 && $$bindings.condensed && condensed !== void 0)
    $$bindings.condensed(condensed);
  if ($$props.flush === void 0 && $$bindings.flush && flush !== void 0)
    $$bindings.flush(flush);
  if ($$props.selection === void 0 && $$bindings.selection && selection !== void 0)
    $$bindings.selection(selection);
  selected2 = $selectedValue;
  {
    dispatch("change", $selectedValue);
  }
  $$unsubscribe_selectedValue();
  return `
<div${spread([{role: "table"}, $$restProps], "bx--structured-list " + (border ? "bx--structured-list--border" : "") + " " + (selection ? "bx--structured-list--selection" : "") + " " + (condensed ? "bx--structured-list--condensed" : "") + " " + (flush ? "bx--structured-list--flush" : ""))}>${slots.default ? slots.default({}) : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["rows", "border"]);
  let {rows = 5} = $$props;
  let {border = false} = $$props;
  if ($$props.rows === void 0 && $$bindings.rows && rows !== void 0)
    $$bindings.rows(rows);
  if ($$props.border === void 0 && $$bindings.border && border !== void 0)
    $$bindings.border(border);
  return `
<div${spread([$$restProps], "bx--skeleton bx--structured-list " + (border ? "bx--structured-list--border" : ""))}><div${add_classes(["bx--structured-list-thead"].join(" ").trim())}><div${add_classes([
    "bx--structured-list-row bx--structured-list-row--header-row"
  ].join(" ").trim())}><div${add_classes(["bx--structured-list-th"].join(" ").trim())}><span></span></div>
      <div${add_classes(["bx--structured-list-th"].join(" ").trim())}><span></span></div>
      <div${add_classes(["bx--structured-list-th"].join(" ").trim())}><span></span></div></div></div>
  <div${add_classes(["bx--structured-list-tbody"].join(" ").trim())}>${each(Array.from({length: rows}, (_, i) => i), (row, i) => `<div${add_classes(["bx--structured-list-row"].join(" ").trim())}><div${add_classes(["bx--structured-list-td"].join(" ").trim())}></div>
        <div${add_classes(["bx--structured-list-td"].join(" ").trim())}></div>
        <div${add_classes(["bx--structured-list-td"].join(" ").trim())}></div>
      </div>`)}</div></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<div${spread([{role: "rowgroup"}, $$restProps], "bx--structured-list-tbody")}>${slots.default ? slots.default({}) : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `
<div${spread([{role: "rowgroup"}, $$restProps], "bx--structured-list-thead")}>${slots.default ? slots.default({}) : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["head", "noWrap"]);
  let {head = false} = $$props;
  let {noWrap = false} = $$props;
  if ($$props.head === void 0 && $$bindings.head && head !== void 0)
    $$bindings.head(head);
  if ($$props.noWrap === void 0 && $$bindings.noWrap && noWrap !== void 0)
    $$bindings.noWrap(noWrap);
  return `
<div${spread([
    {
      role: escape(head ? "columnheader" : "cell")
    },
    $$restProps
  ], (head ? "bx--structured-list-th" : "") + " " + (!head ? "bx--structured-list-td" : "") + " " + (noWrap ? "bx--structured-list-content--nowrap" : ""))}>${slots.default ? slots.default({}) : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["head", "label", "tabindex"]);
  let {head = false} = $$props;
  let {label = false} = $$props;
  let {tabindex = "0"} = $$props;
  if ($$props.head === void 0 && $$bindings.head && head !== void 0)
    $$bindings.head(head);
  if ($$props.label === void 0 && $$bindings.label && label !== void 0)
    $$bindings.label(label);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  return `
${label ? `
  <label${spread([{tabindex: escape(tabindex)}, $$restProps], "bx--structured-list-row " + (head ? "bx--structured-list-row--header-row" : ""))}>${slots.default ? slots.default({}) : ``}</label>` : `<div${spread([{role: "row"}, $$restProps], "bx--structured-list-row " + (head ? "bx--structured-list-row--header-row" : ""))}>${slots.default ? slots.default({}) : ``}</div>`}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["checked", "title", "value", "id", "name", "ref"]);
  let $selectedValue, $$unsubscribe_selectedValue;
  let {checked = false} = $$props;
  let {title = "title"} = $$props;
  let {value = "value"} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = ""} = $$props;
  let {ref = null} = $$props;
  const {selectedValue, update: update2} = getContext("StructuredListWrapper");
  $$unsubscribe_selectedValue = subscribe(selectedValue, (value2) => $selectedValue = value2);
  if (checked) {
    update2(value);
  }
  if ($$props.checked === void 0 && $$bindings.checked && checked !== void 0)
    $$bindings.checked(checked);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  checked = $selectedValue === value;
  $$unsubscribe_selectedValue();
  return `<input${spread([
    {type: "radio"},
    {tabindex: "-1"},
    {checked: checked || null},
    {id: escape(id)},
    {name: escape(name)},
    {title: escape(title)},
    {value: escape(value)},
    $$restProps
  ], "bx--structured-list-input")}${add_attribute("this", ref, 1)}>`;
});
const ChevronDownGlyph = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "ChevronDownGlyph"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 10 6"},
    {fill: "currentColor"},
    {width: "10"},
    {height: "6"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M5 6L0 1 0.7 0.3 5 4.6 9.3 0.3 10 1z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let currentTab;
  let currentContent;
  let $$restProps = compute_rest_props($$props, ["selected", "type", "autoWidth", "iconDescription", "triggerHref"]);
  let $tabsById, $$unsubscribe_tabsById;
  let $tabs, $$unsubscribe_tabs;
  let $content, $$unsubscribe_content;
  let $selectedTab, $$unsubscribe_selectedTab;
  let {selected: selected2 = 0} = $$props;
  let {type = "default"} = $$props;
  let {autoWidth = false} = $$props;
  let {iconDescription = "Show menu options"} = $$props;
  let {triggerHref = "#"} = $$props;
  const dispatch = createEventDispatcher();
  const tabs = writable([]);
  $$unsubscribe_tabs = subscribe(tabs, (value) => $tabs = value);
  const tabsById = derived(tabs, (_) => _.reduce((a, c) => ({...a, [c.id]: c}), {}));
  $$unsubscribe_tabsById = subscribe(tabsById, (value) => $tabsById = value);
  const useAutoWidth = writable(autoWidth);
  const selectedTab = writable(void 0);
  $$unsubscribe_selectedTab = subscribe(selectedTab, (value) => $selectedTab = value);
  const content = writable([]);
  $$unsubscribe_content = subscribe(content, (value) => $content = value);
  const contentById = derived(content, (_) => _.reduce((a, c) => ({...a, [c.id]: c}), {}));
  const selectedContent = writable(void 0);
  setContext("Tabs", {
    tabs,
    contentById,
    selectedTab,
    selectedContent,
    useAutoWidth,
    add: (data2) => {
      tabs.update((_) => [..._, {...data2, index: _.length}]);
    },
    addContent: (data2) => {
      content.update((_) => [..._, {...data2, index: _.length}]);
    },
    update: (id) => {
      currentIndex = $tabsById[id].index;
      dispatch("change", currentIndex);
    },
    change: (direction2) => {
      let index2 = currentIndex + direction2;
      if (index2 < 0) {
        index2 = $tabs.length - 1;
      } else if (index2 >= $tabs.length) {
        index2 = 0;
      }
      let disabled = $tabs[index2].disabled;
      while (disabled) {
        index2 = index2 + direction2;
        if (index2 < 0) {
          index2 = $tabs.length - 1;
        } else if (index2 >= $tabs.length) {
          index2 = 0;
        }
        disabled = $tabs[index2].disabled;
      }
      currentIndex = index2;
      dispatch("change", currentIndex);
    }
  });
  afterUpdate(() => {
    selected2 = currentIndex;
  });
  let dropdownHidden = true;
  let currentIndex = selected2;
  if ($$props.selected === void 0 && $$bindings.selected && selected2 !== void 0)
    $$bindings.selected(selected2);
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  if ($$props.autoWidth === void 0 && $$bindings.autoWidth && autoWidth !== void 0)
    $$bindings.autoWidth(autoWidth);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.triggerHref === void 0 && $$bindings.triggerHref && triggerHref !== void 0)
    $$bindings.triggerHref(triggerHref);
  currentIndex = selected2;
  currentTab = $tabs[currentIndex] || void 0;
  currentContent = $content[currentIndex] || void 0;
  {
    {
      if (currentTab) {
        selectedTab.set(currentTab.id);
      }
      if (currentContent) {
        selectedContent.set(currentContent.id);
      }
    }
  }
  {
    if ($selectedTab) {
      dropdownHidden = true;
    }
  }
  {
    useAutoWidth.set(autoWidth);
  }
  $$unsubscribe_tabsById();
  $$unsubscribe_tabs();
  $$unsubscribe_content();
  $$unsubscribe_selectedTab();
  return `<div${spread([{role: "navigation"}, $$restProps], "bx--tabs " + (type === "container" ? "bx--tabs--container" : ""))}><div role="${"listbox"}" tabindex="${"0"}"${add_attribute("aria-label", $$props["aria-label"] || "listbox", 0)}${add_classes(["bx--tabs-trigger"].join(" ").trim())}><a tabindex="${"-1"}"${add_attribute("href", triggerHref, 0)}${add_classes(["bx--tabs-trigger-text"].join(" ").trim())}>${currentTab ? `${escape(currentTab.label)}` : ``}</a>
    ${validate_component(ChevronDownGlyph, "ChevronDownGlyph").$$render($$result, {
    "aria-hidden": "true",
    title: iconDescription
  }, {}, {})}</div>
  <ul role="${"tablist"}"${add_classes([
    "bx--tabs__nav " + (dropdownHidden ? "bx--tabs__nav--hidden" : "")
  ].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</ul></div>
${slots.content ? slots.content({}) : ``}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let selected2;
  let $$restProps = compute_rest_props($$props, ["label", "href", "disabled", "tabindex", "id", "ref"]);
  let $selectedTab, $$unsubscribe_selectedTab;
  let $useAutoWidth, $$unsubscribe_useAutoWidth;
  let {label = ""} = $$props;
  let {href = "#"} = $$props;
  let {disabled = false} = $$props;
  let {tabindex = "0"} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  const {selectedTab, useAutoWidth, add, update: update2, change} = getContext("Tabs");
  $$unsubscribe_selectedTab = subscribe(selectedTab, (value) => $selectedTab = value);
  $$unsubscribe_useAutoWidth = subscribe(useAutoWidth, (value) => $useAutoWidth = value);
  add({id, label, disabled});
  let didMount = false;
  onMount(() => {
    tick().then(() => {
      didMount = true;
    });
  });
  afterUpdate(() => {
    if (didMount && selected2 && ref) {
      ref.focus();
    }
  });
  if ($$props.label === void 0 && $$bindings.label && label !== void 0)
    $$bindings.label(label);
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  selected2 = $selectedTab === id;
  $$unsubscribe_selectedTab();
  $$unsubscribe_useAutoWidth();
  return `
<li${spread([{tabindex: "-1"}, {role: "presentation"}, $$restProps], "bx--tabs__nav-item " + (disabled ? "bx--tabs__nav-item--disabled" : "") + " " + (selected2 ? "bx--tabs__nav-item--selected" : ""))}><a role="${"tab"}"${add_attribute("tabindex", disabled ? "-1" : tabindex, 0)}${add_attribute("aria-selected", selected2, 0)}${add_attribute("aria-disabled", disabled, 0)}${add_attribute("id", id, 0)}${add_attribute("href", href, 0)}${add_attribute("style", $useAutoWidth ? "width: auto" : void 0, 0)}${add_classes(["bx--tabs__nav-link"].join(" ").trim())}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : `${escape(label)}`}</a></li>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let selected2;
  let index2;
  let tabId;
  let $$restProps = compute_rest_props($$props, ["id"]);
  let $selectedContent, $$unsubscribe_selectedContent;
  let $contentById, $$unsubscribe_contentById;
  let $tabs, $$unsubscribe_tabs;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  const {selectedContent, addContent, tabs, contentById} = getContext("Tabs");
  $$unsubscribe_selectedContent = subscribe(selectedContent, (value) => $selectedContent = value);
  $$unsubscribe_tabs = subscribe(tabs, (value) => $tabs = value);
  $$unsubscribe_contentById = subscribe(contentById, (value) => $contentById = value);
  addContent({id});
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  selected2 = $selectedContent === id;
  index2 = $contentById[id].index;
  tabId = $tabs[index2].id;
  $$unsubscribe_selectedContent();
  $$unsubscribe_contentById();
  $$unsubscribe_tabs();
  return `<div${spread([
    {role: "tabpanel"},
    {"aria-labelledby": escape(tabId)},
    {"aria-hidden": escape(!selected2)},
    {
      hidden: (selected2 ? void 0 : "") || null
    },
    {id: escape(id)},
    $$restProps
  ], "bx--tab-content")}>${slots.default ? slots.default({}) : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["count", "type"]);
  let {count = 4} = $$props;
  let {type = "default"} = $$props;
  if ($$props.count === void 0 && $$bindings.count && count !== void 0)
    $$bindings.count(count);
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  return `
<div${spread([$$restProps], "bx--tabs bx--skeleton bx--tabs--scrollable " + (type === "container" ? "bx--tabs--scrollable--container" : ""))}><ul${add_classes(["bx--tabs--scrollable__nav"].join(" ").trim())}>${each(Array.from({length: count}, (_, i) => i), (item) => `<li${add_classes(["bx--tabs--scrollable__nav-item"].join(" ").trim())}><div${add_classes(["bx--tabs__nav-link"].join(" ").trim())}><span></span></div>
      </li>`)}</ul></div>`;
});
const TagSkeleton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["size"]);
  let {size = "default"} = $$props;
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  return `
<span${spread([$$restProps], "bx--tag " + (size === "sm" ? "bx--tag--sm" : "") + " bx--skeleton")}></span>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["type", "size", "filter", "disabled", "interactive", "skeleton", "title", "icon", "id"]);
  let $$slots = compute_slots(slots);
  let {type = void 0} = $$props;
  let {size = "default"} = $$props;
  let {filter = false} = $$props;
  let {disabled = false} = $$props;
  let {interactive = false} = $$props;
  let {skeleton = false} = $$props;
  let {title = "Clear filter"} = $$props;
  let {icon = void 0} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  createEventDispatcher();
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.filter === void 0 && $$bindings.filter && filter !== void 0)
    $$bindings.filter(filter);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.interactive === void 0 && $$bindings.interactive && interactive !== void 0)
    $$bindings.interactive(interactive);
  if ($$props.skeleton === void 0 && $$bindings.skeleton && skeleton !== void 0)
    $$bindings.skeleton(skeleton);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  return `
${skeleton ? `${validate_component(TagSkeleton, "TagSkeleton").$$render($$result, Object.assign({size}, $$restProps), {}, {})}` : `${filter ? `<div${spread([{"aria-label": escape(title)}, {id: escape(id)}, $$restProps], "bx--tag " + (disabled ? "bx--tag--disabled" : "") + " " + (filter ? "bx--tag--filter" : "") + " " + (size === "sm" ? "bx--tag--sm" : "") + " " + (type === "red" ? "bx--tag--red" : "") + " " + (type === "magenta" ? "bx--tag--magenta" : "") + " " + (type === "purple" ? "bx--tag--purple" : "") + " " + (type === "blue" ? "bx--tag--blue" : "") + " " + (type === "cyan" ? "bx--tag--cyan" : "") + " " + (type === "teal" ? "bx--tag--teal" : "") + " " + (type === "green" ? "bx--tag--green" : "") + " " + (type === "gray" ? "bx--tag--gray" : "") + " " + (type === "cool-gray" ? "bx--tag--cool-gray" : "") + " " + (type === "warm-gray" ? "bx--tag--warm-gray" : "") + " " + (type === "high-contrast" ? "bx--tag--high-contrast" : "") + " " + (type === "outline" ? "bx--tag--outline" : ""))}>${slots.default ? slots.default({props: {class: "bx--tag__label"}}) : `
      <span${add_classes(["bx--tag__label"].join(" ").trim())}>${escape(type)}</span>
    `}
    <button${add_attribute("aria-labelledby", id, 0)} ${disabled ? "disabled" : ""}${add_attribute("title", title, 0)}${add_classes(["bx--tag__close-icon"].join(" ").trim())}>${validate_component(Close16, "Close16").$$render($$result, {}, {}, {})}</button></div>` : `${interactive ? `<button${spread([
    {id: escape(id)},
    {disabled: disabled || null},
    {"aria-disabled": escape(disabled)},
    {
      tabindex: escape(disabled ? "-1" : void 0)
    },
    $$restProps
  ], "bx--tag bx--tag--interactive " + (disabled ? "bx--tag--disabled" : "") + " " + (size === "sm" ? "bx--tag--sm" : "") + " " + (type === "red" ? "bx--tag--red" : "") + " " + (type === "magenta" ? "bx--tag--magenta" : "") + " " + (type === "purple" ? "bx--tag--purple" : "") + " " + (type === "blue" ? "bx--tag--blue" : "") + " " + (type === "cyan" ? "bx--tag--cyan" : "") + " " + (type === "teal" ? "bx--tag--teal" : "") + " " + (type === "green" ? "bx--tag--green" : "") + " " + (type === "gray" ? "bx--tag--gray" : "") + " " + (type === "cool-gray" ? "bx--tag--cool-gray" : "") + " " + (type === "warm-gray" ? "bx--tag--warm-gray" : "") + " " + (type === "high-contrast" ? "bx--tag--high-contrast" : "") + " " + (type === "outline" ? "bx--tag--outline" : ""))}>${$$slots.icon || icon ? `<div${add_classes(["bx--tag__custom-icon"].join(" ").trim())}>${slots.icon ? slots.icon({props: {class: "bx--tag__label"}}) : `
          ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
        `}</div>` : ``}
    <span>${slots.default ? slots.default({}) : ``}</span></button>` : `<div${spread([{id: escape(id)}, $$restProps], "bx--tag " + (disabled ? "bx--tag--disabled" : "") + " " + (size === "sm" ? "bx--tag--sm" : "") + " " + (type === "red" ? "bx--tag--red" : "") + " " + (type === "magenta" ? "bx--tag--magenta" : "") + " " + (type === "purple" ? "bx--tag--purple" : "") + " " + (type === "blue" ? "bx--tag--blue" : "") + " " + (type === "cyan" ? "bx--tag--cyan" : "") + " " + (type === "teal" ? "bx--tag--teal" : "") + " " + (type === "green" ? "bx--tag--green" : "") + " " + (type === "gray" ? "bx--tag--gray" : "") + " " + (type === "cool-gray" ? "bx--tag--cool-gray" : "") + " " + (type === "warm-gray" ? "bx--tag--warm-gray" : "") + " " + (type === "high-contrast" ? "bx--tag--high-contrast" : "") + " " + (type === "outline" ? "bx--tag--outline" : ""))}>${$$slots.icon || icon ? `<div${add_classes(["bx--tag__custom-icon"].join(" ").trim())}>${slots.icon ? slots.icon({}) : `
          ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
        `}</div>` : ``}
    <span>${slots.default ? slots.default({}) : ``}</span></div>`}`}`}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let errorId;
  let $$restProps = compute_rest_props($$props, [
    "value",
    "placeholder",
    "cols",
    "rows",
    "maxCount",
    "light",
    "disabled",
    "readonly",
    "helperText",
    "labelText",
    "hideLabel",
    "invalid",
    "invalidText",
    "id",
    "name",
    "ref"
  ]);
  let $$slots = compute_slots(slots);
  let {value = ""} = $$props;
  let {placeholder = ""} = $$props;
  let {cols = 50} = $$props;
  let {rows = 4} = $$props;
  let {maxCount = void 0} = $$props;
  let {light = false} = $$props;
  let {disabled = false} = $$props;
  let {readonly = false} = $$props;
  let {helperText = ""} = $$props;
  let {labelText = ""} = $$props;
  let {hideLabel = false} = $$props;
  let {invalid = false} = $$props;
  let {invalidText = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  let {ref = null} = $$props;
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0)
    $$bindings.placeholder(placeholder);
  if ($$props.cols === void 0 && $$bindings.cols && cols !== void 0)
    $$bindings.cols(cols);
  if ($$props.rows === void 0 && $$bindings.rows && rows !== void 0)
    $$bindings.rows(rows);
  if ($$props.maxCount === void 0 && $$bindings.maxCount && maxCount !== void 0)
    $$bindings.maxCount(maxCount);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.readonly === void 0 && $$bindings.readonly && readonly !== void 0)
    $$bindings.readonly(readonly);
  if ($$props.helperText === void 0 && $$bindings.helperText && helperText !== void 0)
    $$bindings.helperText(helperText);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.invalidText === void 0 && $$bindings.invalidText && invalidText !== void 0)
    $$bindings.invalidText(invalidText);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  errorId = `error-${id}`;
  return `
<div${add_classes(["bx--form-item"].join(" ").trim())}>${(labelText || $$slots.labelText) && !hideLabel ? `<div${add_classes(["bx--text-area__label-wrapper"].join(" ").trim())}><label${add_attribute("for", id, 0)}${add_classes([
    "bx--label " + (hideLabel ? "bx--visually-hidden" : "") + " " + (disabled ? "bx--label--disabled" : "")
  ].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
          ${escape(labelText)}
        `}</label>
      ${maxCount ? `<div${add_classes(["bx--label " + (disabled ? "bx--label--disabled" : "")].join(" ").trim())}>${escape(value.length)}/${escape(maxCount)}</div>` : ``}</div>` : ``}
  <div${add_attribute("data-invalid", invalid || void 0, 0)}${add_classes(["bx--text-area__wrapper"].join(" ").trim())}>${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {class: "bx--text-area__invalid-icon"}, {}, {})}` : ``}
    <textarea${spread([
    {
      "aria-invalid": escape(invalid || void 0)
    },
    {
      "aria-describedby": escape(invalid ? errorId : void 0)
    },
    {disabled: disabled || null},
    {id: escape(id)},
    {name: escape(name)},
    {cols: escape(cols)},
    {rows: escape(rows)},
    {placeholder: escape(placeholder)},
    {readonly: readonly || null},
    {maxlength: escape(maxCount != null ? maxCount : void 0)},
    $$restProps
  ], "bx--text-area " + (light ? "bx--text-area--light" : "") + " " + (invalid ? "bx--text-area--invalid" : ""))}${add_attribute("this", ref, 1)}>${value || ""}</textarea></div>
  ${!invalid && helperText ? `<div${add_classes([
    "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "")
  ].join(" ").trim())}>${escape(helperText)}</div>` : ``}
  ${invalid ? `<div${add_attribute("id", errorId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(invalidText)}</div>` : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["hideLabel"]);
  let {hideLabel = false} = $$props;
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  return `
<div${spread([$$restProps], "bx--form-item")}>${!hideLabel ? `<span${add_classes(["bx--label bx--skeleton"].join(" ").trim())}></span>` : ``}
  <div${add_classes(["bx--skeleton bx--text-area"].join(" ").trim())}></div></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let isFluid;
  let errorId;
  let warnId;
  let $$restProps = compute_rest_props($$props, [
    "size",
    "value",
    "placeholder",
    "light",
    "disabled",
    "helperText",
    "id",
    "name",
    "labelText",
    "hideLabel",
    "invalid",
    "invalidText",
    "warn",
    "warnText",
    "ref",
    "required",
    "inline",
    "readonly"
  ]);
  let $$slots = compute_slots(slots);
  let {size = void 0} = $$props;
  let {value = ""} = $$props;
  let {placeholder = ""} = $$props;
  let {light = false} = $$props;
  let {disabled = false} = $$props;
  let {helperText = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  let {labelText = ""} = $$props;
  let {hideLabel = false} = $$props;
  let {invalid = false} = $$props;
  let {invalidText = ""} = $$props;
  let {warn = false} = $$props;
  let {warnText = ""} = $$props;
  let {ref = null} = $$props;
  let {required = false} = $$props;
  let {inline = false} = $$props;
  let {readonly = false} = $$props;
  const ctx = getContext("Form");
  createEventDispatcher();
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0)
    $$bindings.placeholder(placeholder);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.helperText === void 0 && $$bindings.helperText && helperText !== void 0)
    $$bindings.helperText(helperText);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.invalidText === void 0 && $$bindings.invalidText && invalidText !== void 0)
    $$bindings.invalidText(invalidText);
  if ($$props.warn === void 0 && $$bindings.warn && warn !== void 0)
    $$bindings.warn(warn);
  if ($$props.warnText === void 0 && $$bindings.warnText && warnText !== void 0)
    $$bindings.warnText(warnText);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  if ($$props.required === void 0 && $$bindings.required && required !== void 0)
    $$bindings.required(required);
  if ($$props.inline === void 0 && $$bindings.inline && inline !== void 0)
    $$bindings.inline(inline);
  if ($$props.readonly === void 0 && $$bindings.readonly && readonly !== void 0)
    $$bindings.readonly(readonly);
  isFluid = !!ctx && ctx.isFluid;
  errorId = `error-${id}`;
  warnId = `warn-${id}`;
  return `
<div${add_classes([
    "bx--form-item bx--text-input-wrapper " + (inline ? "bx--text-input-wrapper--inline" : "") + " " + (light ? "bx--text-input-wrapper--light" : "") + " " + (readonly ? "bx--text-input-wrapper--readonly" : "")
  ].join(" ").trim())}>${inline ? `<div${add_classes(["bx--text-input__label-helper-wrapper"].join(" ").trim())}>${labelText ? `<label${add_attribute("for", id, 0)} class="${[
    escape(inline && !!size && `bx--label--inline--${size}`),
    "bx--label " + (hideLabel ? "bx--visually-hidden" : "") + " " + (disabled ? "bx--label--disabled" : "") + " " + (inline ? "bx--label--inline" : "")
  ].join(" ").trim()}">${slots.labelText ? slots.labelText({}) : `
            ${escape(labelText)}
          `}</label>` : ``}
      ${!isFluid && helperText ? `<div${add_classes([
    "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "") + " " + (inline ? "bx--form__helper-text--inline" : "")
  ].join(" ").trim())}>${escape(helperText)}</div>` : ``}</div>` : ``}
  ${!inline && (labelText || $$slots.labelText) ? `<label${add_attribute("for", id, 0)} class="${[
    escape(inline && !!size && `bx--label--inline--${size}`),
    "bx--label " + (hideLabel ? "bx--visually-hidden" : "") + " " + (disabled ? "bx--label--disabled" : "") + " " + (inline ? "bx--label--inline" : "")
  ].join(" ").trim()}">${slots.labelText ? slots.labelText({}) : `
        ${escape(labelText)}
      `}</label>` : ``}
  <div${add_classes([
    "bx--text-input__field-outer-wrapper " + (inline ? "bx--text-input__field-outer-wrapper--inline" : "")
  ].join(" ").trim())}><div${add_attribute("data-invalid", invalid || void 0, 0)}${add_attribute("data-warn", warn || void 0, 0)}${add_classes([
    "bx--text-input__field-wrapper " + (!invalid && warn ? "bx--text-input__field-wrapper--warning" : "")
  ].join(" ").trim())}>${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {class: "bx--text-input__invalid-icon"}, {}, {})}` : ``}
      ${!invalid && warn ? `${validate_component(WarningAltFilled16, "WarningAltFilled16").$$render($$result, {
    class: "bx--text-input__invalid-icon\n            bx--text-input__invalid-icon--warning"
  }, {}, {})}` : ``}
      ${readonly ? `${validate_component(EditOff16, "EditOff16").$$render($$result, {class: "bx--text-input__readonly-icon"}, {}, {})}` : ``}
      <input${spread([
    {
      "data-invalid": escape(invalid || void 0)
    },
    {
      "aria-invalid": escape(invalid || void 0)
    },
    {"data-warn": escape(warn || void 0)},
    {
      "aria-describedby": escape(invalid ? errorId : warn ? warnId : void 0)
    },
    {disabled: disabled || null},
    {id: escape(id)},
    {name: escape(name)},
    {placeholder: escape(placeholder)},
    {required: required || null},
    {readonly: readonly || null},
    $$restProps,
    {
      class: escape(size && `bx--text-input--${size}`)
    }
  ], "bx--text-input " + (light ? "bx--text-input--light" : "") + " " + (invalid ? "bx--text-input--invalid" : "") + " " + (warn ? "bx--text-input--warn" : ""))}${add_attribute("this", ref, 1)}${add_attribute("value", value, 1)}>
      ${isFluid ? `<hr${add_classes(["bx--text-input__divider"].join(" ").trim())}>` : ``}
      ${isFluid && !inline && invalid ? `<div${add_attribute("id", errorId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(invalidText)}</div>` : ``}
      ${isFluid && !inline && warn ? `<div${add_attribute("id", warnId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(warnText)}</div>` : ``}</div>
    ${!invalid && !warn && !isFluid && !inline && helperText ? `<div${add_classes([
    "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "") + " " + (inline ? "bx--form__helper-text--inline" : "")
  ].join(" ").trim())}>${escape(helperText)}</div>` : ``}
    ${!isFluid && invalid ? `<div${add_attribute("id", errorId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(invalidText)}</div>` : ``}
    ${!isFluid && !invalid && warn ? `<div${add_attribute("id", warnId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(warnText)}</div>` : ``}</div></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["hideLabel"]);
  let {hideLabel = false} = $$props;
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  return `
<div${spread([$$restProps], "bx--form-item")}>${!hideLabel ? `<span${add_classes(["bx--label bx--skeleton"].join(" ").trim())}></span>` : ``}
  <div${add_classes(["bx--skeleton bx--text-input"].join(" ").trim())}></div></div>`;
});
const View16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "View16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M15.5,7.8C14.3,4.7,11.3,2.6,8,2.5C4.7,2.6,1.7,4.7,0.5,7.8c0,0.1,0,0.2,0,0.3c1.2,3.1,4.1,5.2,7.5,5.3	c3.3-0.1,6.3-2.2,7.5-5.3C15.5,8.1,15.5,7.9,15.5,7.8z M8,12.5c-2.7,0-5.4-2-6.5-4.5c1-2.5,3.8-4.5,6.5-4.5s5.4,2,6.5,4.5	C13.4,10.5,10.6,12.5,8,12.5z"}"></path><path d="${"M8,5C6.3,5,5,6.3,5,8s1.3,3,3,3s3-1.3,3-3S9.7,5,8,5z M8,10c-1.1,0-2-0.9-2-2s0.9-2,2-2s2,0.9,2,2S9.1,10,8,10z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const ViewOff16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "ViewOff16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M2.6,11.3l0.7-0.7C2.6,9.8,1.9,9,1.5,8c1-2.5,3.8-4.5,6.5-4.5c0.7,0,1.4,0.1,2,0.4l0.8-0.8C9.9,2.7,9,2.5,8,2.5	C4.7,2.6,1.7,4.7,0.5,7.8c0,0.1,0,0.2,0,0.3C1,9.3,1.7,10.4,2.6,11.3z"}"></path><path d="${"M6 7.9c.1-1 .9-1.8 1.8-1.8l.9-.9C7.2 4.7 5.5 5.6 5.1 7.2 5 7.7 5 8.3 5.1 8.8L6 7.9zM15.5 7.8c-.6-1.5-1.6-2.8-2.9-3.7L15 1.7 14.3 1 1 14.3 1.7 15l2.6-2.6c1.1.7 2.4 1 3.7 1.1 3.3-.1 6.3-2.2 7.5-5.3C15.5 8.1 15.5 7.9 15.5 7.8zM10 8c0 1.1-.9 2-2 2-.3 0-.7-.1-1-.3L9.7 7C9.9 7.3 10 7.6 10 8zM8 12.5c-1 0-2.1-.3-3-.8l1.3-1.3c1.4.9 3.2.6 4.2-.8.7-1 .7-2.4 0-3.4l1.4-1.4c1.1.8 2 1.9 2.6 3.2C13.4 10.5 10.6 12.5 8 12.5z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let isFluid;
  let errorId;
  let warnId;
  let $$restProps = compute_rest_props($$props, [
    "size",
    "value",
    "type",
    "placeholder",
    "hidePasswordLabel",
    "showPasswordLabel",
    "tooltipAlignment",
    "tooltipPosition",
    "light",
    "disabled",
    "helperText",
    "labelText",
    "hideLabel",
    "invalid",
    "invalidText",
    "warn",
    "warnText",
    "inline",
    "id",
    "name",
    "ref"
  ]);
  let $$slots = compute_slots(slots);
  let {size = void 0} = $$props;
  let {value = ""} = $$props;
  let {type = "password"} = $$props;
  let {placeholder = ""} = $$props;
  let {hidePasswordLabel = "Hide password"} = $$props;
  let {showPasswordLabel = "Show password"} = $$props;
  let {tooltipAlignment = "center"} = $$props;
  let {tooltipPosition = "bottom"} = $$props;
  let {light = false} = $$props;
  let {disabled = false} = $$props;
  let {helperText = ""} = $$props;
  let {labelText = ""} = $$props;
  let {hideLabel = false} = $$props;
  let {invalid = false} = $$props;
  let {invalidText = ""} = $$props;
  let {warn = false} = $$props;
  let {warnText = ""} = $$props;
  let {inline = false} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  let {ref = null} = $$props;
  const ctx = getContext("Form");
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0)
    $$bindings.placeholder(placeholder);
  if ($$props.hidePasswordLabel === void 0 && $$bindings.hidePasswordLabel && hidePasswordLabel !== void 0)
    $$bindings.hidePasswordLabel(hidePasswordLabel);
  if ($$props.showPasswordLabel === void 0 && $$bindings.showPasswordLabel && showPasswordLabel !== void 0)
    $$bindings.showPasswordLabel(showPasswordLabel);
  if ($$props.tooltipAlignment === void 0 && $$bindings.tooltipAlignment && tooltipAlignment !== void 0)
    $$bindings.tooltipAlignment(tooltipAlignment);
  if ($$props.tooltipPosition === void 0 && $$bindings.tooltipPosition && tooltipPosition !== void 0)
    $$bindings.tooltipPosition(tooltipPosition);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.helperText === void 0 && $$bindings.helperText && helperText !== void 0)
    $$bindings.helperText(helperText);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.invalidText === void 0 && $$bindings.invalidText && invalidText !== void 0)
    $$bindings.invalidText(invalidText);
  if ($$props.warn === void 0 && $$bindings.warn && warn !== void 0)
    $$bindings.warn(warn);
  if ($$props.warnText === void 0 && $$bindings.warnText && warnText !== void 0)
    $$bindings.warnText(warnText);
  if ($$props.inline === void 0 && $$bindings.inline && inline !== void 0)
    $$bindings.inline(inline);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  isFluid = !!ctx && ctx.isFluid;
  errorId = `error-${id}`;
  warnId = `warn-${id}`;
  return `
<div${add_classes([
    "bx--form-item bx--text-input-wrapper " + (!isFluid ? "bx--password-input-wrapper" : "") + " " + (light ? "bx--text-input-wrapper--light" : "") + " " + (inline ? "bx--text-input-wrapper--inline" : "")
  ].join(" ").trim())}>${inline ? `<label${add_attribute("for", id, 0)}${add_classes([
    "bx--label " + (hideLabel ? "bx--visually-hidden" : "") + " " + (disabled ? "bx--label--disabled" : "") + " " + (inline ? "bx--label--inline" : "") + " " + (inline && size === "sm" ? "bx--label--inline--sm" : "") + " " + (inline && size === "xl" ? "bx--label--inline--xl" : "")
  ].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
        ${escape(labelText)}
      `}</label>
    ${!isFluid && helperText ? `<div${add_classes([
    "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "") + " " + (inline ? "bx--form__helper-text--inline" : "")
  ].join(" ").trim())}>${escape(helperText)}</div>` : ``}` : ``}
  ${!inline && (labelText || $$slots.labelText) ? `<label${add_attribute("for", id, 0)}${add_classes([
    "bx--label " + (hideLabel ? "bx--visually-hidden" : "") + " " + (disabled ? "bx--label--disabled" : "") + " " + (inline ? "bx--label--inline" : "") + " " + (inline && size === "sm" ? "bx--label--inline--sm" : "") + " " + (inline && size === "xl" ? "bx--label--inline--xl" : "")
  ].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
        ${escape(labelText)}
      `}</label>` : ``}
  <div${add_classes([
    "bx--text-input__field-outer-wrapper " + (inline ? "bx--text-input__field-outer-wrapper--inline" : "")
  ].join(" ").trim())}><div${add_attribute("data-invalid", invalid || void 0, 0)}${add_classes([
    "bx--text-input__field-wrapper " + (warn ? "bx--text-input__field-wrapper--warning" : "")
  ].join(" ").trim())}>${invalid ? `${validate_component(WarningFilled16, "WarningFilled16").$$render($$result, {class: "bx--text-input__invalid-icon"}, {}, {})}` : ``}
      ${!invalid && warn ? `${validate_component(WarningAltFilled16, "WarningAltFilled16").$$render($$result, {
    class: "bx--text-input__invalid-icon\n            bx--text-input__invalid-icon--warning"
  }, {}, {})}` : ``}
      <input${spread([
    {
      "data-invalid": escape(invalid || void 0)
    },
    {
      "aria-invalid": escape(invalid || void 0)
    },
    {
      "aria-describedby": escape(invalid ? errorId : warn ? warnId : void 0)
    },
    {id: escape(id)},
    {name: escape(name)},
    {placeholder: escape(placeholder)},
    {type: escape(type)},
    {value: escape(value != null ? value : "")},
    {disabled: disabled || null},
    $$restProps,
    {
      class: escape(size && `bx--text-input--${size}`)
    }
  ], "bx--text-input bx--password-input " + (light ? "bx--text-input--light" : "") + " " + (invalid ? "bx--text-input--invalid" : "") + " " + (warn ? "bx--text-input--warning" : ""))}${add_attribute("this", ref, 1)}>
      <button type="${"button"}" ${disabled ? "disabled" : ""} class="${[
    escape(tooltipPosition && `bx--tooltip--${tooltipPosition}`) + "\n        " + escape(tooltipAlignment && `bx--tooltip--align-${tooltipAlignment}`),
    "bx--text-input--password__visibility__toggle bx--btn bx--btn--icon-only " + (disabled ? "bx--btn--disabled" : "") + " bx--tooltip__trigger bx--tooltip--a11y"
  ].join(" ").trim()}">${!disabled ? `<span${add_classes(["bx--assistive-text"].join(" ").trim())}>${type === "text" ? `${escape(hidePasswordLabel)}` : `${escape(showPasswordLabel)}`}</span>` : ``}
        ${type === "text" ? `${validate_component(ViewOff16, "ViewOff16").$$render($$result, {class: "bx--icon-visibility-off"}, {}, {})}` : `${validate_component(View16, "View16").$$render($$result, {class: "bx--icon-visibility-on"}, {}, {})}`}</button></div>
    ${!isFluid && invalid ? `<div${add_attribute("id", errorId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(invalidText)}</div>` : ``}
    ${!invalid && !warn && !isFluid && !inline ? `<div${add_classes([
    "bx--form__helper-text " + (disabled ? "bx--form__helper-text--disabled" : "") + " " + (inline ? "bx--form__helper-text--inline" : "")
  ].join(" ").trim())}>${escape(helperText)}</div>` : ``}
    ${!isFluid && !invalid && warn ? `<div${add_attribute("id", warnId, 0)}${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(warnText)}</div>` : ``}</div></div>`;
});
const Toggle = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["size", "toggled", "disabled", "labelA", "labelB", "labelText", "id", "name"]);
  let {size = "default"} = $$props;
  let {toggled = false} = $$props;
  let {disabled = false} = $$props;
  let {labelA = "Off"} = $$props;
  let {labelB = "On"} = $$props;
  let {labelText = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  const dispatch = createEventDispatcher();
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.toggled === void 0 && $$bindings.toggled && toggled !== void 0)
    $$bindings.toggled(toggled);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.labelA === void 0 && $$bindings.labelA && labelA !== void 0)
    $$bindings.labelA(labelA);
  if ($$props.labelB === void 0 && $$bindings.labelB && labelB !== void 0)
    $$bindings.labelB(labelB);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  {
    dispatch("toggle", {toggled});
  }
  return `
<div${spread([$$restProps], "bx--form-item")}><input type="${"checkbox"}" ${toggled ? "checked" : ""} ${disabled ? "disabled" : ""}${add_attribute("id", id, 0)}${add_attribute("name", name, 0)}${add_classes([
    "bx--toggle-input " + (size === "sm" ? "bx--toggle-input--small" : "")
  ].join(" ").trim())}>
  <label${add_attribute("aria-label", labelText ? void 0 : $$props["aria-label"] || "Toggle", 0)}${add_attribute("for", id, 0)}${add_classes(["bx--toggle-input__label"].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
      ${escape(labelText)}
    `}
    <span${add_classes(["bx--toggle__switch"].join(" ").trim())}><span aria-hidden="${"true"}"${add_classes(["bx--toggle__text--off"].join(" ").trim())}>${slots.labelA ? slots.labelA({}) : `
          ${escape(labelA)}
        `}</span>
      <span aria-hidden="${"true"}"${add_classes(["bx--toggle__text--on"].join(" ").trim())}>${slots.labelB ? slots.labelB({}) : `
          ${escape(labelB)}
        `}</span></span></label></div>`;
});
const {Object: Object_1} = globals;
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {theme = "white"} = $$props;
  let {tokens = {}} = $$props;
  let {persist = false} = $$props;
  let {persistKey = "theme"} = $$props;
  let {render: render2 = void 0} = $$props;
  let {toggle = {
    themes: ["white", "g100"],
    labelA: "",
    labelB: "",
    labelText: "Dark mode",
    hideLabel: false
  }} = $$props;
  const themes = {
    white: "White",
    g10: "Gray 10",
    g80: "Gray 80",
    g90: "Gray 90",
    g100: "Gray 100"
  };
  const themeKeys = Object.keys(themes);
  let {select = {
    themes: themeKeys,
    labelText: "Themes",
    hideLabel: false
  }} = $$props;
  const dispatch = createEventDispatcher();
  if ($$props.theme === void 0 && $$bindings.theme && theme !== void 0)
    $$bindings.theme(theme);
  if ($$props.tokens === void 0 && $$bindings.tokens && tokens !== void 0)
    $$bindings.tokens(tokens);
  if ($$props.persist === void 0 && $$bindings.persist && persist !== void 0)
    $$bindings.persist(persist);
  if ($$props.persistKey === void 0 && $$bindings.persistKey && persistKey !== void 0)
    $$bindings.persistKey(persistKey);
  if ($$props.render === void 0 && $$bindings.render && render2 !== void 0)
    $$bindings.render(render2);
  if ($$props.toggle === void 0 && $$bindings.toggle && toggle !== void 0)
    $$bindings.toggle(toggle);
  if ($$props.select === void 0 && $$bindings.select && select !== void 0)
    $$bindings.select(select);
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    {
      if (typeof window !== "undefined") {
        Object.entries(tokens).forEach(([token, value]) => {
          document.documentElement.style.setProperty(`--cds-${token}`, value);
        });
        if (theme in themes) {
          document.documentElement.setAttribute("theme", theme);
          dispatch("update", {theme});
        } else {
          console.warn(`[Theme.svelte] invalid theme "${theme}". Value must be one of: ${JSON.stringify(Object.keys(themes))}`);
        }
      }
    }
    $$rendered = `${persist ? `${validate_component(LocalStorage, "LocalStorage").$$render($$result, {key: persistKey, value: theme}, {
      value: ($$value) => {
        theme = $$value;
        $$settled = false;
      }
    }, {})}` : ``}

${render2 === "toggle" ? `${validate_component(Toggle, "Toggle").$$render($$result, Object_1.assign(toggle, {toggled: theme === toggle.themes[1]}), {}, {})}` : `${render2 === "select" ? `${validate_component(Select, "Select").$$render($$result, Object_1.assign(select, {selected: theme}), {
      selected: ($$value) => {
        theme = $$value;
        $$settled = false;
      }
    }, {
      default: () => `${each(select.themes, (theme2) => `${validate_component(SelectItem, "SelectItem").$$render($$result, {value: theme2, text: themes[theme2]}, {}, {})}`)}`
    })}` : ``}`}

${slots.default ? slots.default({theme}) : ``}`;
  } while (!$$settled);
  return $$rendered;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["light"]);
  let {light = false} = $$props;
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  return `
<div${spread([$$restProps], "bx--tile " + (light ? "bx--tile--light" : ""))}>${slots.default ? slots.default({}) : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["clicked", "light", "disabled", "href"]);
  let {clicked = false} = $$props;
  let {light = false} = $$props;
  let {disabled = false} = $$props;
  let {href = void 0} = $$props;
  if ($$props.clicked === void 0 && $$bindings.clicked && clicked !== void 0)
    $$bindings.clicked(clicked);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  return `${validate_component(Link, "Link").$$render($$result, Object.assign($$restProps, {disabled}, {
    class: "bx--tile bx--tile--clickable " + (clicked && "bx--tile--is-clicked") + " " + (light && "bx--tile--light") + " " + $$restProps.class
  }, {href}), {}, {
    default: () => `${slots.default ? slots.default({}) : ``}`
  })}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "expanded",
    "light",
    "tileMaxHeight",
    "tilePadding",
    "tileCollapsedIconText",
    "tileExpandedIconText",
    "tileExpandedLabel",
    "tileCollapsedLabel",
    "tabindex",
    "id",
    "ref"
  ]);
  let {expanded = false} = $$props;
  let {light = false} = $$props;
  let {tileMaxHeight = 0} = $$props;
  let {tilePadding = 0} = $$props;
  let {tileCollapsedIconText = "Interact to expand Tile"} = $$props;
  let {tileExpandedIconText = "Interact to collapse Tile"} = $$props;
  let {tileExpandedLabel = ""} = $$props;
  let {tileCollapsedLabel = ""} = $$props;
  let {tabindex = "0"} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  let refAbove = null;
  afterUpdate(() => {
    if (tileMaxHeight === 0) {
      tileMaxHeight = refAbove.getBoundingClientRect().height;
    }
    const style2 = getComputedStyle(ref);
    tilePadding = parseInt(style2.getPropertyValue("padding-top"), 10) + parseInt(style2.getPropertyValue("padding-bottom"), 10);
  });
  if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0)
    $$bindings.expanded(expanded);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.tileMaxHeight === void 0 && $$bindings.tileMaxHeight && tileMaxHeight !== void 0)
    $$bindings.tileMaxHeight(tileMaxHeight);
  if ($$props.tilePadding === void 0 && $$bindings.tilePadding && tilePadding !== void 0)
    $$bindings.tilePadding(tilePadding);
  if ($$props.tileCollapsedIconText === void 0 && $$bindings.tileCollapsedIconText && tileCollapsedIconText !== void 0)
    $$bindings.tileCollapsedIconText(tileCollapsedIconText);
  if ($$props.tileExpandedIconText === void 0 && $$bindings.tileExpandedIconText && tileExpandedIconText !== void 0)
    $$bindings.tileExpandedIconText(tileExpandedIconText);
  if ($$props.tileExpandedLabel === void 0 && $$bindings.tileExpandedLabel && tileExpandedLabel !== void 0)
    $$bindings.tileExpandedLabel(tileExpandedLabel);
  if ($$props.tileCollapsedLabel === void 0 && $$bindings.tileCollapsedLabel && tileCollapsedLabel !== void 0)
    $$bindings.tileCollapsedLabel(tileCollapsedLabel);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `
<button${spread([
    {type: "button"},
    {id: escape(id)},
    {"aria-expanded": escape(expanded)},
    {tabindex: escape(tabindex)},
    {
      title: escape(expanded ? tileExpandedIconText : tileCollapsedIconText)
    },
    $$restProps,
    {
      style: escape(expanded ? $$restProps.style : `${$$restProps.style}; max-height: ${tileMaxHeight + tilePadding}px`)
    }
  ], "bx--tile bx--tile--expandable " + (expanded ? "bx--tile--is-expanded" : "") + " " + (light ? "bx--tile--light" : ""))}${add_attribute("this", ref, 1)}><div><div${add_classes(["bx--tile-content"].join(" ").trim())}${add_attribute("this", refAbove, 1)}><span${add_classes(["bx--tile-content__above-the-fold"].join(" ").trim())}>${slots.above ? slots.above({}) : ``}</span></div>
    <div${add_classes(["bx--tile__chevron"].join(" ").trim())}><span>${escape(expanded ? tileExpandedLabel : tileCollapsedLabel)}</span>
      ${validate_component(ChevronDown16, "ChevronDown16").$$render($$result, {}, {}, {})}</div>
    <div${add_classes(["bx--tile-content"].join(" ").trim())}><span${add_classes(["bx--tile-content__below-the-fold"].join(" ").trim())}>${slots.below ? slots.below({}) : ``}</span></div></div></button>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "selected",
    "light",
    "disabled",
    "title",
    "value",
    "tabindex",
    "iconDescription",
    "id",
    "name",
    "ref"
  ]);
  let {selected: selected2 = false} = $$props;
  let {light = false} = $$props;
  let {disabled = false} = $$props;
  let {title = "title"} = $$props;
  let {value = "value"} = $$props;
  let {tabindex = "0"} = $$props;
  let {iconDescription = "Tile checkmark"} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = ""} = $$props;
  let {ref = null} = $$props;
  const dispatch = createEventDispatcher();
  if ($$props.selected === void 0 && $$bindings.selected && selected2 !== void 0)
    $$bindings.selected(selected2);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  {
    if (!disabled)
      dispatch(selected2 ? "select" : "deselect", id);
  }
  return `<input type="${"checkbox"}" tabindex="${"-1"}" ${selected2 ? "checked" : ""}${add_attribute("id", id, 0)}${add_attribute("value", value, 0)}${add_attribute("name", name, 0)}${add_attribute("title", title, 0)} ${disabled ? "disabled" : ""}${add_classes(["bx--tile-input"].join(" ").trim())}${add_attribute("this", ref, 1)}>

<label${spread([
    {for: escape(id)},
    {
      tabindex: escape(disabled ? void 0 : tabindex)
    },
    $$restProps
  ], "bx--tile bx--tile--selectable " + (selected2 ? "bx--tile--is-selected" : "") + " " + (light ? "bx--tile--light" : "") + " " + (disabled ? "bx--tile--disabled" : ""))}><span${add_classes(["bx--tile__checkmark"].join(" ").trim())}>${validate_component(CheckmarkFilled16, "CheckmarkFilled16").$$render($$result, {
    "aria-label": iconDescription,
    title: iconDescription
  }, {}, {})}</span>
  <span${add_classes(["bx--tile-content"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</span></label>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["checked", "light", "disabled", "value", "tabindex", "iconDescription", "id", "name"]);
  let $selectedValue, $$unsubscribe_selectedValue;
  let {checked = false} = $$props;
  let {light = false} = $$props;
  let {disabled = false} = $$props;
  let {value = ""} = $$props;
  let {tabindex = "0"} = $$props;
  let {iconDescription = "Tile checkmark"} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = ""} = $$props;
  const {add, update: update2, selectedValue} = getContext("TileGroup");
  $$unsubscribe_selectedValue = subscribe(selectedValue, (value2) => $selectedValue = value2);
  add({value, checked});
  if ($$props.checked === void 0 && $$bindings.checked && checked !== void 0)
    $$bindings.checked(checked);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  checked = value === $selectedValue;
  $$unsubscribe_selectedValue();
  return `<input type="${"radio"}"${add_attribute("id", id, 0)}${add_attribute("name", name, 0)}${add_attribute("value", value, 0)} ${checked ? "checked" : ""}${add_attribute("tabindex", disabled ? void 0 : tabindex, 0)} ${disabled ? "disabled" : ""}${add_classes(["bx--tile-input"].join(" ").trim())}>

<label${spread([{for: escape(id)}, $$restProps], "bx--tile bx--tile--selectable " + (checked ? "bx--tile--is-selected" : "") + " " + (light ? "bx--tile--light" : "") + " " + (disabled ? "bx--tile--disabled" : ""))}><span${add_classes(["bx--tile__checkmark"].join(" ").trim())}>${validate_component(CheckmarkFilled16, "CheckmarkFilled16").$$render($$result, {
    "aria-label": iconDescription,
    title: iconDescription
  }, {}, {})}</span>
  <span${add_classes(["bx--tile-content"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</span></label>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["selected", "disabled", "legend"]);
  let $selectedValue, $$unsubscribe_selectedValue;
  let {selected: selected2 = void 0} = $$props;
  let {disabled = false} = $$props;
  let {legend = ""} = $$props;
  const dispatch = createEventDispatcher();
  const selectedValue = writable(selected2);
  $$unsubscribe_selectedValue = subscribe(selectedValue, (value) => $selectedValue = value);
  setContext("TileGroup", {
    selectedValue,
    add: ({checked, value}) => {
      if (checked) {
        selectedValue.set(value);
      }
    },
    update: (value) => {
      selectedValue.set(value);
      dispatch("select", value);
    }
  });
  if ($$props.selected === void 0 && $$bindings.selected && selected2 !== void 0)
    $$bindings.selected(selected2);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.legend === void 0 && $$bindings.legend && legend !== void 0)
    $$bindings.legend(legend);
  selected2 = $selectedValue;
  {
    selectedValue.set(selected2);
  }
  $$unsubscribe_selectedValue();
  return `<fieldset${spread([{disabled: disabled || null}, $$restProps], "bx--tile-group")}>${legend ? `<legend${add_classes(["bx--label"].join(" ").trim())}>${escape(legend)}</legend>` : ``}
  <div>${slots.default ? slots.default({}) : ``}</div></fieldset>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, [
    "size",
    "value",
    "type",
    "placeholder",
    "pattern",
    "maxlength",
    "light",
    "disabled",
    "labelText",
    "hideLabel",
    "invalid",
    "invalidText",
    "id",
    "name",
    "ref"
  ]);
  let $$slots = compute_slots(slots);
  let {size = void 0} = $$props;
  let {value = ""} = $$props;
  let {type = "text"} = $$props;
  let {placeholder = "hh:mm"} = $$props;
  let {pattern = "(1[012]|[1-9]):[0-5][0-9](\\s)?"} = $$props;
  let {maxlength = 5} = $$props;
  let {light = false} = $$props;
  let {disabled = false} = $$props;
  let {labelText = ""} = $$props;
  let {hideLabel = false} = $$props;
  let {invalid = false} = $$props;
  let {invalidText = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  let {ref = null} = $$props;
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.type === void 0 && $$bindings.type && type !== void 0)
    $$bindings.type(type);
  if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0)
    $$bindings.placeholder(placeholder);
  if ($$props.pattern === void 0 && $$bindings.pattern && pattern !== void 0)
    $$bindings.pattern(pattern);
  if ($$props.maxlength === void 0 && $$bindings.maxlength && maxlength !== void 0)
    $$bindings.maxlength(maxlength);
  if ($$props.light === void 0 && $$bindings.light && light !== void 0)
    $$bindings.light(light);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.invalid === void 0 && $$bindings.invalid && invalid !== void 0)
    $$bindings.invalid(invalid);
  if ($$props.invalidText === void 0 && $$bindings.invalidText && invalidText !== void 0)
    $$bindings.invalidText(invalidText);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `
<div${add_classes(["bx--form-item"].join(" ").trim())}><div${add_classes([
    "bx--time-picker " + (light ? "bx--time-picker--light" : "") + " " + (invalid ? "bx--time-picker--invalid" : "") + " " + (size === "sm" ? "bx--time-picker--sm" : "") + " " + (size === "xl" ? "bx--time-picker--xl" : "") + " " + (light ? "bx--select--light" : "")
  ].join(" ").trim())}><div${add_classes(["bx--time-picker__input"].join(" ").trim())}>${labelText || $$slots.labelText ? `<label${add_attribute("for", id, 0)}${add_classes([
    "bx--label " + (hideLabel ? "bx--visually-hidden" : "") + " " + (disabled ? "bx--label--disabled" : "")
  ].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
            ${escape(labelText)}
          `}</label>` : ``}
      <input${spread([
    {
      "data-invalid": escape(invalid || void 0)
    },
    {pattern: escape(pattern)},
    {placeholder: escape(placeholder)},
    {maxlength: escape(maxlength)},
    {id: escape(id)},
    {name: escape(name)},
    {type: escape(type)},
    {value: escape(value)},
    {disabled: disabled || null},
    $$restProps
  ], "bx--time-picker__input-field bx--text-input " + (light ? "bx--text-input--light" : "") + " " + (invalid ? "bx--text-input--invalid" : ""))}${add_attribute("this", ref, 1)}></div>
    ${slots.default ? slots.default({}) : ``}</div>
  ${invalid ? `<div${add_classes(["bx--form-requirement"].join(" ").trim())}>${escape(invalidText)}</div>` : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["value", "disabled", "iconDescription", "labelText", "hideLabel", "id", "name", "ref"]);
  let $$slots = compute_slots(slots);
  let $selectedValue, $$unsubscribe_selectedValue;
  let {value = ""} = $$props;
  let {disabled = false} = $$props;
  let {iconDescription = "Open list of options"} = $$props;
  let {labelText = ""} = $$props;
  let {hideLabel = true} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  let {ref = null} = $$props;
  const selectedValue = writable(value);
  $$unsubscribe_selectedValue = subscribe(selectedValue, (value2) => $selectedValue = value2);
  setContext("TimePickerSelect", {selectedValue});
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  value = $selectedValue;
  {
    selectedValue.set(value);
  }
  $$unsubscribe_selectedValue();
  return `
<div${spread([$$restProps], "bx--select bx--time-picker__select")}>${labelText || $$slots.labelText ? `<label${add_attribute("for", id, 0)}${add_classes(["bx--label " + (hideLabel ? "bx--visually-hidden" : "")].join(" ").trim())}>
      ${slots.labelText ? slots.labelText({}) : `
        ${escape(labelText)}
      `}</label>` : ``}
  
  <select${add_attribute("id", id, 0)}${add_attribute("name", name, 0)} ${disabled ? "disabled" : ""}${add_attribute("value", value, 0)}${add_classes(["bx--select-input"].join(" ").trim())}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}</select>
  ${validate_component(ChevronDownGlyph, "ChevronDownGlyph").$$render($$result, {
    "aria-label": iconDescription,
    title: iconDescription,
    class: "bx--select__arrow"
  }, {}, {})}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["size", "labelText", "id"]);
  let $$slots = compute_slots(slots);
  let {size = "default"} = $$props;
  let {labelText = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  return `
<div${spread([$$restProps], "bx--form-item")}><input type="${"checkbox"}"${add_attribute("id", id, 0)}${add_classes([
    "bx--toggle " + (size === "sm" ? "bx--toggle--small" : "") + " bx--skeleton"
  ].join(" ").trim())}>
  <label${add_attribute("aria-label", labelText ? void 0 : $$props["aria-label"] || "Toggle is loading", 0)}${add_attribute("for", id, 0)}${add_classes(["bx--toggle__label bx--skeleton"].join(" ").trim())}>${labelText || $$slots.labelText ? `<span${add_classes(["bx--toggle__label-text"].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `
          ${escape(labelText)}
        `}</span>` : ``}
    <span${add_classes(["bx--toggle__text--left"].join(" ").trim())}></span>
    <span${add_classes(["bx--toggle__appearance"].join(" ").trim())}></span>
    <span${add_classes(["bx--toggle__text--right"].join(" ").trim())}></span></label></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["toggled", "disabled", "labelA", "labelB", "labelText", "id", "name"]);
  let {toggled = false} = $$props;
  let {disabled = false} = $$props;
  let {labelA = "Off"} = $$props;
  let {labelB = "On"} = $$props;
  let {labelText = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {name = void 0} = $$props;
  if ($$props.toggled === void 0 && $$bindings.toggled && toggled !== void 0)
    $$bindings.toggled(toggled);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.labelA === void 0 && $$bindings.labelA && labelA !== void 0)
    $$bindings.labelA(labelA);
  if ($$props.labelB === void 0 && $$bindings.labelB && labelB !== void 0)
    $$bindings.labelB(labelB);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.name === void 0 && $$bindings.name && name !== void 0)
    $$bindings.name(name);
  return `


<div${spread([$$restProps], "bx--form-item")}><input type="${"checkbox"}" ${toggled ? "checked" : ""} ${disabled ? "disabled" : ""}${add_attribute("id", id, 0)}${add_attribute("name", name, 0)}${add_classes([
    "bx--toggle-input bx--toggle-input--small"
  ].join(" ").trim())}>
  <label${add_attribute("aria-label", labelText ? void 0 : $$props["aria-label"] || "Toggle", 0)}${add_attribute("for", id, 0)}${add_classes(["bx--toggle-input__label"].join(" ").trim())}>${escape(labelText)}
    <span${add_classes(["bx--toggle__switch"].join(" ").trim())}><svg width="${"6"}" height="${"5"}" viewBox="${"0 0 6 5"}"${add_classes(["bx--toggle__check"].join(" ").trim())}><path d="${"M2.2 2.7L5 0 6 1 2.2 5 0 2.7 1 1.5z"}"></path></svg>
      <span aria-hidden="${"true"}"${add_classes(["bx--toggle__text--off"].join(" ").trim())}>${escape(labelA)}</span>
      <span aria-hidden="${"true"}"${add_classes(["bx--toggle__text--on"].join(" ").trim())}>${escape(labelB)}</span></span></label></div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["labelText", "id"]);
  let {labelText = ""} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  return `


<div${spread([$$restProps], "bx--form-item")}><input type="${"checkbox"}"${add_attribute("id", id, 0)}${add_classes([
    "bx--toggle bx--toggle--small bx--skeleton"
  ].join(" ").trim())}>
  <label${add_attribute("aria-label", labelText ? void 0 : $$props["aria-label"] || "Toggle is loading", 0)}${add_attribute("for", id, 0)}${add_classes(["bx--toggle__label bx--skeleton"].join(" ").trim())}>${labelText ? `<span${add_classes(["bx--toggle__label-text"].join(" ").trim())}>${escape(labelText)}</span>` : ``}
    <span${add_classes(["bx--toggle__appearance"].join(" ").trim())}><svg width="${"6"}" height="${"5"}" viewBox="${"0 0 6 5"}"${add_classes(["bx--toggle__check"].join(" ").trim())}><path d="${"M2.2403 2.7299L4.9245 0 6 1.1117 2.2384 5 0 2.6863 1.0612 1.511z"}"></path></svg></span></label></div>`;
});
const Information16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Information16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 16 16"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M8.5 11L8.5 6.5 6.5 6.5 6.5 7.5 7.5 7.5 7.5 11 6 11 6 12 10 12 10 11zM8 3.5c-.4 0-.8.3-.8.8S7.6 5 8 5c.4 0 .8-.3.8-.8S8.4 3.5 8 3.5z"}"></path><path d="${"M8,15c-3.9,0-7-3.1-7-7s3.1-7,7-7s7,3.1,7,7S11.9,15,8,15z M8,2C4.7,2,2,4.7,2,8s2.7,6,6,6s6-2.7,6-6S11.3,2,8,2z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let buttonProps;
  let $$restProps = compute_rest_props($$props, [
    "align",
    "direction",
    "open",
    "hideIcon",
    "icon",
    "iconDescription",
    "iconName",
    "tabindex",
    "tooltipId",
    "triggerId",
    "triggerText",
    "ref",
    "refTooltip",
    "refIcon"
  ]);
  let {align = "center"} = $$props;
  let {direction: direction2 = "bottom"} = $$props;
  let {open = false} = $$props;
  let {hideIcon = false} = $$props;
  let {icon = Information16} = $$props;
  let {iconDescription = ""} = $$props;
  let {iconName = ""} = $$props;
  let {tabindex = "0"} = $$props;
  let {tooltipId = "ccs-" + Math.random().toString(36)} = $$props;
  let {triggerId = "ccs-" + Math.random().toString(36)} = $$props;
  let {triggerText = ""} = $$props;
  let {ref = null} = $$props;
  let {refTooltip = null} = $$props;
  let {refIcon = null} = $$props;
  const dispatch = createEventDispatcher();
  const tooltipOpen = writable(open);
  setContext("Tooltip", {tooltipOpen});
  afterUpdate(() => {
    if (open) {
      const button = ref.getBoundingClientRect();
      const tooltip = refTooltip.getBoundingClientRect();
      let iconWidth = 16;
      let iconHeight = 16;
      if (refIcon) {
        const icon2 = refIcon.getBoundingClientRect();
        iconWidth = icon2.width;
        iconHeight = icon2.height;
      }
      let offsetX = 0;
      let offsetY = 0;
      switch (direction2) {
        case "bottom":
          if (hideIcon) {
            offsetX = -1 * (tooltip.width / 2 - button.width / 2);
          } else {
            offsetX = -1 * (tooltip.width / 2 - button.width + iconWidth / 2);
          }
          offsetY = iconHeight / 2;
          break;
        case "right":
          offsetX = button.width + 6;
          offsetY = -1 * (tooltip.height / 2 + iconWidth / 2 - 3);
          break;
        case "left":
          if (hideIcon) {
            offsetX = -1 * (tooltip.width + 6 + 1);
          } else {
            offsetX = -1 * (tooltip.width - button.width + iconWidth + 8);
          }
          offsetY = -1 * (tooltip.height / 2 + button.height) - 2;
          break;
        case "top":
          if (hideIcon) {
            offsetX = -1 * (tooltip.width / 2 - button.width / 2);
          } else {
            offsetX = -1 * (tooltip.width / 2 - button.width + iconWidth / 2 + 1);
          }
          offsetY = -1 * (tooltip.height + button.height + iconWidth / 2 - 1);
          break;
      }
      refTooltip.style.left = offsetX + "px";
      refTooltip.style.marginTop = offsetY + "px";
    }
  });
  if ($$props.align === void 0 && $$bindings.align && align !== void 0)
    $$bindings.align(align);
  if ($$props.direction === void 0 && $$bindings.direction && direction2 !== void 0)
    $$bindings.direction(direction2);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.hideIcon === void 0 && $$bindings.hideIcon && hideIcon !== void 0)
    $$bindings.hideIcon(hideIcon);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.iconDescription === void 0 && $$bindings.iconDescription && iconDescription !== void 0)
    $$bindings.iconDescription(iconDescription);
  if ($$props.iconName === void 0 && $$bindings.iconName && iconName !== void 0)
    $$bindings.iconName(iconName);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.tooltipId === void 0 && $$bindings.tooltipId && tooltipId !== void 0)
    $$bindings.tooltipId(tooltipId);
  if ($$props.triggerId === void 0 && $$bindings.triggerId && triggerId !== void 0)
    $$bindings.triggerId(triggerId);
  if ($$props.triggerText === void 0 && $$bindings.triggerText && triggerText !== void 0)
    $$bindings.triggerText(triggerText);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  if ($$props.refTooltip === void 0 && $$bindings.refTooltip && refTooltip !== void 0)
    $$bindings.refTooltip(refTooltip);
  if ($$props.refIcon === void 0 && $$bindings.refIcon && refIcon !== void 0)
    $$bindings.refIcon(refIcon);
  {
    tooltipOpen.set(open);
  }
  {
    dispatch(open ? "open" : "close");
  }
  buttonProps = {
    role: "button",
    "aria-haspopup": "true",
    id: hideIcon ? triggerId : void 0,
    class: hideIcon ? "bx--tooltip__label" : "bx--tooltip__trigger",
    "aria-expanded": open,
    "aria-describedby": open ? tooltipId : void 0,
    "aria-labelledby": triggerText ? triggerId : void 0,
    "aria-label": triggerText ? void 0 : iconDescription,
    tabindex,
    style: hideIcon ? $$restProps.style : void 0
  };
  return `

<div${spread([
    $$restProps,
    {
      style: escape(open ? "z-index: 1;" : "") + escape($$restProps.style) + "; position: relative;"
    }
  ])}>${!hideIcon ? `<div${add_attribute("id", triggerId, 0)}${add_classes(["bx--tooltip__label"].join(" ").trim())}${add_attribute("this", ref, 1)}>${slots.triggerText ? slots.triggerText({}) : `${escape(triggerText)}`}
      <div${spread([buttonProps, {"aria-describedby": escape(tooltipId)}])}${add_attribute("this", refIcon, 1)}>${slots.icon ? slots.icon({}) : `
          ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {name: iconName}, {}, {})}
        `}</div></div>` : `<div${spread([buttonProps, {"aria-describedby": escape(tooltipId)}])}${add_attribute("this", ref, 1)}>${slots.triggerText ? slots.triggerText({}) : `${escape(triggerText)}`}</div>`}
  ${open ? `<div${add_attribute("id", tooltipId, 0)}${add_attribute("data-floating-menu-direction", direction2, 0)}${add_classes([
    "bx--tooltip " + (open ? "bx--tooltip--shown" : "") + " " + (direction2 === "top" ? "bx--tooltip--top" : "") + " " + (direction2 === "right" ? "bx--tooltip--right" : "") + " " + (direction2 === "bottom" ? "bx--tooltip--bottom" : "") + " " + (direction2 === "left" ? "bx--tooltip--left" : "") + " " + (align === "center" ? "bx--tooltip--align-center" : "") + " " + (align === "start" ? "bx--tooltip--align-start" : "") + " " + (align === "end" ? "bx--tooltip--align-end" : "")
  ].join(" ").trim())}${add_attribute("this", refTooltip, 1)}><span${add_classes(["bx--tooltip__caret"].join(" ").trim())}></span>
      <div tabIndex="${"-1"}" role="${"dialog"}"${add_classes(["bx--tooltip__content"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</div></div>` : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {selectorPrimaryFocus = "a[href], button:not([disabled])"} = $$props;
  let ref = null;
  let open = false;
  const ctx = getContext("Tooltip");
  const unsubscribe = ctx.tooltipOpen.subscribe((tooltipOpen) => {
    open = tooltipOpen;
  });
  onMount(() => {
    return () => {
      unsubscribe();
    };
  });
  if ($$props.selectorPrimaryFocus === void 0 && $$bindings.selectorPrimaryFocus && selectorPrimaryFocus !== void 0)
    $$bindings.selectorPrimaryFocus(selectorPrimaryFocus);
  {
    if (open && ref) {
      const node = ref.querySelector(selectorPrimaryFocus);
      if (node)
        node.focus();
    }
  }
  return `<div${add_classes(["bx--tooltip__footer"].join(" ").trim())}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["tooltipText", "open", "align", "direction", "id", "ref"]);
  let {tooltipText = ""} = $$props;
  let {open = false} = $$props;
  let {align = "center"} = $$props;
  let {direction: direction2 = "bottom"} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  const dispatch = createEventDispatcher();
  if ($$props.tooltipText === void 0 && $$bindings.tooltipText && tooltipText !== void 0)
    $$bindings.tooltipText(tooltipText);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.align === void 0 && $$bindings.align && align !== void 0)
    $$bindings.align(align);
  if ($$props.direction === void 0 && $$bindings.direction && direction2 !== void 0)
    $$bindings.direction(direction2);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  {
    dispatch(open ? "open" : "close");
  }
  return `

<span${spread([$$restProps], "bx--tooltip--definition bx--tooltip--a11y")}><button type="${"button"}"${add_attribute("aria-describedby", id, 0)}${add_classes([
    "bx--tooltip--a11y bx--tooltip__trigger bx--tooltip__trigger--definition " + (!open ? "bx--tooltip--hidden" : "") + " " + (open ? "bx--tooltip--visible" : "") + " " + (direction2 === "top" ? "bx--tooltip--top" : "") + " " + (direction2 === "bottom" ? "bx--tooltip--bottom" : "") + " " + (align === "start" ? "bx--tooltip--align-start" : "") + " " + (align === "center" ? "bx--tooltip--align-center" : "") + " " + (align === "end" ? "bx--tooltip--align-end" : "")
  ].join(" ").trim())}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}</button>
  <div role="${"tooltip"}"${add_attribute("id", id, 0)}${add_classes(["bx--assistive-text"].join(" ").trim())}>${slots.tooltip ? slots.tooltip({}) : `${escape(tooltipText)}`}</div></span>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["tooltipText", "icon", "disabled", "align", "direction", "id", "ref"]);
  let {tooltipText = ""} = $$props;
  let {icon = void 0} = $$props;
  let {disabled = false} = $$props;
  let {align = "center"} = $$props;
  let {direction: direction2 = "bottom"} = $$props;
  let {id = "ccs-" + Math.random().toString(36)} = $$props;
  let {ref = null} = $$props;
  if ($$props.tooltipText === void 0 && $$bindings.tooltipText && tooltipText !== void 0)
    $$bindings.tooltipText(tooltipText);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.align === void 0 && $$bindings.align && align !== void 0)
    $$bindings.align(align);
  if ($$props.direction === void 0 && $$bindings.direction && direction2 !== void 0)
    $$bindings.direction(direction2);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `

<button${spread([
    {disabled: disabled || null},
    {"aria-describedby": escape(id)},
    $$restProps,
    {
      style: "cursor: " + escape(disabled ? "not-allowed" : "default") + "; " + escape($$restProps.style)
    }
  ], "bx--tooltip__trigger bx--tooltip--a11y " + (disabled ? "bx--tooltip--hidden" : "") + " " + (direction2 === "top" ? "bx--tooltip--top" : "") + " " + (direction2 === "right" ? "bx--tooltip--right" : "") + " " + (direction2 === "bottom" ? "bx--tooltip--bottom" : "") + " " + (direction2 === "left" ? "bx--tooltip--left" : "") + " " + (align === "start" ? "bx--tooltip--align-start" : "") + " " + (align === "center" ? "bx--tooltip--align-center" : "") + " " + (align === "end" ? "bx--tooltip--align-end" : ""))}${add_attribute("this", ref, 1)}><span${add_attribute("id", id, 0)}${add_classes(["bx--assistive-text"].join(" ").trim())}>${slots.tooltipText ? slots.tooltipText({}) : `${escape(tooltipText)}`}</span>
  ${slots.default ? slots.default({}) : `
    ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
  `}</button>`;
});
const CaretDown16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "CaretDown16"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "16"},
    {height: "16"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M24 12L16 22 8 12z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const TreeViewNode = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let node;
  let $activeNodeId, $$unsubscribe_activeNodeId;
  let $selectedNodeIds, $$unsubscribe_selectedNodeIds;
  let {leaf = false} = $$props;
  let {id = ""} = $$props;
  let {text = ""} = $$props;
  let {disabled = false} = $$props;
  let {icon = void 0} = $$props;
  let ref = null;
  let refLabel = null;
  let prevActiveId = void 0;
  const {activeNodeId, selectedNodeIds, clickNode, selectNode, focusNode} = getContext("TreeView");
  $$unsubscribe_activeNodeId = subscribe(activeNodeId, (value) => $activeNodeId = value);
  $$unsubscribe_selectedNodeIds = subscribe(selectedNodeIds, (value) => $selectedNodeIds = value);
  afterUpdate(() => {
    if (id === $activeNodeId && prevActiveId !== $activeNodeId) {
      if (!$selectedNodeIds.includes(id))
        selectNode(node);
    }
    prevActiveId = $activeNodeId;
  });
  if ($$props.leaf === void 0 && $$bindings.leaf && leaf !== void 0)
    $$bindings.leaf(leaf);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  node = {id, text, expanded: false, leaf};
  $$unsubscribe_activeNodeId();
  $$unsubscribe_selectedNodeIds();
  return `<li role="${"treeitem"}"${add_attribute("id", id, 0)}${add_attribute("tabindex", disabled ? void 0 : -1, 0)}${add_attribute("aria-current", id === $activeNodeId || void 0, 0)}${add_attribute("aria-selected", disabled ? void 0 : $selectedNodeIds.includes(id), 0)}${add_attribute("aria-disabled", disabled, 0)}${add_classes([
    "bx--tree-node bx--tree-leaf-node " + (id === $activeNodeId ? "bx--tree-node--active" : "") + " " + ($selectedNodeIds.includes(id) ? "bx--tree-node--selected" : "") + " " + (disabled ? "bx--tree-node--disabled" : "") + " " + (icon ? "bx--tree-node--with-icon" : "")
  ].join(" ").trim())}${add_attribute("this", ref, 1)}><div${add_classes(["bx--tree-node__label"].join(" ").trim())}${add_attribute("this", refLabel, 1)}>${validate_component(icon || missing_component, "svelte:component").$$render($$result, {class: "bx--tree-node__icon"}, {}, {})}
    ${escape(text)}</div></li>`;
});
const TreeViewNodeList = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let parent;
  let node;
  let $activeNodeId, $$unsubscribe_activeNodeId;
  let $selectedNodeIds, $$unsubscribe_selectedNodeIds;
  let $expandedNodeIds, $$unsubscribe_expandedNodeIds;
  let {children = []} = $$props;
  let {expanded = false} = $$props;
  let {root = false} = $$props;
  let {id = ""} = $$props;
  let {text = ""} = $$props;
  let {disabled = false} = $$props;
  let {icon = void 0} = $$props;
  let ref = null;
  let refLabel = null;
  let prevActiveId = void 0;
  const {activeNodeId, selectedNodeIds, expandedNodeIds, clickNode, selectNode, expandNode, focusNode, toggleNode} = getContext("TreeView");
  $$unsubscribe_activeNodeId = subscribe(activeNodeId, (value) => $activeNodeId = value);
  $$unsubscribe_selectedNodeIds = subscribe(selectedNodeIds, (value) => $selectedNodeIds = value);
  $$unsubscribe_expandedNodeIds = subscribe(expandedNodeIds, (value) => $expandedNodeIds = value);
  afterUpdate(() => {
    if (id === $activeNodeId && prevActiveId !== $activeNodeId) {
      if (!$selectedNodeIds.includes(id))
        selectNode(node);
    }
    prevActiveId = $activeNodeId;
  });
  if ($$props.children === void 0 && $$bindings.children && children !== void 0)
    $$bindings.children(children);
  if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0)
    $$bindings.expanded(expanded);
  if ($$props.root === void 0 && $$bindings.root && root !== void 0)
    $$bindings.root(root);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  parent = Array.isArray(children);
  expanded = $expandedNodeIds.includes(id);
  node = {id, text, expanded, leaf: !parent};
  $$unsubscribe_activeNodeId();
  $$unsubscribe_selectedNodeIds();
  $$unsubscribe_expandedNodeIds();
  return `${root ? `${each(children, (child) => `${Array.isArray(child.children) ? `${validate_component(TreeViewNodeList, "svelte:self").$$render($$result, Object.assign(child), {}, {})}` : `${validate_component(TreeViewNode, "TreeViewNode").$$render($$result, Object.assign({leaf: true}, child), {}, {})}`}`)}` : `<li role="${"treeitem"}"${add_attribute("id", id, 0)}${add_attribute("tabindex", disabled ? void 0 : -1, 0)}${add_attribute("aria-current", id === $activeNodeId || void 0, 0)}${add_attribute("aria-selected", disabled ? void 0 : $selectedNodeIds.includes(id), 0)}${add_attribute("aria-disabled", disabled, 0)}${add_attribute("aria-expanded", expanded, 0)}${add_classes([
    "bx--tree-node bx--tree-parent-node " + (id === $activeNodeId ? "bx--tree-node--active" : "") + " " + ($selectedNodeIds.includes(id) ? "bx--tree-node--selected" : "") + " " + (disabled ? "bx--tree-node--disabled" : "") + " " + (icon ? "bx--tree-node--with-icon" : "")
  ].join(" ").trim())}${add_attribute("this", ref, 1)}><div${add_classes(["bx--tree-node__label"].join(" ").trim())}${add_attribute("this", refLabel, 1)}><span ${disabled ? "disabled" : ""}${add_classes(["bx--tree-parent-node__toggle"].join(" ").trim())}>${validate_component(CaretDown16, "CaretDown16").$$render($$result, {
    class: "bx--tree-parent-node__toggle-icon " + (expanded && "bx--tree-parent-node__toggle-icon--expanded")
  }, {}, {})}</span>
      <span${add_classes(["bx--tree-node__label__details"].join(" ").trim())}>${validate_component(icon || missing_component, "svelte:component").$$render($$result, {class: "bx--tree-node__icon"}, {}, {})}
        ${escape(text)}</span></div>
    ${expanded ? `<ul role="${"group"}"${add_classes(["bx--tree-node__children"].join(" ").trim())}>${each(children, (child) => `${Array.isArray(child.children) ? `${validate_component(TreeViewNodeList, "svelte:self").$$render($$result, Object.assign(child), {}, {})}` : `${validate_component(TreeViewNode, "TreeViewNode").$$render($$result, Object.assign({leaf: true}, child), {}, {})}`}`)}</ul>` : ``}</li>`}`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let nodes;
  let nodeIds;
  let $$restProps = compute_rest_props($$props, [
    "children",
    "activeId",
    "selectedIds",
    "expandedIds",
    "size",
    "labelText",
    "hideLabel",
    "expandAll",
    "collapseAll",
    "expandNodes",
    "collapseNodes"
  ]);
  let {children = []} = $$props;
  let {activeId = ""} = $$props;
  let {selectedIds = []} = $$props;
  let {expandedIds = []} = $$props;
  let {size = "default"} = $$props;
  let {labelText = ""} = $$props;
  let {hideLabel = false} = $$props;
  function expandAll() {
    expandedIds = [...nodeIds];
  }
  function collapseAll() {
    expandedIds = [];
  }
  function expandNodes(filterNode = (node) => false) {
    expandedIds = nodes.filter((node) => {
      var _a;
      return filterNode(node) || ((_a = node.children) == null ? void 0 : _a.some((child) => filterNode(child) && child.children));
    }).map((node) => node.id);
  }
  function collapseNodes(filterNode = (node) => true) {
    expandedIds = nodes.filter((node) => expandedIds.includes(node.id) && !filterNode(node)).map((node) => node.id);
  }
  const dispatch = createEventDispatcher();
  const labelId = `label-${Math.random().toString(36)}`;
  const activeNodeId = writable(activeId);
  const selectedNodeIds = writable(selectedIds);
  const expandedNodeIds = writable(expandedIds);
  let ref = null;
  setContext("TreeView", {
    activeNodeId,
    selectedNodeIds,
    expandedNodeIds,
    clickNode: (node) => {
      activeId = node.id;
      selectedIds = [node.id];
      dispatch("select", node);
    },
    selectNode: (node) => {
      selectedIds = [node.id];
    },
    expandNode: (node, expanded) => {
      if (expanded) {
        expandedIds = [...expandedIds, node.id];
      } else {
        expandedIds = expandedIds.filter((_id) => _id !== node.id);
      }
    },
    focusNode: (node) => dispatch("focus", node),
    toggleNode: (node) => dispatch("toggle", node)
  });
  onMount(() => {
    const firstFocusableNode = ref.querySelector("li.bx--tree-node:not(.bx--tree-node--disabled)");
    if (firstFocusableNode != null) {
      firstFocusableNode.tabIndex = "0";
    }
  });
  function traverse(children2) {
    let nodes2 = [];
    children2.forEach((node) => {
      nodes2.push(node);
      if (Array.isArray(node.children)) {
        nodes2 = [...nodes2, ...traverse(node.children)];
      }
    });
    return nodes2;
  }
  if ($$props.children === void 0 && $$bindings.children && children !== void 0)
    $$bindings.children(children);
  if ($$props.activeId === void 0 && $$bindings.activeId && activeId !== void 0)
    $$bindings.activeId(activeId);
  if ($$props.selectedIds === void 0 && $$bindings.selectedIds && selectedIds !== void 0)
    $$bindings.selectedIds(selectedIds);
  if ($$props.expandedIds === void 0 && $$bindings.expandedIds && expandedIds !== void 0)
    $$bindings.expandedIds(expandedIds);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.labelText === void 0 && $$bindings.labelText && labelText !== void 0)
    $$bindings.labelText(labelText);
  if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
    $$bindings.hideLabel(hideLabel);
  if ($$props.expandAll === void 0 && $$bindings.expandAll && expandAll !== void 0)
    $$bindings.expandAll(expandAll);
  if ($$props.collapseAll === void 0 && $$bindings.collapseAll && collapseAll !== void 0)
    $$bindings.collapseAll(collapseAll);
  if ($$props.expandNodes === void 0 && $$bindings.expandNodes && expandNodes !== void 0)
    $$bindings.expandNodes(expandNodes);
  if ($$props.collapseNodes === void 0 && $$bindings.collapseNodes && collapseNodes !== void 0)
    $$bindings.collapseNodes(collapseNodes);
  nodes = traverse(children);
  nodeIds = nodes.map((node) => node.id);
  {
    activeNodeId.set(activeId);
  }
  {
    selectedNodeIds.set(selectedIds);
  }
  {
    expandedNodeIds.set(expandedIds);
  }
  return `${!hideLabel ? `
  <label${add_attribute("id", labelId, 0)}${add_classes(["bx--label"].join(" ").trim())}>${slots.labelText ? slots.labelText({}) : `${escape(labelText)}`}</label>` : ``}

<ul${spread([
    $$restProps,
    {role: "tree"},
    {
      "aria-label": escape(hideLabel ? labelText : void 0)
    },
    {
      "aria-labelledby": escape(!hideLabel ? labelId : void 0)
    },
    {
      "aria-multiselectable": escape(selectedIds.length > 1 || void 0)
    }
  ], "bx--tree " + (size === "default" ? "bx--tree--default" : "") + " " + (size === "compact" ? "bx--tree--compact" : ""))}${add_attribute("this", ref, 1)}>${validate_component(TreeViewNodeList, "TreeViewNodeList").$$render($$result, {root: true, children}, {}, {})}</ul>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["clamp"]);
  let {clamp = "end"} = $$props;
  if ($$props.clamp === void 0 && $$bindings.clamp && clamp !== void 0)
    $$bindings.clamp(clamp);
  return `<p${spread([$$restProps], (clamp === "end" ? "bx--text-truncate--end" : "") + " " + (clamp === "front" ? "bx--text-truncate--front" : ""))}>${slots.default ? slots.default({}) : ``}</p>`;
});
const Menu20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Menu20"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 20 20"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M2 14.8H18V16H2zM2 11.2H18V12.399999999999999H2zM2 7.6H18V8.799999999999999H2zM2 4H18V5.2H2z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const shouldRenderHamburgerMenu = writable(false);
const HamburgerMenu = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["ariaLabel", "isOpen", "iconMenu", "iconClose", "ref"]);
  let {ariaLabel = void 0} = $$props;
  let {isOpen = false} = $$props;
  let {iconMenu = Menu20} = $$props;
  let {iconClose = Close20} = $$props;
  let {ref = null} = $$props;
  if ($$props.ariaLabel === void 0 && $$bindings.ariaLabel && ariaLabel !== void 0)
    $$bindings.ariaLabel(ariaLabel);
  if ($$props.isOpen === void 0 && $$bindings.isOpen && isOpen !== void 0)
    $$bindings.isOpen(isOpen);
  if ($$props.iconMenu === void 0 && $$bindings.iconMenu && iconMenu !== void 0)
    $$bindings.iconMenu(iconMenu);
  if ($$props.iconClose === void 0 && $$bindings.iconClose && iconClose !== void 0)
    $$bindings.iconClose(iconClose);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `<button${spread([
    {type: "button"},
    {title: escape(ariaLabel)},
    {"aria-label": escape(ariaLabel)},
    $$restProps
  ], "bx--header__action bx--header__menu-trigger bx--header__menu-toggle")}${add_attribute("this", ref, 1)}>${validate_component((isOpen ? iconClose : iconMenu) || missing_component, "svelte:component").$$render($$result, {}, {}, {})}</button>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let $$restProps = compute_rest_props($$props, [
    "expandedByDefault",
    "isSideNavOpen",
    "uiShellAriaLabel",
    "href",
    "company",
    "platformName",
    "persistentHamburgerMenu",
    "expansionBreakpoint",
    "ref",
    "iconMenu",
    "iconClose"
  ]);
  let $shouldRenderHamburgerMenu, $$unsubscribe_shouldRenderHamburgerMenu;
  $$unsubscribe_shouldRenderHamburgerMenu = subscribe(shouldRenderHamburgerMenu, (value) => $shouldRenderHamburgerMenu = value);
  let {expandedByDefault = true} = $$props;
  let {isSideNavOpen = false} = $$props;
  let {uiShellAriaLabel = void 0} = $$props;
  let {href = void 0} = $$props;
  let {company = void 0} = $$props;
  let {platformName = ""} = $$props;
  let {persistentHamburgerMenu = false} = $$props;
  let {expansionBreakpoint = 1056} = $$props;
  let {ref = null} = $$props;
  let {iconMenu = Menu20} = $$props;
  let {iconClose = Close20} = $$props;
  let winWidth = void 0;
  if ($$props.expandedByDefault === void 0 && $$bindings.expandedByDefault && expandedByDefault !== void 0)
    $$bindings.expandedByDefault(expandedByDefault);
  if ($$props.isSideNavOpen === void 0 && $$bindings.isSideNavOpen && isSideNavOpen !== void 0)
    $$bindings.isSideNavOpen(isSideNavOpen);
  if ($$props.uiShellAriaLabel === void 0 && $$bindings.uiShellAriaLabel && uiShellAriaLabel !== void 0)
    $$bindings.uiShellAriaLabel(uiShellAriaLabel);
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.company === void 0 && $$bindings.company && company !== void 0)
    $$bindings.company(company);
  if ($$props.platformName === void 0 && $$bindings.platformName && platformName !== void 0)
    $$bindings.platformName(platformName);
  if ($$props.persistentHamburgerMenu === void 0 && $$bindings.persistentHamburgerMenu && persistentHamburgerMenu !== void 0)
    $$bindings.persistentHamburgerMenu(persistentHamburgerMenu);
  if ($$props.expansionBreakpoint === void 0 && $$bindings.expansionBreakpoint && expansionBreakpoint !== void 0)
    $$bindings.expansionBreakpoint(expansionBreakpoint);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  if ($$props.iconMenu === void 0 && $$bindings.iconMenu && iconMenu !== void 0)
    $$bindings.iconMenu(iconMenu);
  if ($$props.iconClose === void 0 && $$bindings.iconClose && iconClose !== void 0)
    $$bindings.iconClose(iconClose);
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    isSideNavOpen = expandedByDefault && winWidth >= expansionBreakpoint && !persistentHamburgerMenu;
    ariaLabel = company ? `${company} ` : "" + (uiShellAriaLabel || $$props["aria-label"] || platformName);
    $$rendered = `

<header${add_attribute("aria-label", ariaLabel, 0)}${add_classes(["bx--header"].join(" ").trim())}>${slots["skip-to-content"] ? slots["skip-to-content"]({}) : ``}
  ${$shouldRenderHamburgerMenu && winWidth < expansionBreakpoint || persistentHamburgerMenu ? `${validate_component(HamburgerMenu, "HamburgerMenu").$$render($$result, {
      iconClose,
      iconMenu,
      isOpen: isSideNavOpen
    }, {
      isOpen: ($$value) => {
        isSideNavOpen = $$value;
        $$settled = false;
      }
    }, {})}` : ``}
  <a${spread([{href: escape(href)}, $$restProps], "bx--header__name")}${add_attribute("this", ref, 1)}>${company ? `<span${add_classes(["bx--header__name--prefix"].join(" ").trim())}>${escape(company)}\xA0</span>` : ``}
    ${slots.platform ? slots.platform({}) : `${escape(platformName)}`}</a>
  ${slots.default ? slots.default({}) : ``}</header>`;
  } while (!$$settled);
  $$unsubscribe_shouldRenderHamburgerMenu();
  return $$rendered;
});
const AppSwitcher20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "AppSwitcher20"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M14 4H18V8H14zM4 4H8V8H4zM24 4H28V8H24zM14 14H18V18H14zM4 14H8V18H4zM24 14H28V18H24zM14 24H18V28H14zM4 24H8V28H4zM24 24H28V28H24z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
var HeaderAction_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\n.action-text.svelte-187bdaq.svelte-187bdaq{\n  display:inline-flex;\n  align-items:center;\n  width:auto;\n  padding:0 1rem 2px 1rem;\n  font-size:0.875rem;\n  line-height:1.28572;\n  letter-spacing:0.16px;\n  color:#f4f4f4\n}\n\n.action-text.svelte-187bdaq>span.svelte-187bdaq{\n  margin-left:0.75rem\n}\n\n/* purgecss end ignore */";
const css$b = {
  code: ".action-text.svelte-187bdaq.svelte-187bdaq{display:inline-flex;align-items:center;width:auto;padding:0 1rem 2px 1rem;font-size:0.875rem;line-height:1.28572;letter-spacing:0.16px;color:#f4f4f4}.action-text.svelte-187bdaq>span.svelte-187bdaq{margin-left:0.75rem}",
  map: '{"version":3,"file":"HeaderAction.svelte","sources":["HeaderAction.svelte"],"sourcesContent":["<script>\\n  /** Set to `true` to open the panel */\\n  export let isOpen = false;\\n\\n  /**\\n   * Specify the icon to render\\n   * @type {typeof import(\\"svelte\\").SvelteComponent}\\n   */\\n  export let icon = AppSwitcher20;\\n\\n  /**\\n   * Specify the icon to render when the action panel is open\\n   * @type {typeof import(\\"svelte\\").SvelteComponent}\\n   */\\n  export let closeIcon = Close20;\\n\\n  /**\\n   * Specify the text\\n   * Alternatively, use the named slot \\"text\\" (e.g., <div slot=\\"text\\">...</div>)\\n   * @type {string}\\n   */\\n  export let text = undefined;\\n\\n  /** Obtain a reference to the button HTML element */\\n  export let ref = null;\\n\\n  /**\\n   * Customize the panel transition (i.e., `transition:slide`).\\n   * Set to `false` to disable the transition\\n   * @type {false | import(\\"svelte/transition\\").SlideParams}\\n   */\\n  export let transition = { duration: 200 };\\n\\n  import { createEventDispatcher } from \\"svelte\\";\\n  import { slide } from \\"svelte/transition\\";\\n  import Close20 from \\"../../icons/Close20.svelte\\";\\n  import AppSwitcher20 from \\"../../icons/AppSwitcher20.svelte\\";\\n\\n  const dispatch = createEventDispatcher();\\n\\n  let refPanel = null;\\n</script>\\n\\n<svelte:window\\n  on:click=\\"{({ target }) => {\\n    if (isOpen && !ref.contains(target) && !refPanel.contains(target)) {\\n      isOpen = false;\\n      dispatch(\'close\');\\n    }\\n  }}\\"\\n/>\\n\\n<button\\n  bind:this=\\"{ref}\\"\\n  type=\\"button\\"\\n  class:bx--header__action=\\"{true}\\"\\n  class:bx--header__action--active=\\"{isOpen}\\"\\n  class:action-text=\\"{text}\\"\\n  {...$$restProps}\\n  on:click\\n  on:click|stopPropagation=\\"{() => {\\n    isOpen = !isOpen;\\n    dispatch(isOpen ? \'open\' : \'close\');\\n  }}\\"\\n>\\n  {#if isOpen}\\n    <slot name=\\"closeIcon\\">\\n      <svelte:component this=\\"{closeIcon}\\" />\\n    </slot>\\n  {:else}\\n    <slot name=\\"icon\\">\\n      <svelte:component this=\\"{icon}\\" />\\n    </slot>\\n  {/if}\\n  <slot name=\\"text\\">\\n    {#if text}<span>{text}</span>{/if}\\n  </slot>\\n</button>\\n{#if isOpen}\\n  <div\\n    bind:this=\\"{refPanel}\\"\\n    class:bx--header-panel=\\"{true}\\"\\n    class:bx--header-panel--expanded=\\"{true}\\"\\n    transition:slide=\\"{{\\n      ...transition,\\n      duration: transition === false ? 0 : transition.duration,\\n    }}\\"\\n  >\\n    <slot />\\n  </div>\\n{/if}\\n\\n<style>\\n  .action-text {\\n    display: inline-flex;\\n    align-items: center;\\n    width: auto;\\n\\n    /** 2px bottom padding aligns icon with `HeaderAction` */\\n    padding: 0 1rem 2px 1rem;\\n\\n    /** `body-short-01` styles */\\n    font-size: 0.875rem;\\n    line-height: 1.28572;\\n    letter-spacing: 0.16px;\\n\\n    /** Same color as `Header` platformName */\\n    color: #f4f4f4;\\n  }\\n\\n  .action-text > span {\\n    margin-left: 0.75rem;\\n  }\\n</style>\\n"],"names":[],"mappings":"AA6FE,YAAY,8BAAC,CAAC,AACZ,OAAO,CAAE,WAAW,CACpB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,IAAI,CAGX,OAAO,CAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAGxB,SAAS,CAAE,QAAQ,CACnB,WAAW,CAAE,OAAO,CACpB,cAAc,CAAE,MAAM,CAGtB,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,2BAAY,CAAG,IAAI,eAAC,CAAC,AACnB,WAAW,CAAE,OAAO,AACtB,CAAC"}'
};
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["isOpen", "icon", "closeIcon", "text", "ref", "transition"]);
  let {isOpen = false} = $$props;
  let {icon = AppSwitcher20} = $$props;
  let {closeIcon = Close20} = $$props;
  let {text = void 0} = $$props;
  let {ref = null} = $$props;
  let {transition = {duration: 200}} = $$props;
  createEventDispatcher();
  let refPanel = null;
  if ($$props.isOpen === void 0 && $$bindings.isOpen && isOpen !== void 0)
    $$bindings.isOpen(isOpen);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.closeIcon === void 0 && $$bindings.closeIcon && closeIcon !== void 0)
    $$bindings.closeIcon(closeIcon);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  if ($$props.transition === void 0 && $$bindings.transition && transition !== void 0)
    $$bindings.transition(transition);
  $$result.css.add(css$b);
  return `

<button${spread([{type: "button"}, $$restProps], "bx--header__action " + (isOpen ? "bx--header__action--active" : "") + " " + (text ? "action-text" : "") + " svelte-187bdaq")}${add_attribute("this", ref, 1)}>${isOpen ? `${slots.closeIcon ? slots.closeIcon({}) : `
      ${validate_component(closeIcon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
    `}` : `${slots.icon ? slots.icon({}) : `
      ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
    `}`}
  ${slots.text ? slots.text({}) : `
    ${text ? `<span class="${"svelte-187bdaq"}">${escape(text)}</span>` : ``}
  `}</button>
${isOpen ? `<div${add_classes([
    "bx--header-panel bx--header-panel--expanded"
  ].join(" ").trim())}${add_attribute("this", refPanel, 1)}>${slots.default ? slots.default({}) : ``}</div>` : ``}`;
});
var HeaderActionLink_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\n.bx--header__action.svelte-smaelc{\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  padding-bottom:2px\n}\n\n/* purgecss end ignore */";
const css$a = {
  code: ".bx--header__action.svelte-smaelc{display:flex;align-items:center;justify-content:center;padding-bottom:2px}",
  map: '{"version":3,"file":"HeaderActionLink.svelte","sources":["HeaderActionLink.svelte"],"sourcesContent":["<script>\\n  /** Set to `true` to use the active state */\\n  export let linkIsActive = false;\\n\\n  /**\\n   * Specify the `href` attribute\\n   * @type {string}\\n   */\\n  export let href = undefined;\\n\\n  /**\\n   * Specify the icon to render\\n   * @type {typeof import(\\"svelte\\").SvelteComponent}\\n   */\\n  export let icon = undefined;\\n\\n  /** Obtain a reference to the HTML anchor element */\\n  export let ref = null;\\n</script>\\n\\n<a\\n  bind:this=\\"{ref}\\"\\n  class:bx--header__action=\\"{true}\\"\\n  class:bx--header__action--active=\\"{linkIsActive}\\"\\n  href=\\"{href}\\"\\n  rel=\\"{$$restProps.target === \'_blank\' ? \'noopener noreferrer\' : undefined}\\"\\n  {...$$restProps}\\n>\\n  <slot name=\\"icon\\">\\n    <svelte:component this=\\"{icon}\\" />\\n  </slot>\\n</a>\\n\\n<style>\\n  .bx--header__action {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    /** Hot fix to align icon with `HeaderAction` */\\n    padding-bottom: 2px;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAkCE,mBAAmB,cAAC,CAAC,AACnB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CAEvB,cAAc,CAAE,GAAG,AACrB,CAAC"}'
};
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["linkIsActive", "href", "icon", "ref"]);
  let {linkIsActive = false} = $$props;
  let {href = void 0} = $$props;
  let {icon = void 0} = $$props;
  let {ref = null} = $$props;
  if ($$props.linkIsActive === void 0 && $$bindings.linkIsActive && linkIsActive !== void 0)
    $$bindings.linkIsActive(linkIsActive);
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  $$result.css.add(css$a);
  return `<a${spread([
    {href: escape(href)},
    {
      rel: escape($$restProps.target === "_blank" ? "noopener noreferrer" : void 0)
    },
    $$restProps
  ], "bx--header__action " + (linkIsActive ? "bx--header__action--active" : "") + " svelte-smaelc")}${add_attribute("this", ref, 1)}>${slots.icon ? slots.icon({}) : `
    ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
  `}
</a>`;
});
const Search20 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let ariaLabel;
  let ariaLabelledBy;
  let labelled;
  let attributes;
  let {class: className = void 0} = $$props;
  let {id = void 0} = $$props;
  let {tabindex = void 0} = $$props;
  let {focusable = false} = $$props;
  let {title = void 0} = $$props;
  let {style: style2 = void 0} = $$props;
  if ($$props.class === void 0 && $$bindings.class && className !== void 0)
    $$bindings.class(className);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  if ($$props.focusable === void 0 && $$bindings.focusable && focusable !== void 0)
    $$bindings.focusable(focusable);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.style === void 0 && $$bindings.style && style2 !== void 0)
    $$bindings.style(style2);
  ariaLabel = $$props["aria-label"];
  ariaLabelledBy = $$props["aria-labelledby"];
  labelled = ariaLabel || ariaLabelledBy || title;
  attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    "aria-hidden": labelled ? void 0 : true,
    role: labelled ? "img" : void 0,
    focusable: tabindex === "0" ? true : focusable,
    tabindex
  };
  return `
<svg${spread([
    {"data-carbon-icon": "Search20"},
    {xmlns: "http://www.w3.org/2000/svg"},
    {viewBox: "0 0 32 32"},
    {fill: "currentColor"},
    {width: "20"},
    {height: "20"},
    {class: escape(className)},
    {preserveAspectRatio: "xMidYMid meet"},
    {style: escape(style2)},
    {id: escape(id)},
    attributes
  ])}><path d="${"M29,27.5859l-7.5521-7.5521a11.0177,11.0177,0,1,0-1.4141,1.4141L27.5859,29ZM4,13a9,9,0,1,1,9,9A9.01,9.01,0,0,1,4,13Z"}"></path>${slots.default ? slots.default({}) : `
    ${title ? `<title>${escape(title)}</title>` : ``}
  `}</svg>`;
});
const data = [
  {
    href: "#",
    title: "Test title search 1",
    menu: "Test menu 1",
    description: "This is a description for seach #1"
  },
  {
    href: "#",
    title: "Changing text to simulate search",
    menu: "Test menu 2",
    description: "This is a description for seach #2"
  },
  {
    href: "#",
    title: "More testing texts",
    menu: "Test menu 3",
    description: "This is a description for seach #3"
  },
  {
    href: "#",
    title: "We can find here another test text",
    menu: "Test menu 4",
    description: "This is a description for seach #4"
  }
];
const globalStore = writable(void 0);
const store = {
  subscribe: globalStore.subscribe,
  search: (searchString) => {
    if (searchString.length > 1) {
      let resultSearch = [];
      data.forEach((item) => {
        if (item.title.toLowerCase().includes(searchString.toLowerCase())) {
          resultSearch.push(item);
        }
      });
      if (resultSearch.length > 0) {
        globalStore.set(resultSearch);
      } else {
        globalStore.set(void 0);
      }
    } else {
      globalStore.set(void 0);
    }
  },
  clear: () => {
    globalStore.set(void 0);
  }
};
var HeaderActionSearch_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\n.search-wrapper.svelte-16k0yud{\n  position:relative;\n  display:flex;\n  max-width:28rem;\n  width:100%;\n  margin-left:0.5rem;\n  height:3rem;\n  background-color:#393939;\n  color:#fff;\n  transition:max-width 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\n      background 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)\n}\n\n.search-wrapper-hidden.svelte-16k0yud{\n  max-width:3rem;\n  background-color:#161616\n}\n\n.search-focus.svelte-16k0yud{\n  outline:2px solid #fff;\n  outline-offset:-2px\n}\n\n.search-wrapper-2.svelte-16k0yud{\n  display:flex;\n  flex-grow:1;\n  border-bottom:1px solid #393939\n}\n\n.btn-search.svelte-16k0yud{\n  width:3rem;\n  height:100%;\n  padding:0;\n  flex-shrink:0;\n  opacity:1;\n  transition:background-color 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\n      opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)\n}\n\n.btn-search-disabled.svelte-16k0yud{\n  border:none;\n  pointer-events:none\n}\n\n.input-search.svelte-16k0yud{\n  font-size:1rem;\n  font-weight:400;\n  line-height:1.375rem;\n  letter-spacing:0;\n  color:#fff;\n  caret-color:#fff;\n  background-color:initial;\n  border:none;\n  outline:none;\n  width:100%;\n  height:3rem;\n  padding:0;\n  transition:opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)\n}\n\n.input-hidden.svelte-16k0yud{\n  opacity:0;\n  pointer-events:none\n}\n\n.btn-clear.svelte-16k0yud{\n  width:3rem;\n  height:100%;\n  padding:0;\n  flex-shrink:0;\n  opacity:1;\n  display:block;\n  transition:background-color 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\n      opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)\n}\n\n.btn-clear.svelte-16k0yud:hover{\n  background-color:#4c4c4c\n}\n\n.btn-clear-hidden.svelte-16k0yud{\n  opacity:0;\n  display:none\n}\n\n/* purgecss end ignore */";
const css$9 = {
  code: ".search-wrapper.svelte-16k0yud{position:relative;display:flex;max-width:28rem;width:100%;margin-left:0.5rem;height:3rem;background-color:#393939;color:#fff;transition:max-width 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\n      background 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)}.search-wrapper-hidden.svelte-16k0yud{max-width:3rem;background-color:#161616}.search-focus.svelte-16k0yud{outline:2px solid #fff;outline-offset:-2px}.search-wrapper-2.svelte-16k0yud{display:flex;flex-grow:1;border-bottom:1px solid #393939}.btn-search.svelte-16k0yud{width:3rem;height:100%;padding:0;flex-shrink:0;opacity:1;transition:background-color 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\n      opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)}.btn-search-disabled.svelte-16k0yud{border:none;pointer-events:none}.input-search.svelte-16k0yud{font-size:1rem;font-weight:400;line-height:1.375rem;letter-spacing:0;color:#fff;caret-color:#fff;background-color:initial;border:none;outline:none;width:100%;height:3rem;padding:0;transition:opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)}.input-hidden.svelte-16k0yud{opacity:0;pointer-events:none}.btn-clear.svelte-16k0yud{width:3rem;height:100%;padding:0;flex-shrink:0;opacity:1;display:block;transition:background-color 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\n      opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)}.btn-clear.svelte-16k0yud:hover{background-color:#4c4c4c}.btn-clear-hidden.svelte-16k0yud{opacity:0;display:none}",
  map: `{"version":3,"file":"HeaderActionSearch.svelte","sources":["HeaderActionSearch.svelte"],"sourcesContent":["<script>\\n  /**\\n   * @event {{ action: \\"search\\"; textInput: string; }} inputSearch\\n   */\\n\\n  /** Set to \`true\` to focus the search */\\n  export let searchIsActive = false;\\n\\n  import { createEventDispatcher } from \\"svelte\\";\\n  import Close20 from \\"../../icons/Close20.svelte\\";\\n  import Search20 from \\"../../icons/Search20.svelte\\";\\n  import searchStore from \\"../searchStore\\";\\n\\n  const dispatch = createEventDispatcher();\\n\\n  let searchTabIndex = \\"0\\";\\n  let closeTabIndex = \\"-1\\";\\n  let elInput = undefined;\\n  let elTypeSearch = undefined;\\n  let isSearchFocus = false;\\n\\n  function dispatchInputs(event) {\\n    const params = {\\n      action: \\"search\\",\\n      textInput: event.target.value,\\n    };\\n\\n    dispatch(\\"inputSearch\\", params);\\n  }\\n\\n  $: if (!searchIsActive) {\\n    if (elInput) {\\n      elInput.value = \\"\\";\\n    }\\n    searchStore.clear();\\n  }\\n  $: if (searchIsActive) {\\n    searchTabIndex = \\"-1\\";\\n    closeTabIndex = \\"0\\";\\n  } else {\\n    searchTabIndex = \\"0\\";\\n    closeTabIndex = \\"-1\\";\\n  }\\n  $: if (isSearchFocus) {\\n    elInput.focus();\\n  }\\n  $: showResults = $searchStore ? true : false;\\n</script>\\n\\n<svelte:window\\n  on:mouseup=\\"{({ target }) => {\\n    if (target && elTypeSearch) {\\n      if (!elTypeSearch.contains(target)) {\\n        searchIsActive = false;\\n        isSearchFocus = false;\\n      }\\n    }\\n  }}\\"\\n/>\\n\\n<!-- @component\\n@deprecated\\nThis component is deprecated. Use \`HeaderSearch\` instead.\\n-->\\n<div\\n  bind:this=\\"{elTypeSearch}\\"\\n  role=\\"search\\"\\n  class=\\"search-wrapper\\"\\n  class:search-wrapper-hidden=\\"{!searchIsActive}\\"\\n  class:search-focus=\\"{isSearchFocus || searchIsActive}\\"\\n>\\n  <div\\n    id=\\"right-panel-action-search\\"\\n    class=\\"search-wrapper-2\\"\\n    role=\\"combobox\\"\\n    aria-expanded=\\"{searchIsActive}\\"\\n  >\\n    <button\\n      tabindex=\\"{searchTabIndex}\\"\\n      aria-label=\\"Search\\"\\n      class:bx--header__action=\\"{true}\\"\\n      class:btn-search=\\"{true}\\"\\n      class:btn-search-disabled=\\"{searchIsActive}\\"\\n      on:click=\\"{() => {\\n        isSearchFocus = true;\\n        searchIsActive = true;\\n        dispatch('focusInputSearch');\\n      }}\\"\\n      type=\\"button\\"\\n      on:keydown=\\"{({ key }) => {\\n        if (key === 'Enter') {\\n          searchIsActive = !searchIsActive;\\n        }\\n      }}\\"\\n    >\\n      <svelte:component this=\\"{Search20}\\" title=\\"Search\\" tabindex=\\"0\\" />\\n    </button>\\n    <input\\n      bind:this=\\"{elInput}\\"\\n      id=\\"input-search-field\\"\\n      type=\\"text\\"\\n      autocomplete=\\"off\\"\\n      tabindex=\\"{closeTabIndex}\\"\\n      class=\\"input-search\\"\\n      class:input-hidden=\\"{!searchIsActive}\\"\\n      placeholder=\\"Search\\"\\n      on:focus=\\"{() => dispatch('focusInputSearch')}\\"\\n      on:focusout=\\"{() => dispatch('focusOutInputSearch')}\\"\\n      on:input=\\"{dispatchInputs}\\"\\n    />\\n    <button\\n      id=\\"right-panel-close-search\\"\\n      tabindex=\\"{closeTabIndex}\\"\\n      class:bx--header__action=\\"{true}\\"\\n      class:btn-clear=\\"{true}\\"\\n      class:btn-clear-hidden=\\"{!searchIsActive}\\"\\n      type=\\"button\\"\\n      aria-label=\\"Clear search\\"\\n      on:click=\\"{() => {\\n        isSearchFocus = false;\\n        searchIsActive = false;\\n        searchStore.clear();\\n      }}\\"\\n      on:keydown=\\"{({ key }) => {\\n        if (key === 'Enter') {\\n          searchIsActive = !searchIsActive;\\n        }\\n      }}\\"\\n    >\\n      <svelte:component this=\\"{Close20}\\" title=\\"Close\\" tabindex=\\"0\\" />\\n    </button>\\n  </div>\\n</div>\\n\\n<style>\\n  .search-wrapper {\\n    position: relative;\\n    display: flex;\\n    max-width: 28rem;\\n    width: 100%;\\n    margin-left: 0.5rem;\\n    height: 3rem;\\n    background-color: #393939;\\n    color: #fff;\\n    transition: max-width 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\\n      background 0.11s cubic-bezier(0.2, 0, 0.38, 0.9);\\n  }\\n\\n  .search-wrapper-hidden {\\n    max-width: 3rem;\\n    background-color: #161616;\\n  }\\n\\n  .search-focus {\\n    outline: 2px solid #fff;\\n    outline-offset: -2px;\\n  }\\n\\n  .search-wrapper-2 {\\n    display: flex;\\n    flex-grow: 1;\\n    border-bottom: 1px solid #393939;\\n  }\\n\\n  .btn-search {\\n    width: 3rem;\\n    height: 100%;\\n    padding: 0;\\n    flex-shrink: 0;\\n    opacity: 1;\\n    transition: background-color 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\\n      opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9);\\n  }\\n\\n  .btn-search-disabled {\\n    border: none;\\n    pointer-events: none;\\n  }\\n\\n  .input-search {\\n    font-size: 1rem;\\n    font-weight: 400;\\n    line-height: 1.375rem;\\n    letter-spacing: 0;\\n    color: #fff;\\n    caret-color: #fff;\\n    background-color: initial;\\n    border: none;\\n    outline: none;\\n    width: 100%;\\n    height: 3rem;\\n    padding: 0;\\n    transition: opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9);\\n  }\\n\\n  .input-hidden {\\n    opacity: 0;\\n    pointer-events: none;\\n  }\\n\\n  .btn-clear {\\n    width: 3rem;\\n    height: 100%;\\n    padding: 0;\\n    flex-shrink: 0;\\n    opacity: 1;\\n    display: block;\\n    transition: background-color 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\\n      opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9);\\n  }\\n\\n  .btn-clear:hover {\\n    background-color: #4c4c4c;\\n  }\\n\\n  .btn-clear-hidden {\\n    opacity: 0;\\n    display: none;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAuIE,eAAe,eAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1D,UAAU,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,AACpD,CAAC,AAED,sBAAsB,eAAC,CAAC,AACtB,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,aAAa,eAAC,CAAC,AACb,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACvB,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,iBAAiB,eAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,CAAC,CACZ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAClC,CAAC,AAED,WAAW,eAAC,CAAC,AACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,WAAW,CAAE,CAAC,CACd,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;MACjE,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,AACjD,CAAC,AAED,oBAAoB,eAAC,CAAC,AACpB,MAAM,CAAE,IAAI,CACZ,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,aAAa,eAAC,CAAC,AACb,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,QAAQ,CACrB,cAAc,CAAE,CAAC,CACjB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,CACjB,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,AAC3D,CAAC,AAED,aAAa,eAAC,CAAC,AACb,OAAO,CAAE,CAAC,CACV,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,WAAW,CAAE,CAAC,CACd,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;MACjE,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,AACjD,CAAC,AAED,yBAAU,MAAM,AAAC,CAAC,AAChB,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,iBAAiB,eAAC,CAAC,AACjB,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,AACf,CAAC"}`
};
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_searchStore;
  $$unsubscribe_searchStore = subscribe(store, (value) => value);
  let {searchIsActive = false} = $$props;
  createEventDispatcher();
  let searchTabIndex = "0";
  let closeTabIndex = "-1";
  let elInput = void 0;
  let elTypeSearch = void 0;
  if ($$props.searchIsActive === void 0 && $$bindings.searchIsActive && searchIsActive !== void 0)
    $$bindings.searchIsActive(searchIsActive);
  $$result.css.add(css$9);
  {
    if (!searchIsActive) {
      store.clear();
    }
  }
  {
    if (searchIsActive) {
      searchTabIndex = "-1";
      closeTabIndex = "0";
    } else {
      searchTabIndex = "0";
      closeTabIndex = "-1";
    }
  }
  $$unsubscribe_searchStore();
  return `


<div role="${"search"}" class="${[
    "search-wrapper svelte-16k0yud",
    (!searchIsActive ? "search-wrapper-hidden" : "") + " " + (searchIsActive ? "search-focus" : "")
  ].join(" ").trim()}"${add_attribute("this", elTypeSearch, 1)}><div id="${"right-panel-action-search"}" class="${"search-wrapper-2 svelte-16k0yud"}" role="${"combobox"}"${add_attribute("aria-expanded", searchIsActive, 0)}><button${add_attribute("tabindex", searchTabIndex, 0)} aria-label="${"Search"}" type="${"button"}" class="${[
    "svelte-16k0yud",
    "bx--header__action btn-search " + (searchIsActive ? "btn-search-disabled" : "")
  ].join(" ").trim()}">${validate_component(Search20 || missing_component, "svelte:component").$$render($$result, {title: "Search", tabindex: "0"}, {}, {})}</button>
    <input id="${"input-search-field"}" type="${"text"}" autocomplete="${"off"}"${add_attribute("tabindex", closeTabIndex, 0)} class="${["input-search svelte-16k0yud", !searchIsActive ? "input-hidden" : ""].join(" ").trim()}" placeholder="${"Search"}"${add_attribute("this", elInput, 1)}>
    <button id="${"right-panel-close-search"}"${add_attribute("tabindex", closeTabIndex, 0)} type="${"button"}" aria-label="${"Clear search"}" class="${[
    "svelte-16k0yud",
    "bx--header__action btn-clear " + (!searchIsActive ? "btn-clear-hidden" : "")
  ].join(" ").trim()}">${validate_component(Close20 || missing_component, "svelte:component").$$render($$result, {title: "Close", tabindex: "0"}, {}, {})}</button></div>
</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let props;
  let $$restProps = compute_rest_props($$props, ["ariaLabel"]);
  let {ariaLabel = void 0} = $$props;
  if ($$props.ariaLabel === void 0 && $$bindings.ariaLabel && ariaLabel !== void 0)
    $$bindings.ariaLabel(ariaLabel);
  props = {
    "aria-label": ariaLabel || $$props["aria-label"],
    "aria-labelledby": $$props["aria-labelledby"]
  };
  return `<nav${spread([props, $$restProps], "bx--header__nav")}><ul${spread([props, {role: "menubar"}], "bx--header__menu-bar")}>${slots.default ? slots.default({}) : ``}</ul></nav>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["href", "text", "isSelected", "ref"]);
  let {href = void 0} = $$props;
  let {text = void 0} = $$props;
  let {isSelected = false} = $$props;
  let {ref = null} = $$props;
  const id = "ccs-" + Math.random().toString(36);
  const ctx = getContext("HeaderNavMenu");
  const unsubSelectedItems = ctx == null ? void 0 : ctx.selectedItems.subscribe((_selectedItems) => {
  });
  onMount(() => {
    return () => {
      if (unsubSelectedItems)
        unsubSelectedItems();
    };
  });
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.isSelected === void 0 && $$bindings.isSelected && isSelected !== void 0)
    $$bindings.isSelected(isSelected);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  {
    ctx == null ? void 0 : ctx.updateSelectedItems({id, isSelected});
  }
  return `<li role="${"none"}"><a${spread([
    {role: "menuitem"},
    {tabindex: "0"},
    {href: escape(href)},
    {
      rel: escape($$restProps.target === "_blank" ? "noopener noreferrer" : void 0)
    },
    {
      "aria-current": escape(isSelected ? "page" : void 0)
    },
    $$restProps
  ], "bx--header__menu-item")}${add_attribute("this", ref, 1)}><span${add_classes(["bx--text-truncate--end"].join(" ").trim())}>${escape(text)}</span></a></li>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let isCurrentSubmenu;
  let $$restProps = compute_rest_props($$props, ["expanded", "href", "text", "ref"]);
  let $selectedItems, $$unsubscribe_selectedItems;
  let {expanded = false} = $$props;
  let {href = "/"} = $$props;
  let {text = void 0} = $$props;
  let {ref = null} = $$props;
  const selectedItems = writable({});
  $$unsubscribe_selectedItems = subscribe(selectedItems, (value) => $selectedItems = value);
  let menuRef = null;
  setContext("HeaderNavMenu", {
    selectedItems,
    updateSelectedItems(item) {
      selectedItems.update((_items) => ({..._items, [item.id]: item.isSelected}));
    },
    closeMenu() {
      expanded = false;
    }
  });
  if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0)
    $$bindings.expanded(expanded);
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  isCurrentSubmenu = Object.values($selectedItems).filter(Boolean).length > 0;
  $$unsubscribe_selectedItems();
  return `

<li role="${"none"}"${add_classes([
    "bx--header__submenu " + (isCurrentSubmenu ? "bx--header__submenu--current" : "")
  ].join(" ").trim())}><a${spread([
    {role: "menuitem"},
    {tabindex: "0"},
    {"aria-haspopup": "menu"},
    {"aria-expanded": escape(expanded)},
    {"aria-label": escape(text)},
    {href: escape(href)},
    $$restProps,
    {
      style: escape($$restProps.style) + "; z-index: 1"
    }
  ], "bx--header__menu-item bx--header__menu-title")}${add_attribute("this", ref, 1)}>${escape(text)}
    ${validate_component(ChevronDown16, "ChevronDown16").$$render($$result, {class: "bx--header__menu-arrow"}, {}, {})}</a>
  <ul role="${"menu"}"${add_attribute("aria-label", text, 0)}${add_classes(["bx--header__menu"].join(" ").trim())}${add_attribute("this", menuRef, 1)}>${slots.default ? slots.default({}) : ``}</ul></li>`;
});
var HeaderPanelDivider_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\nli.svelte-1tbdbmc{\n  margin:2rem 1rem 0;\n  color:#525252\n}\n\nspan.svelte-1tbdbmc{\n  font-size:0.75rem;\n  line-height:1.3;\n  letter-spacing:0.02rem;\n  color:#c6c6c6\n}\n\n/* purgecss end ignore */";
const css$8 = {
  code: "li.svelte-1tbdbmc{margin:2rem 1rem 0;color:#525252}span.svelte-1tbdbmc{font-size:0.75rem;line-height:1.3;letter-spacing:0.02rem;color:#c6c6c6}",
  map: '{"version":3,"file":"HeaderPanelDivider.svelte","sources":["HeaderPanelDivider.svelte"],"sourcesContent":["{#if $$slots.default}\\n  <li>\\n    <span>\\n      <slot />\\n    </span>\\n  </li>\\n{/if}\\n<hr class:bx--switcher__item--divider=\\"{true}\\" />\\n\\n<style>\\n  /**\\n    * Carbon does not support a divider with a subject.\\n    * We apply custom styles using the switcher subject divider\\n    * from https://carbondesignsystem.com/ as a reference.\\n    */\\n\\n  li {\\n    margin: 2rem 1rem 0;\\n    color: #525252;\\n  }\\n  span {\\n    font-size: 0.75rem;\\n    line-height: 1.3;\\n    letter-spacing: 0.02rem;\\n    color: #c6c6c6;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAgBE,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CACnB,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,GAAG,CAChB,cAAc,CAAE,OAAO,CACvB,KAAK,CAAE,OAAO,AAChB,CAAC"}'
};
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$slots = compute_slots(slots);
  $$result.css.add(css$8);
  return `${$$slots.default ? `<li class="${"svelte-1tbdbmc"}"><span class="${"svelte-1tbdbmc"}">${slots.default ? slots.default({}) : ``}</span></li>` : ``}
<hr${add_classes(["bx--switcher__item--divider"].join(" ").trim())}>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["href", "ref"]);
  let {href = void 0} = $$props;
  let {ref = null} = $$props;
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `<li${add_classes(["bx--switcher__item"].join(" ").trim())}><a${spread([
    {href: escape(href)},
    {
      rel: escape($$restProps.target === "_blank" ? "noopener noreferrer" : void 0)
    },
    $$restProps
  ], "bx--switcher__item-link")}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : ``}</a></li>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<ul${add_classes(["bx--switcher__item"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</ul>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<div${add_classes(["bx--header__global"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["fixed", "rail", "ariaLabel", "isOpen", "expansionBreakpoint"]);
  let {fixed = false} = $$props;
  let {rail = false} = $$props;
  let {ariaLabel = void 0} = $$props;
  let {isOpen = false} = $$props;
  let {expansionBreakpoint = 1056} = $$props;
  const dispatch = createEventDispatcher();
  let winWidth = void 0;
  onMount(() => {
    shouldRenderHamburgerMenu.set(true);
    return () => shouldRenderHamburgerMenu.set(false);
  });
  if ($$props.fixed === void 0 && $$bindings.fixed && fixed !== void 0)
    $$bindings.fixed(fixed);
  if ($$props.rail === void 0 && $$bindings.rail && rail !== void 0)
    $$bindings.rail(rail);
  if ($$props.ariaLabel === void 0 && $$bindings.ariaLabel && ariaLabel !== void 0)
    $$bindings.ariaLabel(ariaLabel);
  if ($$props.isOpen === void 0 && $$bindings.isOpen && isOpen !== void 0)
    $$bindings.isOpen(isOpen);
  if ($$props.expansionBreakpoint === void 0 && $$bindings.expansionBreakpoint && expansionBreakpoint !== void 0)
    $$bindings.expansionBreakpoint(expansionBreakpoint);
  {
    dispatch(isOpen ? "open" : "close");
  }
  return `

${!fixed ? `<div${add_classes([
    "bx--side-nav__overlay " + (isOpen ? "bx--side-nav__overlay-active" : "")
  ].join(" ").trim())}></div>` : ``}
<nav${spread([
    {"aria-hidden": escape(!isOpen)},
    {"aria-label": escape(ariaLabel)},
    $$restProps
  ], "bx--side-nav__navigation bx--side-nav bx--side-nav--ux " + ((rail && winWidth >= expansionBreakpoint ? false : isOpen) ? "bx--side-nav--expanded" : "") + " " + (!isOpen && !rail ? "bx--side-nav--collapsed" : "") + " " + (rail ? "bx--side-nav--rail" : ""))}>${slots.default ? slots.default({}) : ``}</nav>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<ul${add_classes(["bx--side-nav__items"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</ul>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["isSelected", "href", "text", "icon", "ref"]);
  let $$slots = compute_slots(slots);
  let {isSelected = false} = $$props;
  let {href = void 0} = $$props;
  let {text = void 0} = $$props;
  let {icon = void 0} = $$props;
  let {ref = null} = $$props;
  if ($$props.isSelected === void 0 && $$bindings.isSelected && isSelected !== void 0)
    $$bindings.isSelected(isSelected);
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `<li${add_classes(["bx--side-nav__item"].join(" ").trim())}><a${spread([
    {
      "aria-current": escape(isSelected ? "page" : void 0)
    },
    {href: escape(href)},
    {
      rel: escape($$restProps.target === "_blank" ? "noopener noreferrer" : void 0)
    },
    $$restProps
  ], "bx--side-nav__link " + (isSelected ? "bx--side-nav__link--current" : ""))}${add_attribute("this", ref, 1)}>${$$slots.icon || icon ? `<div${add_classes([
    "bx--side-nav__icon bx--side-nav__icon--small"
  ].join(" ").trim())}>${slots.icon ? slots.icon({}) : `
          ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
        `}</div>` : ``}
    <span${add_classes(["bx--side-nav__link-text"].join(" ").trim())}>${slots.default ? slots.default({}) : `
        ${escape(text)}
      `}</span></a></li>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["expanded", "text", "icon", "ref"]);
  let $$slots = compute_slots(slots);
  let {expanded = false} = $$props;
  let {text = void 0} = $$props;
  let {icon = void 0} = $$props;
  let {ref = null} = $$props;
  if ($$props.expanded === void 0 && $$bindings.expanded && expanded !== void 0)
    $$bindings.expanded(expanded);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `<li${add_classes([
    "bx--side-nav__item " + (icon ? "bx--side-nav__item--icon" : "")
  ].join(" ").trim())}><button${spread([{type: "button"}, {"aria-expanded": escape(expanded)}, $$restProps], "bx--side-nav__submenu")}${add_attribute("this", ref, 1)}>${$$slots.icon || icon ? `<div${add_classes(["bx--side-nav__icon"].join(" ").trim())}>${slots.icon ? slots.icon({}) : `
          ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
        `}</div>` : ``}
    <span${add_classes(["bx--side-nav__submenu-title"].join(" ").trim())}>${escape(text)}</span>
    <div${add_classes([
    "bx--side-nav__icon bx--side-nav__icon--small bx--side-nav__submenu-chevron"
  ].join(" ").trim())}>${validate_component(ChevronDown16 || missing_component, "svelte:component").$$render($$result, {title: "Open Menu", tabindex: "0"}, {}, {})}</div></button>
  <ul role="${"menu"}"${add_classes(["bx--side-nav__menu"].join(" ").trim())}>${slots.default ? slots.default({}) : ``}</ul></li>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["isSelected", "href", "text", "ref"]);
  let {isSelected = false} = $$props;
  let {href = void 0} = $$props;
  let {text = void 0} = $$props;
  let {ref = null} = $$props;
  if ($$props.isSelected === void 0 && $$bindings.isSelected && isSelected !== void 0)
    $$bindings.isSelected(isSelected);
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `<li${add_classes(["bx--side-nav__menu-item"].join(" ").trim())}><a${spread([
    {
      "aria-current": escape(isSelected ? "page" : void 0)
    },
    {href: escape(href)},
    $$restProps
  ], "bx--side-nav__link")}${add_attribute("this", ref, 1)}><span${add_classes(["bx--side-nav__link-text"].join(" ").trim())}>${slots.default ? slots.default({}) : `${escape(text)}`}</span></a></li>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["id"]);
  let {id = "main-content"} = $$props;
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  return `<main${spread([{id: escape(id)}, $$restProps], "bx--content")}>${slots.default ? slots.default({}) : ``}</main>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["href", "tabindex"]);
  let {href = "#main-content"} = $$props;
  let {tabindex = "0"} = $$props;
  if ($$props.href === void 0 && $$bindings.href && href !== void 0)
    $$bindings.href(href);
  if ($$props.tabindex === void 0 && $$bindings.tabindex && tabindex !== void 0)
    $$bindings.tabindex(tabindex);
  return `<a${spread([{href: escape(href)}, {tabindex: escape(tabindex)}, $$restProps], "bx--skip-to-content")}>${slots.default ? slots.default({}) : `Skip to main content`}</a>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, ["isActive", "icon", "ref"]);
  let {isActive = false} = $$props;
  let {icon = void 0} = $$props;
  let {ref = null} = $$props;
  if ($$props.isActive === void 0 && $$bindings.isActive && isActive !== void 0)
    $$bindings.isActive(isActive);
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0)
    $$bindings.icon(icon);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  return `<button${spread([{type: "button"}, $$restProps], "bx--header__action " + (isActive ? "bx--header__action--active" : ""))}${add_attribute("this", ref, 1)}>${slots.default ? slots.default({}) : `
    ${validate_component(icon || missing_component, "svelte:component").$$render($$result, {}, {}, {})}
  `}</button>`;
});
var HeaderSearch_svelte_svelte_type_style_lang = '/* purgecss start ignore */\n\nlabel.svelte-qozwl4.svelte-qozwl4{\n  position:absolute;\n  width:1px;\n  height:1px;\n  margin:-1px;\n  padding:0;\n  overflow:hidden;\n  white-space:nowrap;\n  border:0;\n  visibility:inherit;\n  clip:rect(0, 0, 0, 0)\n}\n\n[role="search"].svelte-qozwl4.svelte-qozwl4{\n  position:relative;\n  display:flex;\n  max-width:28rem;\n  width:100%;\n  margin-left:0.5rem;\n  height:3rem;\n  background-color:#393939;\n  color:#fff;\n  transition:max-width 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\n      background 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)\n}\n\n[role="search"].svelte-qozwl4.svelte-qozwl4:not(.active){\n  max-width:3rem;\n  background-color:#161616\n}\n\n[role="search"].active.svelte-qozwl4.svelte-qozwl4{\n  outline:2px solid #fff;\n  outline-offset:-2px\n}\n\n[role="combobox"].svelte-qozwl4.svelte-qozwl4{\n  display:flex;\n  flex-grow:1;\n  border-bottom:1px solid #393939\n}\n\ninput.svelte-qozwl4.svelte-qozwl4{\n  width:100%;\n  height:3rem;\n  padding:0;\n  font-size:1rem;\n  font-weight:400;\n  line-height:1.375rem;\n  letter-spacing:0;\n  color:#fff;\n  caret-color:#fff;\n  background-color:initial;\n  border:none;\n  outline:none;\n  transition:opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)\n}\n\ninput.svelte-qozwl4.svelte-qozwl4:not(.active){\n  opacity:0;\n  pointer-events:none\n}\n\nbutton.svelte-qozwl4.svelte-qozwl4{\n  width:3rem;\n  height:100%;\n  padding:0;\n  flex-shrink:0;\n  opacity:1;\n  transition:background-color 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\n      opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)\n}\n\n.disabled.svelte-qozwl4.svelte-qozwl4{\n  border:none;\n  pointer-events:none\n}\n\n[aria-label="Clear search"].svelte-qozwl4.svelte-qozwl4:hover{\n  background-color:#4c4c4c\n}\n\n.hidden.svelte-qozwl4.svelte-qozwl4{\n  opacity:0;\n  display:none\n}\n\nul.svelte-qozwl4.svelte-qozwl4{\n  position:absolute;\n  z-index:10000;\n  padding:1rem 0;\n  left:0;\n  right:0;\n  top:3rem;\n  background-color:#161616;\n  border:1px solid #393939;\n  border-top:none;\n  box-shadow:0 4px 8px 0 rgba(0, 0, 0, 0.5)\n}\n\n[role="menuitem"].svelte-qozwl4.svelte-qozwl4{\n  padding:6px 1rem;\n  cursor:pointer;\n  font-size:0.875rem;\n  font-weight:600;\n  line-height:1.29;\n  letter-spacing:0.16px;\n  transition:all 70ms cubic-bezier(0.2, 0, 0.38, 0.9);\n  display:block;\n  text-decoration:none;\n  white-space:nowrap;\n  overflow:hidden;\n  text-overflow:ellipsis;\n  color:#c6c6c6\n}\n\n.selected.svelte-qozwl4.svelte-qozwl4,[role="menuitem"].svelte-qozwl4.svelte-qozwl4:hover{\n  background-color:#353535;\n  color:#f4f4f4\n}\n\n[role="menuitem"].svelte-qozwl4 span.svelte-qozwl4{\n  font-size:0.75rem;\n  font-weight:400;\n  line-height:1.34;\n  letter-spacing:0.32px;\n  text-transform:lowercase;\n  color:#c6c6c6\n}\n\n/* purgecss end ignore */';
const css$7 = {
  code: 'label.svelte-qozwl4.svelte-qozwl4{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;white-space:nowrap;border:0;visibility:inherit;clip:rect(0, 0, 0, 0)}[role="search"].svelte-qozwl4.svelte-qozwl4{position:relative;display:flex;max-width:28rem;width:100%;margin-left:0.5rem;height:3rem;background-color:#393939;color:#fff;transition:max-width 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\n      background 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)}[role="search"].svelte-qozwl4.svelte-qozwl4:not(.active){max-width:3rem;background-color:#161616}[role="search"].active.svelte-qozwl4.svelte-qozwl4{outline:2px solid #fff;outline-offset:-2px}[role="combobox"].svelte-qozwl4.svelte-qozwl4{display:flex;flex-grow:1;border-bottom:1px solid #393939}input.svelte-qozwl4.svelte-qozwl4{width:100%;height:3rem;padding:0;font-size:1rem;font-weight:400;line-height:1.375rem;letter-spacing:0;color:#fff;caret-color:#fff;background-color:initial;border:none;outline:none;transition:opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)}input.svelte-qozwl4.svelte-qozwl4:not(.active){opacity:0;pointer-events:none}button.svelte-qozwl4.svelte-qozwl4{width:3rem;height:100%;padding:0;flex-shrink:0;opacity:1;transition:background-color 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\n      opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9)}.disabled.svelte-qozwl4.svelte-qozwl4{border:none;pointer-events:none}[aria-label="Clear search"].svelte-qozwl4.svelte-qozwl4:hover{background-color:#4c4c4c}.hidden.svelte-qozwl4.svelte-qozwl4{opacity:0;display:none}ul.svelte-qozwl4.svelte-qozwl4{position:absolute;z-index:10000;padding:1rem 0;left:0;right:0;top:3rem;background-color:#161616;border:1px solid #393939;border-top:none;box-shadow:0 4px 8px 0 rgba(0, 0, 0, 0.5)}[role="menuitem"].svelte-qozwl4.svelte-qozwl4{padding:6px 1rem;cursor:pointer;font-size:0.875rem;font-weight:600;line-height:1.29;letter-spacing:0.16px;transition:all 70ms cubic-bezier(0.2, 0, 0.38, 0.9);display:block;text-decoration:none;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:#c6c6c6}.selected.svelte-qozwl4.svelte-qozwl4,[role="menuitem"].svelte-qozwl4.svelte-qozwl4:hover{background-color:#353535;color:#f4f4f4}[role="menuitem"].svelte-qozwl4 span.svelte-qozwl4{font-size:0.75rem;font-weight:400;line-height:1.34;letter-spacing:0.32px;text-transform:lowercase;color:#c6c6c6}',
  map: `{"version":3,"file":"HeaderSearch.svelte","sources":["HeaderSearch.svelte"],"sourcesContent":["<script>\\n  /**\\n   * @typedef {{ href: string; text: string; description?: string; }} HeaderSearchResult\\n   * @event {null} active\\n   * @event {null} inactive\\n   * @event {null} clear\\n   * @event {{ value: string; selectedResultIndex: number; selectedResult: HeaderSearchResult }} select\\n   * @slot {{ result: HeaderSearchResult; index: number }}\\n   */\\n\\n  /** Specify the search input value */\\n  export let value = \\"\\";\\n\\n  /** Set to \`true\` to activate and focus the search bar */\\n  export let active = false;\\n\\n  /** Obtain a reference to the input HTML element */\\n  export let ref = null;\\n\\n  /**\\n   * Render a list of search results\\n   * @type {HeaderSearchResult[]}\\n   */\\n  export let results = [];\\n\\n  /** Specify the selected result index */\\n  export let selectedResultIndex = 0;\\n\\n  import { createEventDispatcher, tick } from \\"svelte\\";\\n  import Close20 from \\"../icons/Close20.svelte\\";\\n  import Search20 from \\"../icons/Search20.svelte\\";\\n\\n  const dispatch = createEventDispatcher();\\n\\n  let refSearch = null;\\n\\n  function reset() {\\n    active = false;\\n    value = \\"\\";\\n    selectedResultIndex = 0;\\n  }\\n\\n  function selectResult() {\\n    dispatch(\\"select\\", { value, selectedResultIndex, selectedResult });\\n    reset();\\n  }\\n\\n  $: if (active && ref) ref.focus();\\n  $: dispatch(active ? \\"active\\" : \\"inactive\\");\\n  $: selectedResult = results[selectedResultIndex];\\n  $: selectedId = selectedResult\\n    ? \`search-menuitem-\${selectedResultIndex}\`\\n    : undefined;\\n</script>\\n\\n<svelte:window\\n  on:mouseup=\\"{({ target }) => {\\n    if (active && !refSearch.contains(target)) active = false;\\n  }}\\"\\n/>\\n\\n<div bind:this=\\"{refSearch}\\" role=\\"search\\" class:active>\\n  <label for=\\"search-input\\" id=\\"search-label\\">Search</label>\\n  <div role=\\"combobox\\" aria-expanded=\\"{active}\\">\\n    <button\\n      type=\\"button\\"\\n      aria-label=\\"Search\\"\\n      tabindex=\\"{active ? '-1' : '0'}\\"\\n      class:bx--header__action=\\"{true}\\"\\n      class:disabled=\\"{active}\\"\\n      on:click=\\"{() => {\\n        active = true;\\n      }}\\"\\n    >\\n      <Search20 title=\\"Search\\" />\\n    </button>\\n    <input\\n      bind:this=\\"{ref}\\"\\n      type=\\"text\\"\\n      autocomplete=\\"off\\"\\n      placeholder=\\"Search...\\"\\n      tabindex=\\"{active ? '0' : '-1'}\\"\\n      class:active\\n      {...$$restProps}\\n      id=\\"search-input\\"\\n      aria-activedescendant=\\"{selectedId}\\"\\n      bind:value\\n      on:change\\n      on:input\\n      on:focus\\n      on:blur\\n      on:keydown\\n      on:keydown=\\"{(e) => {\\n        switch (e.key) {\\n          case 'Enter':\\n            selectResult();\\n            break;\\n          case 'ArrowDown':\\n            e.preventDefault();\\n            if (selectedResultIndex === results.length - 1) {\\n              selectedResultIndex = 0;\\n            } else {\\n              selectedResultIndex += 1;\\n            }\\n            break;\\n          case 'ArrowUp':\\n            e.preventDefault();\\n            if (selectedResultIndex === 0) {\\n              selectedResultIndex = results.length - 1;\\n            } else {\\n              selectedResultIndex -= 1;\\n            }\\n            break;\\n        }\\n      }}\\"\\n    />\\n    <button\\n      type=\\"button\\"\\n      aria-label=\\"Clear search\\"\\n      tabindex=\\"{active ? '0' : '-1'}\\"\\n      class:bx--header__action=\\"{true}\\"\\n      class:hidden=\\"{!active}\\"\\n      on:click=\\"{() => {\\n        reset();\\n        dispatch('clear');\\n      }}\\"\\n    >\\n      <Close20 title=\\"Close\\" />\\n    </button>\\n  </div>\\n\\n  {#if active && results.length > 0}\\n    <ul aria-labelledby=\\"search-label\\" role=\\"menu\\" id=\\"search-menu\\">\\n      {#each results as result, i}\\n        <li>\\n          <a\\n            tabindex=\\"-1\\"\\n            id=\\"search-menuitem-{i}\\"\\n            role=\\"menuitem\\"\\n            href=\\"{result.href}\\"\\n            class:selected=\\"{selectedId === \`search-menuitem-\${i}\`}\\"\\n            on:click|preventDefault=\\"{async () => {\\n              selectedResultIndex = i;\\n              await tick();\\n              selectResult();\\n            }}\\"\\n          >\\n            <slot result=\\"{result}\\" index=\\"{i}\\">\\n              {result.text}\\n              {#if result.description}<span>\u2013 {result.description}</span>{/if}\\n            </slot>\\n          </a>\\n        </li>\\n      {/each}\\n    </ul>\\n  {/if}\\n</div>\\n\\n<style>\\n  label {\\n    position: absolute;\\n    width: 1px;\\n    height: 1px;\\n    margin: -1px;\\n    padding: 0;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    border: 0;\\n    visibility: inherit;\\n    clip: rect(0, 0, 0, 0);\\n  }\\n\\n  [role=\\"search\\"] {\\n    position: relative;\\n    display: flex;\\n    max-width: 28rem;\\n    width: 100%;\\n    margin-left: 0.5rem;\\n    height: 3rem;\\n    background-color: #393939;\\n    color: #fff;\\n    transition: max-width 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\\n      background 0.11s cubic-bezier(0.2, 0, 0.38, 0.9);\\n  }\\n\\n  [role=\\"search\\"]:not(.active) {\\n    max-width: 3rem;\\n    background-color: #161616;\\n  }\\n\\n  [role=\\"search\\"].active {\\n    outline: 2px solid #fff;\\n    outline-offset: -2px;\\n  }\\n\\n  [role=\\"combobox\\"] {\\n    display: flex;\\n    flex-grow: 1;\\n    border-bottom: 1px solid #393939;\\n  }\\n\\n  input {\\n    width: 100%;\\n    height: 3rem;\\n    padding: 0;\\n    font-size: 1rem;\\n    font-weight: 400;\\n    line-height: 1.375rem;\\n    letter-spacing: 0;\\n    color: #fff;\\n    caret-color: #fff;\\n    background-color: initial;\\n    border: none;\\n    outline: none;\\n    transition: opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9);\\n  }\\n\\n  input:not(.active) {\\n    opacity: 0;\\n    pointer-events: none;\\n  }\\n\\n  button {\\n    width: 3rem;\\n    height: 100%;\\n    padding: 0;\\n    flex-shrink: 0;\\n    opacity: 1;\\n    transition: background-color 0.11s cubic-bezier(0.2, 0, 0.38, 0.9),\\n      opacity 0.11s cubic-bezier(0.2, 0, 0.38, 0.9);\\n  }\\n\\n  .disabled {\\n    border: none;\\n    pointer-events: none;\\n  }\\n\\n  [aria-label=\\"Clear search\\"]:hover {\\n    background-color: #4c4c4c;\\n  }\\n\\n  .hidden {\\n    opacity: 0;\\n    display: none;\\n  }\\n\\n  ul {\\n    position: absolute;\\n    z-index: 10000;\\n    padding: 1rem 0;\\n    left: 0;\\n    right: 0;\\n    top: 3rem;\\n    background-color: #161616;\\n    border: 1px solid #393939;\\n    border-top: none;\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.5);\\n  }\\n\\n  [role=\\"menuitem\\"] {\\n    padding: 6px 1rem;\\n    cursor: pointer;\\n    font-size: 0.875rem;\\n    font-weight: 600;\\n    line-height: 1.29;\\n    letter-spacing: 0.16px;\\n    transition: all 70ms cubic-bezier(0.2, 0, 0.38, 0.9);\\n    display: block;\\n    text-decoration: none;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    color: #c6c6c6;\\n  }\\n\\n  .selected,\\n  [role=\\"menuitem\\"]:hover {\\n    background-color: #353535;\\n    color: #f4f4f4;\\n  }\\n\\n  [role=\\"menuitem\\"] span {\\n    font-size: 0.75rem;\\n    font-weight: 400;\\n    line-height: 1.34;\\n    letter-spacing: 0.32px;\\n    text-transform: lowercase;\\n    color: #c6c6c6;\\n  }\\n</style>\\n"],"names":[],"mappings":"AA+JE,KAAK,4BAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,OAAO,CACnB,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AACxB,CAAC,AAED,CAAC,IAAI,CAAC,QAAQ,CAAC,4BAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1D,UAAU,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,AACpD,CAAC,AAED,CAAC,IAAI,CAAC,QAAQ,6BAAC,KAAK,OAAO,CAAC,AAAC,CAAC,AAC5B,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,4BAAC,CAAC,AACtB,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACvB,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,CAAC,IAAI,CAAC,UAAU,CAAC,4BAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,CAAC,CACZ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAClC,CAAC,AAED,KAAK,4BAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,QAAQ,CACrB,cAAc,CAAE,CAAC,CACjB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,CACjB,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,AAC3D,CAAC,AAED,iCAAK,KAAK,OAAO,CAAC,AAAC,CAAC,AAClB,OAAO,CAAE,CAAC,CACV,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,MAAM,4BAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,WAAW,CAAE,CAAC,CACd,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;MACjE,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,AACjD,CAAC,AAED,SAAS,4BAAC,CAAC,AACT,MAAM,CAAE,IAAI,CACZ,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,CAAC,UAAU,CAAC,cAAc,6BAAC,MAAM,AAAC,CAAC,AACjC,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,OAAO,4BAAC,CAAC,AACP,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,AACf,CAAC,AAED,EAAE,4BAAC,CAAC,AACF,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,KAAK,CACd,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,GAAG,CAAE,IAAI,CACT,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAC5C,CAAC,AAED,CAAC,IAAI,CAAC,UAAU,CAAC,4BAAC,CAAC,AACjB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,QAAQ,CACnB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CACpD,OAAO,CAAE,KAAK,CACd,eAAe,CAAE,IAAI,CACrB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,qCAAS,CACT,CAAC,IAAI,CAAC,UAAU,6BAAC,MAAM,AAAC,CAAC,AACvB,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,CAAC,IAAI,CAAC,UAAU,eAAC,CAAC,IAAI,cAAC,CAAC,AACtB,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,MAAM,CACtB,cAAc,CAAE,SAAS,CACzB,KAAK,CAAE,OAAO,AAChB,CAAC"}`
};
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let selectedResult;
  let selectedId;
  let $$restProps = compute_rest_props($$props, ["value", "active", "ref", "results", "selectedResultIndex"]);
  let {value = ""} = $$props;
  let {active = false} = $$props;
  let {ref = null} = $$props;
  let {results = []} = $$props;
  let {selectedResultIndex = 0} = $$props;
  const dispatch = createEventDispatcher();
  let refSearch = null;
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.active === void 0 && $$bindings.active && active !== void 0)
    $$bindings.active(active);
  if ($$props.ref === void 0 && $$bindings.ref && ref !== void 0)
    $$bindings.ref(ref);
  if ($$props.results === void 0 && $$bindings.results && results !== void 0)
    $$bindings.results(results);
  if ($$props.selectedResultIndex === void 0 && $$bindings.selectedResultIndex && selectedResultIndex !== void 0)
    $$bindings.selectedResultIndex(selectedResultIndex);
  $$result.css.add(css$7);
  {
    if (active && ref)
      ref.focus();
  }
  {
    dispatch(active ? "active" : "inactive");
  }
  selectedResult = results[selectedResultIndex];
  selectedId = selectedResult ? `search-menuitem-${selectedResultIndex}` : void 0;
  return `

<div role="${"search"}" class="${["svelte-qozwl4", active ? "active" : ""].join(" ").trim()}"${add_attribute("this", refSearch, 1)}><label for="${"search-input"}" id="${"search-label"}" class="${"svelte-qozwl4"}">Search</label>
  <div role="${"combobox"}"${add_attribute("aria-expanded", active, 0)} class="${"svelte-qozwl4"}"><button type="${"button"}" aria-label="${"Search"}"${add_attribute("tabindex", active ? "-1" : "0", 0)} class="${[
    "svelte-qozwl4",
    "bx--header__action " + (active ? "disabled" : "")
  ].join(" ").trim()}">${validate_component(Search20, "Search20").$$render($$result, {title: "Search"}, {}, {})}</button>
    <input${spread([
    {type: "text"},
    {autocomplete: "off"},
    {placeholder: "Search..."},
    {tabindex: escape(active ? "0" : "-1")},
    $$restProps,
    {id: "search-input"},
    {
      "aria-activedescendant": escape(selectedId)
    }
  ], (active ? "active" : "") + " svelte-qozwl4")}${add_attribute("this", ref, 1)}${add_attribute("value", value, 1)}>
    <button type="${"button"}" aria-label="${"Clear search"}"${add_attribute("tabindex", active ? "0" : "-1", 0)} class="${[
    "svelte-qozwl4",
    "bx--header__action " + (!active ? "hidden" : "")
  ].join(" ").trim()}">${validate_component(Close20, "Close20").$$render($$result, {title: "Close"}, {}, {})}</button></div>

  ${active && results.length > 0 ? `<ul aria-labelledby="${"search-label"}" role="${"menu"}" id="${"search-menu"}" class="${"svelte-qozwl4"}">${each(results, (result, i) => `<li><a tabindex="${"-1"}" id="${"search-menuitem-" + escape(i)}" role="${"menuitem"}"${add_attribute("href", result.href, 0)} class="${["svelte-qozwl4", selectedId === `search-menuitem-${i}` ? "selected" : ""].join(" ").trim()}">${slots.default ? slots.default({result, index: i}) : `
              ${escape(result.text)}
              ${result.description ? `<span class="${"svelte-qozwl4"}">\u2013 ${escape(result.description)}</span>` : ``}
            `}</a>
        </li>`)}</ul>` : ``}
</div>`;
});
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$restProps = compute_rest_props($$props, []);
  return `<li${spread([{role: "separator"}, $$restProps], "bx--side-nav__divider")}></li>`;
});
var __layout_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\n:root{\n  --header-2-height:clamp(2rem,4vh,60px);\n  --header-1-height:clamp(1rem,5vh,40px)\n}\n\n.icon{\n  border:2px solid rgb(89, 89, 89);\n  aspect-ratio:1/1;\n  height:auto;\n  width:var(--header-2-height)!important\n}\n\nheader.svelte-1mbzvnp{\n  display:block;\n  position:fixed;\n  width:100vw;\n  margin:0!important\n}\n\n.bx--grid{\n  left:0;\n  right:0;\n  margin-left:0;\n  margin-right:0px;\n  padding-left:0px;\n  padding-right:0px;\n  width:100vw\n}\n\n#head1{\n  width:100vw;\n  height:var(--header-1-height)!important;\n  background-color:whitesmoke;\n  margin:0\n}\n\n#head2{\n  width:100vw;\n  height:var(--header-2-height)!important;\n  background-color:#323132\n        ;\n  margin:0\n}\n\n.logo.svelte-1mbzvnp{\n  height:calc(var(--header-1-height)*.8)!important;\n  width:auto\n}\n\n.bx--col{\n  padding:0!important;\n  display:flex;\n  flex-grow:5!important\n}\n\n/* purgecss end ignore */";
const css$6 = {
  code: ":root{--header-2-height:clamp(2rem,4vh,60px);--header-1-height:clamp(1rem,5vh,40px)}.icon{border:2px solid rgb(89, 89, 89);aspect-ratio:1/1;height:auto;width:var(--header-2-height)!important}header.svelte-1mbzvnp{display:block;position:fixed;width:100vw;margin:0!important}.bx--grid{left:0;right:0;margin-left:0;margin-right:0px;padding-left:0px;padding-right:0px;width:100vw}#head1{width:100vw;height:var(--header-1-height)!important;background-color:whitesmoke;margin:0}#head2{width:100vw;height:var(--header-2-height)!important;background-color:#323132\n        ;margin:0}.logo.svelte-1mbzvnp{height:calc(var(--header-1-height)*.8)!important;width:auto}.bx--col{padding:0!important;display:flex;flex-grow:5!important}",
  map: `{"version":3,"file":"__layout.svelte","sources":["__layout.svelte"],"sourcesContent":["<script>\\n\\timport '../style.css';\\n    import \\"carbon-components-svelte/css/g10.css\\";\\n    import { Grid, Row, Column } from \\"carbon-components-svelte\\";\\n    import { Search, Button, Toggle} from \\"carbon-components-svelte\\";\\n\\n    let add_mode = true;\\n\\n</script>\\n\\n\\n\\n\\n<style>\\n    :root {\\n        --header-2-height: clamp(2rem,4vh,60px);\\n        --header-1-height: clamp(1rem,5vh,40px);\\n        /* --second-color: #ff7; */\\n    }\\n    #toggle{\\n        height: calc(var(--header-2-height)/2)!important;\\n    }\\n\\n    :global(.icon){\\n        border: 2px solid rgb(89, 89, 89);\\n        /* margin-left:-1.5px; */\\n        aspect-ratio: 1/1;\\n        height:auto;\\n        width: var(--header-2-height)!important;\\n    }\\n    header{\\n        /* position:absolute; */\\n        display:block;\\n        position:fixed;\\n        width:100vw;\\n        margin:0!important;\\n    }\\n    :global(.bx--grid){\\n        left:0;\\n        right:0;\\n        margin-left:0;\\n        margin-right:0px;\\n        padding-left:0px;\\n        padding-right:0px;\\n        width:100vw;\\n    }\\n    :global(#head1){\\n        width:100vw;\\n        height:var(--header-1-height)!important;\\n        background-color: whitesmoke;\\n        margin:0;\\n        \\n    }\\n    :global(#head2){\\n        width:100vw;\\n        height:var(--header-2-height)!important;\\n        background-color: #323132\\n        ;\\n        margin:0;\\n    }\\n    .logo{\\n\\n        height:calc(var(--header-1-height)*.8)!important;\\n        width:auto;\\n    }\\n\\n    :global(.bx--col){\\n        /* margin:auto; */\\n        padding:0!important;\\n        display:flex;\\n\\n        flex-grow:5!important;\\n        /* justify-content: space-between; */\\n    }\\n</style>\\n\\n\\n<main class=\\"w-screen min-h-screen flex flex-col\\">\\n    <header>\\n    <Grid>\\n        <Row id='head1'>\\n    \\n            <Column><img style='margin-left:10px;margin-top:4px' class=\\"logo\\" src=\\"https://cdn.ons.gov.uk/assets/images/ons-logo/v2/ons-logo.svg\\" alt=\\"Office for National Statistics logo - Homepage\\">\\n            </Column>\\n    \\n    \\n            \\n        </Row>\\n        <Row id='head2'>\\n\\n        <Column>\\n       <!-- &nspar; -->\\n            <Button style='margin-left:0px'\\n            class=\\"bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon\\">\\n            <span class=\\"bx--assistive-text\\">Draw Polygon</span>\\n            <svg focusable=\\"false\\" preserveAspectRatio=\\"xMidYMid meet\\" style=\\"will-change: transform; width:95%;height:95%\\" xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"bx--btn__icon\\" viewBox=\\"0 0 24 24\\" aria-hidden=\\"true\\"><path d=\\"m17 15.7v-2.7h2v4l-9 4-7-7 4-9h4v2h-2.7l-2.9 6.6 5 5zm5-10.7v2h-3v3h-2v-3h-3v-2h3v-3h2v3z\\"></path></svg>\\n          </Button>            \\n \\n          <Button\\n          class=\\"bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon\\">\\n          <span class=\\"bx--assistive-text\\">Select a Radius</span>\\n          <svg focusable=\\"false\\" preserveAspectRatio=\\"xMidYMid meet\\" style=\\"will-change: transform;width:95%;height:95%\\" xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"bx--btn__icon\\" viewBox=\\"0 0 24 24\\" aria-hidden=\\"true\\"><path d=\\"m12 2a10 10 0 0 0 -10 10 10 10 0 0 0 10 10 10 10 0 0 0 10-10 10 10 0 0 0 -10-10m0 18a8 8 0 0 1 -8-8 8 8 0 0 1 8-8 8 8 0 0 1 8 8 8 8 0 0 1 -8 8m4-5v-2h-2.28c-.36.62-1.01 1-1.72 1a2 2 0 0 1 -2-2 2 2 0 0 1 2-2c.71 0 1.36.38 1.72 1h2.28v-2l3 3z\\"></path></svg>\\n        </Button>     \\n        \\n        \\n        <Button\\n        class=\\"bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon\\">\\n        <span class=\\"bx--assistive-text\\">Click Select</span>\\n        <svg focusable=\\"false\\" preserveAspectRatio=\\"xMidYMid meet\\" style=\\"will-change: transform;width:95%;height:95%\\" xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"bx--btn__icon\\" viewBox=\\"2 4 19 14\\" aria-hidden=\\"true\\"><path d=\\"m18.2848192 17.5777124 2.5687342 2.5687342c.1952621.1952622.1952621.5118446 0 .7071068-.1952622.1952621-.5118446.1952621-.7071068 0l-2.5687342-2.5687342-1.6616873 2.4925309c-.2260679.3391019-.7410894.2798123-.8841897-.1017884l-3-8c-.1507287-.4019432.2417831-.794455.6437263-.6437263l8 3c.3816007.1431003.4408903.6581218.1017884.8841897zm-1.0535788-.4994645 2.1792312-1.4528208-6.0560712-2.2710267 2.2710267 6.0560712 1.4528208-2.1792312c.0191996-.0300662.0419325-.0585276.0681987-.0847938s.0547276-.0489991.0847938-.0681987zm-11.7312404-14.0782479c.27614237 0 .5.22385763.5.5s-.22385763.5-.5.5c-.82842712 0-1.5.67157288-1.5 1.5 0 .27614237-.22385763.5-.5.5s-.5-.22385763-.5-.5c0-1.38071187 1.11928813-2.5 2.5-2.5zm3 1c-.27614237 0-.5-.22385763-.5-.5s.22385763-.5.5-.5h2c.2761424 0 .5.22385763.5.5s-.2238576.5-.5.5zm5 0c-.2761424 0-.5-.22385763-.5-.5s.2238576-.5.5-.5h2c.2761424 0 .5.22385763.5.5s-.2238576.5-.5.5zm-5 17c-.27614237 0-.5-.2238576-.5-.5s.22385763-.5.5-.5h2c.2761424 0 .5.2238576.5.5s-.2238576.5-.5.5zm-5.5-12.5c0-.27614237.22385763-.5.5-.5s.5.22385763.5.5v2c0 .2761424-.22385763.5-.5.5s-.5-.2238576-.5-.5zm0 5c0-.2761424.22385763-.5.5-.5s.5.2238576.5.5v2c0 .2761424-.22385763.5-.5.5s-.5-.2238576-.5-.5zm0 5c0-.2761424.22385763-.5.5-.5s.5.2238576.5.5c0 .8284271.67157288 1.5 1.5 1.5.27614237 0 .5.2238576.5.5s-.22385763.5-.5.5c-1.38071187 0-2.5-1.1192881-2.5-2.5zm18-8c0 .2761424-.2238576.5-.5.5s-.5-.2238576-.5-.5v-2c0-.27614237.2238576-.5.5-.5s.5.22385763.5.5zm0-5c0 .27614237-.2238576.5-.5.5s-.5-.22385763-.5-.5c0-.82842712-.6715729-1.5-1.5-1.5-.2761424 0-.5-.22385763-.5-.5s.2238576-.5.5-.5c1.3807119 0 2.5 1.11928813 2.5 2.5z\\"></path></svg>\\n      </Button>     \\n    </Column>\\n      &nspar;\\n\\n<Column>\\n    <Button style='margin-left:0px' on:click={()=>{add_mode=!add_mode}}\\n    class=\\"bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon\\">\\n    {#if add_mode}\\n    <span class=\\"bx--assistive-text\\">Additive Selection</span>\\n    <svg focusable=\\"false\\" preserveAspectRatio=\\"xMidYMid meet\\" style=\\"will-change: transform; width:95%;height:95%\\" xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"bx--btn__icon\\" viewBox=\\"0 0 24 24\\" aria-hidden=\\"true\\"><path d=\\"m3 1c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h4v4c0 1.11.89 2 2 2h11c1.11 0 2-.89 2-2v-11c0-1.11-.89-2-2-2-1.33 0-4 0-4 0s0-2.67 0-4c0-1.11-.89-2-2-2zm0 2h11v4h-5c-1.11 0-2 .89-2 2v5s-2.67 0-4 0zm6 6h5v5h-5zm7 0h4v11h-11c0-1.33 0-4 0-4h5c1.11 0 2-.89 2-2z\\"/></svg>\\n    {:else}\\n    <span class=\\"bx--assistive-text\\">Subtractive Selection</span>\\n    <svg focusable=\\"false\\" preserveAspectRatio=\\"xMidYMid meet\\" style=\\"will-change: transform; width:95%;height:95%\\" xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"bx--btn__icon\\" viewBox=\\"-3 -3 18 21\\" aria-hidden=\\"true\\"><path clip-rule=\\"evenodd\\" d=\\"m4 4h-2.5c-.828427 0-1.5.67157-1.5 1.5v8c0 .8284.671573 1.5 1.5 1.5h8c.8284 0 1.5-.6716 1.5-1.5v-2.5h2.5c.8284 0 1.5-.6716 1.5-1.5v-8c0-.828427-.6716-1.5-1.5-1.5h-8c-.82843 0-1.5.671573-1.5 1.5zm1-2.5c0-.27614.22386-.5.5-.5h8c.2761 0 .5.22386.5.5v8c0 .27614-.2239.5-.5.5h-8c-.27614 0-.5-.22386-.5-.5z\\" fill=\\"#000\\" fill-rule=\\"evenodd\\"/></svg>\\n{/if}\\n\\n  </Button>  \\n\\n    <Button style='margin-left:0px'\\n    class=\\"bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon\\">\\n    <span class=\\"bx--assistive-text\\">Undo</span>\\n    <svg focusable=\\"false\\" preserveAspectRatio=\\"xMidYMid meet\\" style=\\"will-change: transform; width:95%;height:95%\\" xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"bx--btn__icon\\" viewBox=\\"5 5 35 35\\" aria-hidden=\\"true\\"><path d=\\"m25 38c-5.1 0-9.7-3-11.8-7.6l1.8-.8c1.8 3.9 5.7 6.4 10 6.4 6.1 0 11-4.9 11-11s-4.9-11-11-11c-4.6 0-8.5 2.8-10.1 7.3l-1.9-.7c1.9-5.2 6.6-8.6 12-8.6 7.2 0 13 5.8 13 13s-5.8 13-13 13z\\"/><path d=\\"m20 22h-8v-8h2v6h6z\\"></path></svg>\\n  </Button>  \\n\\n</Column>\\n\\n<Column style='flex-grow:0!important;'>\\n\\n\\n      <Button style='margin-left:0px'\\n      class=\\"bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon\\">\\n      <span class=\\"bx--assistive-text\\">Save and Build</span>\\n      <svg focusable=\\"false\\" preserveAspectRatio=\\"xMidYMid meet\\" style=\\"will-change: transform; width:95%;height:95%\\" xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"bx--btn__icon\\" viewBox=\\"0 0 16 16\\" aria-hidden=\\"true\\"><path fill-rule=\\"evenodd\\" clip-rule=\\"evenodd\\" d=\\"M11.04 1.33L12.71 3l.29.71v.33h-.5l-.5.5v-.83l-1.67-1.67H10v4H4v-4H2v10h3l-.5 1H2l-1-1v-10l1-1h8.33l.71.29zM7 5h2V2H7v3zm6.5 0L15 6.5l-.02.69-5.5 5.5-.13.12-.37.37-.1.09-3 1.5-.67-.67 1.5-3 .09-.1.37-.37.12-.13 5.5-5.5h.71zm-6.22 7.24l-.52 1 1.04-.48-.52-.52zm.69-1.03l.79.79 5.15-5.15-.79-.79-5.15 5.15z\\"></path></svg>\\n    </Button>     \\n    \\n    <Button style='margin-left:0px'\\n      class=\\"bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon\\">\\n      <span class=\\"bx--assistive-text\\">Explore Existing Selections</span>\\n      <svg focusable=\\"false\\" preserveAspectRatio=\\"xMidYMid meet\\" style=\\"will-change: transform; width:95%;height:95%\\" xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"bx--btn__icon\\" viewBox=\\"0 0 31 31\\" aria-hidden=\\"true\\"><path d=\\"m9.002 31.36c-2.404 0-4.36-1.956-4.36-4.36s1.956-4.36 4.36-4.36c.731 0 1.42.182 2.026.5l2.125-3.338.607.387-2.125 3.339c1.048.797 1.727 2.057 1.727 3.473 0 2.403-1.955 4.359-4.36 4.359zm0-8c-2.007 0-3.64 1.633-3.64 3.64s1.633 3.64 3.64 3.64 3.64-1.633 3.64-3.64-1.632-3.64-3.64-3.64zm7 7.995c-.861 0-1.722-.071-2.557-.212l.119-.711c.796.135 1.617.202 2.438.202 4.648 0 8.917-2.134 11.712-5.854l.576.432c-2.932 3.904-7.411 6.143-12.288 6.143zm14.998-6.495c-.062 0-.126-.017-.182-.05l-5.995-3.505c-.11-.064-.179-.183-.179-.311s.068-.246.179-.311l5.995-3.495c.113-.065.249-.065.361-.002.111.064.181.184.181.312v7c0 .129-.069.248-.182.312-.054.034-.116.05-.178.05zm-5.281-3.865 4.921 2.877v-5.745zm-22.374 3.704c-.554-.803-1.034-1.665-1.425-2.56l.66-.289c.373.854.829 1.675 1.357 2.44zm-.219-4.222c-.092 0-.184-.035-.254-.105l-2.126-2.116c-.068-.068-.106-.16-.106-.256 0-.095.038-.187.105-.255l2.126-2.125c.141-.141.368-.141.509 0l2.122 2.121c.068.067.105.159.105.255s-.037.187-.105.254l-2.122 2.121c-.07.07-.162.106-.254.106zm-1.616-2.478 1.616 1.608 1.613-1.612-1.612-1.612zm7.251 2.177c-.732-1.266-1.119-2.711-1.119-4.181 0-3.819 2.58-7.149 6.274-8.098l.179.697c-3.375.867-5.733 3.91-5.733 7.4 0 1.343.354 2.664 1.022 3.819zm7.241-.821c-1.853 0-3.36-1.508-3.36-3.36 0-1.732 1.317-3.162 3.002-3.341v-5.659h.72v5.659c1.683.182 2.998 1.61 2.998 3.341 0 1.853-1.508 3.36-3.36 3.36zm0-6c-1.456 0-2.64 1.185-2.64 2.64 0 1.456 1.185 2.64 2.64 2.64s2.639-1.184 2.639-2.64c.001-1.455-1.183-2.64-2.639-2.64zm14.639 1.664c-.432-6.56-5.246-12.057-11.707-13.37l.143-.706c6.779 1.377 11.83 7.146 12.283 14.029zm-6.636-.664c-.062 0-.124-.016-.18-.048l-2.599-1.5c-.111-.064-.181-.184-.181-.312v-3c0-.128.069-.248.181-.312l2.599-1.5c.111-.063.248-.064.359 0l2.598 1.5c.111.064.181.183.181.312v3c0 .128-.069.248-.181.312l-2.598 1.5c-.055.032-.117.048-.179.048zm-2.238-2.068 2.238 1.292 2.237-1.292v-2.584l-2.237-1.292-2.238 1.292zm-5.769-7.927c-1.024 0-1.857-.836-1.857-1.865 0-1.023.833-1.855 1.857-1.855 1.027 0 1.863.832 1.863 1.855-.001 1.028-.837 1.865-1.863 1.865zm0-3c-.627 0-1.138.509-1.138 1.135 0 .631.51 1.145 1.138 1.145.63 0 1.142-.514 1.142-1.145 0-.626-.513-1.135-1.142-1.135zm-14.963 13.988c-.008 0-.017 0-.025-.001-.198-.015-.347-.177-.333-.375 0 0 .001-.021.001-.022.016-.198.185-.353.387-.331.198.015.346.188.331.387-.015.188-.174.342-.361.342zm.267-2.351h.009zm.534-1.947h.009zm.791-1.508c-.054 0-.108-.012-.159-.039-.175-.09-.249-.295-.16-.471.001-.003.012-.024.014-.028.094-.175.311-.24.488-.146.175.094.24.312.146.488-.066.123-.196.196-.329.196zm2.299-3.311c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.005-.004.023-.023.028-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.072.072-.17.109-.266.109zm-1.259 1.572c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.071.072-.169.109-.265.109zm-1.836 3.598c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.072.071-.169.109-.265.109zm-.535 1.947c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.071.072-.169.109-.265.109zm15.114 11.002c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.072.072-.169.109-.265.109zm2.007-.367c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.072.072-.169.109-.265.109zm3.38-2.1c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.072.072-.169.109-.265.109zm1.945-3.497c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.071.072-.168.109-.265.109zm-17.367-13.531c-.099 0-.197-.042-.269-.123-.133-.147-.114-.38.034-.513.009-.008.034-.029.044-.036.161-.117.386-.081.503.079.117.161.082.386-.079.503-.067.061-.15.09-.233.09zm3.425-2.163c-.14 0-.275-.078-.334-.211-.077-.176-.012-.378.159-.463.01-.005.039-.019.05-.022.186-.071.394.021.465.207s-.021.394-.207.465c-.042.016-.088.024-.133.024zm-1.772.951c-.14 0-.275-.078-.334-.211-.078-.176-.013-.378.159-.463.01-.005.039-.019.05-.022.186-.071.394.021.465.207s-.021.394-.207.465c-.043.016-.088.024-.133.024zm3.662-1.66c-.155 0-.303-.097-.351-.251-.059-.19.039-.389.229-.447l.019-.006c.187-.058.391.048.45.238.058.19-.048.392-.238.45-.036.011-.072.016-.109.016zm2.754 22.221c-.019 0-.037-.002-.056-.005-.015-.002-.049-.009-.064-.014-.191-.054-.302-.254-.247-.444.054-.191.252-.304.445-.247.196.029.319.211.289.407-.028.178-.191.303-.367.303zm5.799-1.063c-.122 0-.241-.062-.309-.175-.103-.171-.047-.392.123-.494.166-.102.393-.055.498.11.104.166.066.379-.097.487-.004.003-.025.017-.03.02-.058.035-.121.052-.185.052zm2.752-2.898c-.069 0-.139-.02-.199-.061-.166-.11-.211-.334-.101-.499.089-.18.303-.237.477-.151.178.09.244.316.155.494-.007.014-.024.044-.032.056-.069.105-.184.161-.3.161zm1.007-3.868c-.199 0-.36-.161-.36-.36s.161-.37.36-.37.36.151.36.35v.02c0 .199-.161.36-.36.36z\\"/><path d=\\"m0 0h32v32h-32z\\" fill=\\"none\\"></path></svg>\\n    </Button>     \\n      \\n</Column>\\n\\n  <!-- <br>\\n<Search\\nid=\\"search-1\\"\\nplaceHolderText=\\"Search\\"\\nstyle='width:10vw'\\n/> -->\\n\\n\\n        </Row>\\n       \\n        <Row style='float:inline-right'>\\n            <!-- &nspar;&nspar;&nspar; -->\\n            <!-- <Column></Column> -->\\n            <Column>Draw Tools</Column>\\n            <Column></Column>\\n            <Column >Edit Selection</Column>\\n            <Column></Column>\\n            <Column > Build / Load </Column>\\n        </Row>\\n        </Grid>\\n    </header>\\n    \\n    \\n        <slot />\\n    </main>\\n    \\n    "],"names":[],"mappings":"AAcI,KAAK,AAAC,CAAC,AACH,iBAAiB,CAAE,oBAAoB,CACvC,iBAAiB,CAAE,oBAAoB,AAE3C,CAAC,AAKO,KAAK,AAAC,CAAC,AACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAEjC,YAAY,CAAE,CAAC,CAAC,CAAC,CACjB,OAAO,IAAI,CACX,KAAK,CAAE,IAAI,iBAAiB,CAAC,UAAU,AAC3C,CAAC,AACD,qBAAM,CAAC,AAEH,QAAQ,KAAK,CACb,SAAS,KAAK,CACd,MAAM,KAAK,CACX,OAAO,CAAC,UAAU,AACtB,CAAC,AACO,SAAS,AAAC,CAAC,AACf,KAAK,CAAC,CACN,MAAM,CAAC,CACP,YAAY,CAAC,CACb,aAAa,GAAG,CAChB,aAAa,GAAG,CAChB,cAAc,GAAG,CACjB,MAAM,KAAK,AACf,CAAC,AACO,MAAM,AAAC,CAAC,AACZ,MAAM,KAAK,CACX,OAAO,IAAI,iBAAiB,CAAC,UAAU,CACvC,gBAAgB,CAAE,UAAU,CAC5B,OAAO,CAAC,AAEZ,CAAC,AACO,MAAM,AAAC,CAAC,AACZ,MAAM,KAAK,CACX,OAAO,IAAI,iBAAiB,CAAC,UAAU,CACvC,gBAAgB,CAAE,OAAO;QACzB,CACA,OAAO,CAAC,AACZ,CAAC,AACD,oBAAK,CAAC,AAEF,OAAO,KAAK,IAAI,iBAAiB,CAAC,CAAC,EAAE,CAAC,UAAU,CAChD,MAAM,IAAI,AACd,CAAC,AAEO,QAAQ,AAAC,CAAC,AAEd,QAAQ,CAAC,UAAU,CACnB,QAAQ,IAAI,CAEZ,UAAU,CAAC,UAAU,AAEzB,CAAC"}`
};
const _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$6);
  return `<main class="${"w-screen min-h-screen flex flex-col svelte-1mbzvnp"}"><header class="${"svelte-1mbzvnp"}">${validate_component(Grid, "Grid").$$render($$result, {}, {}, {
    default: () => `${validate_component(Row, "Row").$$render($$result, {id: "head1"}, {}, {
      default: () => `${validate_component(Column, "Column").$$render($$result, {}, {}, {
        default: () => `<img style="${"margin-left:10px;margin-top:4px"}" class="${"logo svelte-1mbzvnp"}" src="${"https://cdn.ons.gov.uk/assets/images/ons-logo/v2/ons-logo.svg"}" alt="${"Office for National Statistics logo - Homepage"}">`
      })}`
    })}
        ${validate_component(Row, "Row").$$render($$result, {id: "head2"}, {}, {
      default: () => `${validate_component(Column, "Column").$$render($$result, {}, {}, {
        default: () => `
            ${validate_component(Button, "Button").$$render($$result, {
          style: "margin-left:0px",
          class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
        }, {}, {
          default: () => `<span class="${"bx--assistive-text svelte-1mbzvnp"}">Draw Polygon</span>
            <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" style="${"will-change: transform; width:95%;height:95%"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"bx--btn__icon svelte-1mbzvnp"}" viewBox="${"0 0 24 24"}" aria-hidden="${"true"}"><path d="${"m17 15.7v-2.7h2v4l-9 4-7-7 4-9h4v2h-2.7l-2.9 6.6 5 5zm5-10.7v2h-3v3h-2v-3h-3v-2h3v-3h2v3z"}" class="${"svelte-1mbzvnp"}"></path></svg>`
        })}            
 
          ${validate_component(Button, "Button").$$render($$result, {
          class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
        }, {}, {
          default: () => `<span class="${"bx--assistive-text svelte-1mbzvnp"}">Select a Radius</span>
          <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" style="${"will-change: transform;width:95%;height:95%"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"bx--btn__icon svelte-1mbzvnp"}" viewBox="${"0 0 24 24"}" aria-hidden="${"true"}"><path d="${"m12 2a10 10 0 0 0 -10 10 10 10 0 0 0 10 10 10 10 0 0 0 10-10 10 10 0 0 0 -10-10m0 18a8 8 0 0 1 -8-8 8 8 0 0 1 8-8 8 8 0 0 1 8 8 8 8 0 0 1 -8 8m4-5v-2h-2.28c-.36.62-1.01 1-1.72 1a2 2 0 0 1 -2-2 2 2 0 0 1 2-2c.71 0 1.36.38 1.72 1h2.28v-2l3 3z"}" class="${"svelte-1mbzvnp"}"></path></svg>`
        })}     
        
        
        ${validate_component(Button, "Button").$$render($$result, {
          class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
        }, {}, {
          default: () => `<span class="${"bx--assistive-text svelte-1mbzvnp"}">Click Select</span>
        <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" style="${"will-change: transform;width:95%;height:95%"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"bx--btn__icon svelte-1mbzvnp"}" viewBox="${"2 4 19 14"}" aria-hidden="${"true"}"><path d="${"m18.2848192 17.5777124 2.5687342 2.5687342c.1952621.1952622.1952621.5118446 0 .7071068-.1952622.1952621-.5118446.1952621-.7071068 0l-2.5687342-2.5687342-1.6616873 2.4925309c-.2260679.3391019-.7410894.2798123-.8841897-.1017884l-3-8c-.1507287-.4019432.2417831-.794455.6437263-.6437263l8 3c.3816007.1431003.4408903.6581218.1017884.8841897zm-1.0535788-.4994645 2.1792312-1.4528208-6.0560712-2.2710267 2.2710267 6.0560712 1.4528208-2.1792312c.0191996-.0300662.0419325-.0585276.0681987-.0847938s.0547276-.0489991.0847938-.0681987zm-11.7312404-14.0782479c.27614237 0 .5.22385763.5.5s-.22385763.5-.5.5c-.82842712 0-1.5.67157288-1.5 1.5 0 .27614237-.22385763.5-.5.5s-.5-.22385763-.5-.5c0-1.38071187 1.11928813-2.5 2.5-2.5zm3 1c-.27614237 0-.5-.22385763-.5-.5s.22385763-.5.5-.5h2c.2761424 0 .5.22385763.5.5s-.2238576.5-.5.5zm5 0c-.2761424 0-.5-.22385763-.5-.5s.2238576-.5.5-.5h2c.2761424 0 .5.22385763.5.5s-.2238576.5-.5.5zm-5 17c-.27614237 0-.5-.2238576-.5-.5s.22385763-.5.5-.5h2c.2761424 0 .5.2238576.5.5s-.2238576.5-.5.5zm-5.5-12.5c0-.27614237.22385763-.5.5-.5s.5.22385763.5.5v2c0 .2761424-.22385763.5-.5.5s-.5-.2238576-.5-.5zm0 5c0-.2761424.22385763-.5.5-.5s.5.2238576.5.5v2c0 .2761424-.22385763.5-.5.5s-.5-.2238576-.5-.5zm0 5c0-.2761424.22385763-.5.5-.5s.5.2238576.5.5c0 .8284271.67157288 1.5 1.5 1.5.27614237 0 .5.2238576.5.5s-.22385763.5-.5.5c-1.38071187 0-2.5-1.1192881-2.5-2.5zm18-8c0 .2761424-.2238576.5-.5.5s-.5-.2238576-.5-.5v-2c0-.27614237.2238576-.5.5-.5s.5.22385763.5.5zm0-5c0 .27614237-.2238576.5-.5.5s-.5-.22385763-.5-.5c0-.82842712-.6715729-1.5-1.5-1.5-.2761424 0-.5-.22385763-.5-.5s.2238576-.5.5-.5c1.3807119 0 2.5 1.11928813 2.5 2.5z"}" class="${"svelte-1mbzvnp"}"></path></svg>`
        })}`
      })}
      \u2226

${validate_component(Column, "Column").$$render($$result, {}, {}, {
        default: () => `${validate_component(Button, "Button").$$render($$result, {
          style: "margin-left:0px",
          class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
        }, {}, {
          default: () => `${`<span class="${"bx--assistive-text svelte-1mbzvnp"}">Additive Selection</span>
    <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" style="${"will-change: transform; width:95%;height:95%"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"bx--btn__icon svelte-1mbzvnp"}" viewBox="${"0 0 24 24"}" aria-hidden="${"true"}"><path d="${"m3 1c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h4v4c0 1.11.89 2 2 2h11c1.11 0 2-.89 2-2v-11c0-1.11-.89-2-2-2-1.33 0-4 0-4 0s0-2.67 0-4c0-1.11-.89-2-2-2zm0 2h11v4h-5c-1.11 0-2 .89-2 2v5s-2.67 0-4 0zm6 6h5v5h-5zm7 0h4v11h-11c0-1.33 0-4 0-4h5c1.11 0 2-.89 2-2z"}" class="${"svelte-1mbzvnp"}"></path></svg>`}`
        })}  

    ${validate_component(Button, "Button").$$render($$result, {
          style: "margin-left:0px",
          class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
        }, {}, {
          default: () => `<span class="${"bx--assistive-text svelte-1mbzvnp"}">Undo</span>
    <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" style="${"will-change: transform; width:95%;height:95%"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"bx--btn__icon svelte-1mbzvnp"}" viewBox="${"5 5 35 35"}" aria-hidden="${"true"}"><path d="${"m25 38c-5.1 0-9.7-3-11.8-7.6l1.8-.8c1.8 3.9 5.7 6.4 10 6.4 6.1 0 11-4.9 11-11s-4.9-11-11-11c-4.6 0-8.5 2.8-10.1 7.3l-1.9-.7c1.9-5.2 6.6-8.6 12-8.6 7.2 0 13 5.8 13 13s-5.8 13-13 13z"}" class="${"svelte-1mbzvnp"}"></path><path d="${"m20 22h-8v-8h2v6h6z"}" class="${"svelte-1mbzvnp"}"></path></svg>`
        })}`
      })}

${validate_component(Column, "Column").$$render($$result, {style: "flex-grow:0!important;"}, {}, {
        default: () => `${validate_component(Button, "Button").$$render($$result, {
          style: "margin-left:0px",
          class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
        }, {}, {
          default: () => `<span class="${"bx--assistive-text svelte-1mbzvnp"}">Save and Build</span>
      <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" style="${"will-change: transform; width:95%;height:95%"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"bx--btn__icon svelte-1mbzvnp"}" viewBox="${"0 0 16 16"}" aria-hidden="${"true"}"><path fill-rule="${"evenodd"}" clip-rule="${"evenodd"}" d="${"M11.04 1.33L12.71 3l.29.71v.33h-.5l-.5.5v-.83l-1.67-1.67H10v4H4v-4H2v10h3l-.5 1H2l-1-1v-10l1-1h8.33l.71.29zM7 5h2V2H7v3zm6.5 0L15 6.5l-.02.69-5.5 5.5-.13.12-.37.37-.1.09-3 1.5-.67-.67 1.5-3 .09-.1.37-.37.12-.13 5.5-5.5h.71zm-6.22 7.24l-.52 1 1.04-.48-.52-.52zm.69-1.03l.79.79 5.15-5.15-.79-.79-5.15 5.15z"}" class="${"svelte-1mbzvnp"}"></path></svg>`
        })}     
    
    ${validate_component(Button, "Button").$$render($$result, {
          style: "margin-left:0px",
          class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
        }, {}, {
          default: () => `<span class="${"bx--assistive-text svelte-1mbzvnp"}">Explore Existing Selections</span>
      <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" style="${"will-change: transform; width:95%;height:95%"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"bx--btn__icon svelte-1mbzvnp"}" viewBox="${"0 0 31 31"}" aria-hidden="${"true"}"><path d="${"m9.002 31.36c-2.404 0-4.36-1.956-4.36-4.36s1.956-4.36 4.36-4.36c.731 0 1.42.182 2.026.5l2.125-3.338.607.387-2.125 3.339c1.048.797 1.727 2.057 1.727 3.473 0 2.403-1.955 4.359-4.36 4.359zm0-8c-2.007 0-3.64 1.633-3.64 3.64s1.633 3.64 3.64 3.64 3.64-1.633 3.64-3.64-1.632-3.64-3.64-3.64zm7 7.995c-.861 0-1.722-.071-2.557-.212l.119-.711c.796.135 1.617.202 2.438.202 4.648 0 8.917-2.134 11.712-5.854l.576.432c-2.932 3.904-7.411 6.143-12.288 6.143zm14.998-6.495c-.062 0-.126-.017-.182-.05l-5.995-3.505c-.11-.064-.179-.183-.179-.311s.068-.246.179-.311l5.995-3.495c.113-.065.249-.065.361-.002.111.064.181.184.181.312v7c0 .129-.069.248-.182.312-.054.034-.116.05-.178.05zm-5.281-3.865 4.921 2.877v-5.745zm-22.374 3.704c-.554-.803-1.034-1.665-1.425-2.56l.66-.289c.373.854.829 1.675 1.357 2.44zm-.219-4.222c-.092 0-.184-.035-.254-.105l-2.126-2.116c-.068-.068-.106-.16-.106-.256 0-.095.038-.187.105-.255l2.126-2.125c.141-.141.368-.141.509 0l2.122 2.121c.068.067.105.159.105.255s-.037.187-.105.254l-2.122 2.121c-.07.07-.162.106-.254.106zm-1.616-2.478 1.616 1.608 1.613-1.612-1.612-1.612zm7.251 2.177c-.732-1.266-1.119-2.711-1.119-4.181 0-3.819 2.58-7.149 6.274-8.098l.179.697c-3.375.867-5.733 3.91-5.733 7.4 0 1.343.354 2.664 1.022 3.819zm7.241-.821c-1.853 0-3.36-1.508-3.36-3.36 0-1.732 1.317-3.162 3.002-3.341v-5.659h.72v5.659c1.683.182 2.998 1.61 2.998 3.341 0 1.853-1.508 3.36-3.36 3.36zm0-6c-1.456 0-2.64 1.185-2.64 2.64 0 1.456 1.185 2.64 2.64 2.64s2.639-1.184 2.639-2.64c.001-1.455-1.183-2.64-2.639-2.64zm14.639 1.664c-.432-6.56-5.246-12.057-11.707-13.37l.143-.706c6.779 1.377 11.83 7.146 12.283 14.029zm-6.636-.664c-.062 0-.124-.016-.18-.048l-2.599-1.5c-.111-.064-.181-.184-.181-.312v-3c0-.128.069-.248.181-.312l2.599-1.5c.111-.063.248-.064.359 0l2.598 1.5c.111.064.181.183.181.312v3c0 .128-.069.248-.181.312l-2.598 1.5c-.055.032-.117.048-.179.048zm-2.238-2.068 2.238 1.292 2.237-1.292v-2.584l-2.237-1.292-2.238 1.292zm-5.769-7.927c-1.024 0-1.857-.836-1.857-1.865 0-1.023.833-1.855 1.857-1.855 1.027 0 1.863.832 1.863 1.855-.001 1.028-.837 1.865-1.863 1.865zm0-3c-.627 0-1.138.509-1.138 1.135 0 .631.51 1.145 1.138 1.145.63 0 1.142-.514 1.142-1.145 0-.626-.513-1.135-1.142-1.135zm-14.963 13.988c-.008 0-.017 0-.025-.001-.198-.015-.347-.177-.333-.375 0 0 .001-.021.001-.022.016-.198.185-.353.387-.331.198.015.346.188.331.387-.015.188-.174.342-.361.342zm.267-2.351h.009zm.534-1.947h.009zm.791-1.508c-.054 0-.108-.012-.159-.039-.175-.09-.249-.295-.16-.471.001-.003.012-.024.014-.028.094-.175.311-.24.488-.146.175.094.24.312.146.488-.066.123-.196.196-.329.196zm2.299-3.311c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.005-.004.023-.023.028-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.072.072-.17.109-.266.109zm-1.259 1.572c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.071.072-.169.109-.265.109zm-1.836 3.598c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.072.071-.169.109-.265.109zm-.535 1.947c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.071.072-.169.109-.265.109zm15.114 11.002c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.072.072-.169.109-.265.109zm2.007-.367c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.072.072-.169.109-.265.109zm3.38-2.1c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.072.072-.169.109-.265.109zm1.945-3.497c-.088 0-.176-.031-.244-.095-.142-.134-.157-.35-.027-.495.004-.005.022-.024.027-.028.141-.141.368-.141.509 0s.141.368 0 .509c-.071.072-.168.109-.265.109zm-17.367-13.531c-.099 0-.197-.042-.269-.123-.133-.147-.114-.38.034-.513.009-.008.034-.029.044-.036.161-.117.386-.081.503.079.117.161.082.386-.079.503-.067.061-.15.09-.233.09zm3.425-2.163c-.14 0-.275-.078-.334-.211-.077-.176-.012-.378.159-.463.01-.005.039-.019.05-.022.186-.071.394.021.465.207s-.021.394-.207.465c-.042.016-.088.024-.133.024zm-1.772.951c-.14 0-.275-.078-.334-.211-.078-.176-.013-.378.159-.463.01-.005.039-.019.05-.022.186-.071.394.021.465.207s-.021.394-.207.465c-.043.016-.088.024-.133.024zm3.662-1.66c-.155 0-.303-.097-.351-.251-.059-.19.039-.389.229-.447l.019-.006c.187-.058.391.048.45.238.058.19-.048.392-.238.45-.036.011-.072.016-.109.016zm2.754 22.221c-.019 0-.037-.002-.056-.005-.015-.002-.049-.009-.064-.014-.191-.054-.302-.254-.247-.444.054-.191.252-.304.445-.247.196.029.319.211.289.407-.028.178-.191.303-.367.303zm5.799-1.063c-.122 0-.241-.062-.309-.175-.103-.171-.047-.392.123-.494.166-.102.393-.055.498.11.104.166.066.379-.097.487-.004.003-.025.017-.03.02-.058.035-.121.052-.185.052zm2.752-2.898c-.069 0-.139-.02-.199-.061-.166-.11-.211-.334-.101-.499.089-.18.303-.237.477-.151.178.09.244.316.155.494-.007.014-.024.044-.032.056-.069.105-.184.161-.3.161zm1.007-3.868c-.199 0-.36-.161-.36-.36s.161-.37.36-.37.36.151.36.35v.02c0 .199-.161.36-.36.36z"}" class="${"svelte-1mbzvnp"}"></path><path d="${"m0 0h32v32h-32z"}" fill="${"none"}" class="${"svelte-1mbzvnp"}"></path></svg>`
        })}`
      })}

  `
    })}
       
        ${validate_component(Row, "Row").$$render($$result, {style: "float:inline-right"}, {}, {
      default: () => `
            
            ${validate_component(Column, "Column").$$render($$result, {}, {}, {default: () => `Draw Tools`})}
            ${validate_component(Column, "Column").$$render($$result, {}, {}, {})}
            ${validate_component(Column, "Column").$$render($$result, {}, {}, {default: () => `Edit Selection`})}
            ${validate_component(Column, "Column").$$render($$result, {}, {}, {})}
            ${validate_component(Column, "Column").$$render($$result, {}, {}, {default: () => `Build / Load `})}`
    })}`
  })}</header>
    
    
        ${slots.default ? slots.default({}) : ``}</main>`;
});
var __layout = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout
});
function load({error: error2, status}) {
  return {props: {error: error2, status}};
}
const Error$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {status} = $$props;
  let {error: error2} = $$props;
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
    $$bindings.error(error2);
  return `<h1>${escape(status)}</h1>

<p>${escape(error2.message)}</p>


${error2.stack ? `<pre>${escape(error2.stack)}</pre>` : ``}`;
});
var error = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Error$1,
  load
});
const Heading = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<h1 class="${"py-4 text-black text-3xl text-center font-bold"}">${slots.default ? slots.default({}) : ``}</h1>`;
});
const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Heading, "Heading").$$render($$result, {}, {}, {default: () => `Hello, World!`})}`;
});
var index$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Routes
});
var pbf_viewer_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\nmain.svelte-1c7d7h3{\n  display:flex;\n  position:relative;\n  padding:100px\n}\n\n/* purgecss end ignore */";
const css$5 = {
  code: "main.svelte-1c7d7h3{display:flex;position:relative;padding:100px}",
  map: `{"version":3,"file":"pbf_viewer.svelte","sources":["pbf_viewer.svelte"],"sourcesContent":["<script context='module' lang='ts'>\\n\\n// import {VectorTile} from '@mapbox/vector-tile';\\n// import {Pbf} from 'pbf';\\n// import {onMount} from 'svelte';\\n// import {zlib} from 'zlib';\\n\\n// console.error('example usage: http://localhost:3000/pbf_viewer#http://localhost:3000/infomap_tiles/4/7/4.pbf')\\n\\n// let hash='dsfsd'\\n\\n// let Protobuf = Pbf\\n\\n// // init functions need to be async\\n// async function init(){\\n// hash = window.location.hash.slice(1);\\n// // hash = 'dsf'\\n// console.log(window.location.hash)\\n// console.warn(new Protobuf(hash))\\n\\n// // var tile;\\n// // gunzip(hash, function(buffer) {\\n// //     console.warn(new Protobuf(buffer))\\n// //     tile = new VectorTile(new Protobuf(buffer));\\n// // }\\n// // Contains a map of all layers\\n// const layers = tile.layers;\\n\\n// console.log(layers);\\n// console.warn(tile)\\n\\n// }\\n\\n// onMount(init)\\n</script>\\n\\n<main>\\n    {#if hash}\\n    <h1> Tile: {hash}</h1>\\n    {/if}\\n\\n\\n</main>\\n\\n<style>\\nmain {\\n    display:flex;\\n    position:relative;\\n    padding: 100px;\\n}\\n</style>"],"names":[],"mappings":"AA6CA,IAAI,eAAC,CAAC,AACF,QAAQ,IAAI,CACZ,SAAS,QAAQ,CACjB,OAAO,CAAE,KAAK,AAClB,CAAC"}`
};
const Pbf_viewer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$5);
  return `<main class="${"svelte-1c7d7h3"}">${hash ? `<h1>Tile: ${escape(hash)}</h1>` : ``}


</main>`;
});
var pbf_viewer = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Pbf_viewer
});
var DrawButtons_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\n.selected{\n  border-color:#0f62fe !important;\n  color:rgb(255, 255, 255)\n}\n\n/* purgecss end ignore */";
const css$4 = {
  code: ".selected{border-color:#0f62fe !important;color:rgb(255, 255, 255)}",
  map: `{"version":3,"file":"DrawButtons.svelte","sources":["DrawButtons.svelte"],"sourcesContent":["<script>\\n  import {Button, Grid, Column, Row} from 'carbon-components-svelte';\\n  import {draw_type,draw_enabled} from '../mapstore.js';\\n  import {onMount} from 'svelte';\\n\\n  // export let selected = 'Move';\\n  export let disabled = false;\\n\\n\\n  function buttonclick(e) {\\n    return function() {\\n      console.warn(e);\\n      draw_type.set(e);\\n      console.warn($draw_type)\\n    };\\n  }\\n\\n  onMount(()=>{\\n\\n    const buttons = [...document.querySelectorAll('.drawbtn')];\\n  \\n\\n    draw_type.subscribe(function(draw){\\n      if (draw){\\n        buttons.forEach(d=>d.classList.remove(\\"selected\\"))\\n        document.getElementById(draw).classList.add(\\"selected\\");\\n        // alert(draw)\\n      }\\n})\\n\\n\\n\\n\\n\\n  })\\n \\n\\n</script>\\n\\n<main>\\n  <div>\\n    <Row>\\n      <Column>\\n        <!-- &nspar; -->\\n        <Button\\n          id= 'move'\\n          on:click={buttonclick('move')}\\n          style=\\"margin-left:0px;\\"\\n          class=\\"bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon drawbtn\\"\\n        >\\n          <span class=\\"bx--assistive-text\\">Move Map</span>\\n          <svg xmlns=\\"http://www.w3.org/2000/svg\\" id=\\"icon\\" viewBox=\\"0 0 32 32\\"\\n            ><defs\\n              ><style>\\n                .cls-1 {\\n                  fill: none;\\n                }\\n              </style></defs\\n            ><title>move</title><polygon\\n              points=\\"25 11 23.59 12.41 26.17 15 17 15 17 5.83 19.59 8.41 21 7 16 2 11 7 12.41 8.41 15 5.83 15 15 5.83 15 8.41 12.41 7 11 2 16 7 21 8.41 19.59 5.83 17 15 17 15 26.17 12.41 23.59 11 25 16 30 21 25 19.59 23.59 17 26.17 17 17 26.17 17 23.59 19.59 25 21 30 16 25 11\\"\\n            /><rect\\n              id=\\"_Transparent_Rectangle_\\"\\n              data-name=\\"&lt;Transparent Rectangle&gt;\\"\\n              class=\\"cls-1\\"\\n              width=\\"32\\"\\n              height=\\"32\\"\\n            /></svg\\n          >\\n        </Button>\\n\\n        <Button\\n          id = 'poly'\\n          style=\\"margin-left:0px\\"\\n          disabled = {$draw_enabled}\\n          on:click={buttonclick('poly')}\\n          class=\\"bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon drawbtn\\"\\n        >\\n          <span class=\\"bx--assistive-text\\">Draw Polygon</span>\\n          <svg\\n            focusable=\\"false\\"\\n            preserveAspectRatio=\\"xMidYMid meet\\"\\n            style=\\"will-change: transform; width:95%;height:95%\\"\\n            xmlns=\\"http://www.w3.org/2000/svg\\"\\n            class=\\"bx--btn__icon\\"\\n            viewBox=\\"3 3 19 19\\"\\n            aria-hidden=\\"true\\"\\n            ><path\\n              d=\\"m17 15.7v-2.7h2v4l-9 4-7-7 4-9h4v2h-2.7l-2.9 6.6 5 5zm5-10.7v2h-3v3h-2v-3h-3v-2h3v-3h2v3z\\"\\n            /></svg\\n          >\\n        </Button>\\n\\n        <Button\\n          id='radius'\\n          on:click={buttonclick('radius')}\\n          disabled = {$draw_enabled}\\n          class=\\"bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon drawbtn\\"\\n        >\\n          <span class=\\"bx--assistive-text\\">Select a Radius</span>\\n          <svg xmlns=\\"http://www.w3.org/2000/svg\\" id=\\"icon\\" viewBox=\\"0 0 32 32\\"\\n            ><defs\\n              ><style>\\n                .cls-1 {\\n                  fill: none;\\n                }\\n              </style></defs\\n            ><title>watson-health--circle-measurement</title><path\\n              d=\\"M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z\\"\\n            /><path\\n              d=\\"M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z\\"\\n            /><rect\\n              id=\\"_Transparent_Rectangle_\\"\\n              data-name=\\"&lt;Transparent Rectangle&gt;\\"\\n              class=\\"cls-1\\"\\n              width=\\"32\\"\\n              height=\\"32\\"\\n            /></svg\\n          >\\n        </Button>\\n\\n        <Button\\n          id='click'\\n          on:click={buttonclick('click')}\\n          disabled = {$draw_enabled}\\n          class=\\"bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon drawbtn\\"\\n        >\\n          <span class=\\"bx--assistive-text\\">Click Select</span>\\n          <svg\\n            focusable=\\"false\\"\\n            preserveAspectRatio=\\"xMidYMid meet\\"\\n            style=\\"will-change: transform;width:95%;height:95%\\"\\n            xmlns=\\"http://www.w3.org/2000/svg\\"\\n            class=\\"bx--btn__icon\\"\\n            viewBox=\\"2 4 19 14\\"\\n            aria-hidden=\\"true\\"\\n            ><path\\n              d=\\"m18.2848192 17.5777124 2.5687342 2.5687342c.1952621.1952622.1952621.5118446 0 .7071068-.1952622.1952621-.5118446.1952621-.7071068 0l-2.5687342-2.5687342-1.6616873 2.4925309c-.2260679.3391019-.7410894.2798123-.8841897-.1017884l-3-8c-.1507287-.4019432.2417831-.794455.6437263-.6437263l8 3c.3816007.1431003.4408903.6581218.1017884.8841897zm-1.0535788-.4994645 2.1792312-1.4528208-6.0560712-2.2710267 2.2710267 6.0560712 1.4528208-2.1792312c.0191996-.0300662.0419325-.0585276.0681987-.0847938s.0547276-.0489991.0847938-.0681987zm-11.7312404-14.0782479c.27614237 0 .5.22385763.5.5s-.22385763.5-.5.5c-.82842712 0-1.5.67157288-1.5 1.5 0 .27614237-.22385763.5-.5.5s-.5-.22385763-.5-.5c0-1.38071187 1.11928813-2.5 2.5-2.5zm3 1c-.27614237 0-.5-.22385763-.5-.5s.22385763-.5.5-.5h2c.2761424 0 .5.22385763.5.5s-.2238576.5-.5.5zm5 0c-.2761424 0-.5-.22385763-.5-.5s.2238576-.5.5-.5h2c.2761424 0 .5.22385763.5.5s-.2238576.5-.5.5zm-5 17c-.27614237 0-.5-.2238576-.5-.5s.22385763-.5.5-.5h2c.2761424 0 .5.2238576.5.5s-.2238576.5-.5.5zm-5.5-12.5c0-.27614237.22385763-.5.5-.5s.5.22385763.5.5v2c0 .2761424-.22385763.5-.5.5s-.5-.2238576-.5-.5zm0 5c0-.2761424.22385763-.5.5-.5s.5.2238576.5.5v2c0 .2761424-.22385763.5-.5.5s-.5-.2238576-.5-.5zm0 5c0-.2761424.22385763-.5.5-.5s.5.2238576.5.5c0 .8284271.67157288 1.5 1.5 1.5.27614237 0 .5.2238576.5.5s-.22385763.5-.5.5c-1.38071187 0-2.5-1.1192881-2.5-2.5zm18-8c0 .2761424-.2238576.5-.5.5s-.5-.2238576-.5-.5v-2c0-.27614237.2238576-.5.5-.5s.5.22385763.5.5zm0-5c0 .27614237-.2238576.5-.5.5s-.5-.22385763-.5-.5c0-.82842712-.6715729-1.5-1.5-1.5-.2761424 0-.5-.22385763-.5-.5s.2238576-.5.5-.5c1.3807119 0 2.5 1.11928813 2.5 2.5z\\"\\n            /></svg\\n          >\\n        </Button>\\n      </Column>\\n    </Row>\\n    <Row>\\n      <Column>Draw Tools</Column>\\n    </Row>\\n  </div>\\n</main>\\n\\n<style>\\n  :global(.selected) {\\n    border-color: #0f62fe !important;\\n    color:rgb(255, 255, 255);\\n    \\n  }\\n</style>\\n"],"names":[],"mappings":"AAqJU,SAAS,AAAE,CAAC,AAClB,YAAY,CAAE,OAAO,CAAC,UAAU,CAChC,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAE1B,CAAC"}`
};
const DrawButtons = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_draw_type;
  let $draw_enabled, $$unsubscribe_draw_enabled;
  $$unsubscribe_draw_type = subscribe(draw_type, (value) => value);
  $$unsubscribe_draw_enabled = subscribe(draw_enabled, (value) => $draw_enabled = value);
  let {disabled = false} = $$props;
  onMount(() => {
    const buttons = [...document.querySelectorAll(".drawbtn")];
    draw_type.subscribe(function(draw) {
      if (draw) {
        buttons.forEach((d2) => d2.classList.remove("selected"));
        document.getElementById(draw).classList.add("selected");
      }
    });
  });
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  $$result.css.add(css$4);
  $$unsubscribe_draw_type();
  $$unsubscribe_draw_enabled();
  return `<main><div>${validate_component(Row, "Row").$$render($$result, {}, {}, {
    default: () => `${validate_component(Column, "Column").$$render($$result, {}, {}, {
      default: () => `
        ${validate_component(Button, "Button").$$render($$result, {
        id: "move",
        style: "margin-left:0px;",
        class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon drawbtn"
      }, {}, {
        default: () => `<span class="${"bx--assistive-text"}">Move Map</span>
          <svg xmlns="${"http://www.w3.org/2000/svg"}" id="${"icon"}" viewBox="${"0 0 32 32"}"><defs><style>.cls-1 {
                  fill: none;
                }
              </style></defs><title>move</title><polygon points="${"25 11 23.59 12.41 26.17 15 17 15 17 5.83 19.59 8.41 21 7 16 2 11 7 12.41 8.41 15 5.83 15 15 5.83 15 8.41 12.41 7 11 2 16 7 21 8.41 19.59 5.83 17 15 17 15 26.17 12.41 23.59 11 25 16 30 21 25 19.59 23.59 17 26.17 17 17 26.17 17 23.59 19.59 25 21 30 16 25 11"}"></polygon><rect id="${"_Transparent_Rectangle_"}" data-name="${"<Transparent Rectangle>"}" class="${"cls-1"}" width="${"32"}" height="${"32"}"></rect></svg>`
      })}

        ${validate_component(Button, "Button").$$render($$result, {
        id: "poly",
        style: "margin-left:0px",
        disabled: $draw_enabled,
        class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon drawbtn"
      }, {}, {
        default: () => `<span class="${"bx--assistive-text"}">Draw Polygon</span>
          <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" style="${"will-change: transform; width:95%;height:95%"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"bx--btn__icon"}" viewBox="${"3 3 19 19"}" aria-hidden="${"true"}"><path d="${"m17 15.7v-2.7h2v4l-9 4-7-7 4-9h4v2h-2.7l-2.9 6.6 5 5zm5-10.7v2h-3v3h-2v-3h-3v-2h3v-3h2v3z"}"></path></svg>`
      })}

        ${validate_component(Button, "Button").$$render($$result, {
        id: "radius",
        disabled: $draw_enabled,
        class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon drawbtn"
      }, {}, {
        default: () => `<span class="${"bx--assistive-text"}">Select a Radius</span>
          <svg xmlns="${"http://www.w3.org/2000/svg"}" id="${"icon"}" viewBox="${"0 0 32 32"}"><defs><style>.cls-1 {
                  fill: none;
                }
              </style></defs><title>watson-health--circle-measurement</title><path d="${"M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z"}"></path><path d="${"M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z"}"></path><rect id="${"_Transparent_Rectangle_"}" data-name="${"<Transparent Rectangle>"}" class="${"cls-1"}" width="${"32"}" height="${"32"}"></rect></svg>`
      })}

        ${validate_component(Button, "Button").$$render($$result, {
        id: "click",
        disabled: $draw_enabled,
        class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon drawbtn"
      }, {}, {
        default: () => `<span class="${"bx--assistive-text"}">Click Select</span>
          <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" style="${"will-change: transform;width:95%;height:95%"}" xmlns="${"http://www.w3.org/2000/svg"}" class="${"bx--btn__icon"}" viewBox="${"2 4 19 14"}" aria-hidden="${"true"}"><path d="${"m18.2848192 17.5777124 2.5687342 2.5687342c.1952621.1952622.1952621.5118446 0 .7071068-.1952622.1952621-.5118446.1952621-.7071068 0l-2.5687342-2.5687342-1.6616873 2.4925309c-.2260679.3391019-.7410894.2798123-.8841897-.1017884l-3-8c-.1507287-.4019432.2417831-.794455.6437263-.6437263l8 3c.3816007.1431003.4408903.6581218.1017884.8841897zm-1.0535788-.4994645 2.1792312-1.4528208-6.0560712-2.2710267 2.2710267 6.0560712 1.4528208-2.1792312c.0191996-.0300662.0419325-.0585276.0681987-.0847938s.0547276-.0489991.0847938-.0681987zm-11.7312404-14.0782479c.27614237 0 .5.22385763.5.5s-.22385763.5-.5.5c-.82842712 0-1.5.67157288-1.5 1.5 0 .27614237-.22385763.5-.5.5s-.5-.22385763-.5-.5c0-1.38071187 1.11928813-2.5 2.5-2.5zm3 1c-.27614237 0-.5-.22385763-.5-.5s.22385763-.5.5-.5h2c.2761424 0 .5.22385763.5.5s-.2238576.5-.5.5zm5 0c-.2761424 0-.5-.22385763-.5-.5s.2238576-.5.5-.5h2c.2761424 0 .5.22385763.5.5s-.2238576.5-.5.5zm-5 17c-.27614237 0-.5-.2238576-.5-.5s.22385763-.5.5-.5h2c.2761424 0 .5.2238576.5.5s-.2238576.5-.5.5zm-5.5-12.5c0-.27614237.22385763-.5.5-.5s.5.22385763.5.5v2c0 .2761424-.22385763.5-.5.5s-.5-.2238576-.5-.5zm0 5c0-.2761424.22385763-.5.5-.5s.5.2238576.5.5v2c0 .2761424-.22385763.5-.5.5s-.5-.2238576-.5-.5zm0 5c0-.2761424.22385763-.5.5-.5s.5.2238576.5.5c0 .8284271.67157288 1.5 1.5 1.5.27614237 0 .5.2238576.5.5s-.22385763.5-.5.5c-1.38071187 0-2.5-1.1192881-2.5-2.5zm18-8c0 .2761424-.2238576.5-.5.5s-.5-.2238576-.5-.5v-2c0-.27614237.2238576-.5.5-.5s.5.22385763.5.5zm0-5c0 .27614237-.2238576.5-.5.5s-.5-.22385763-.5-.5c0-.82842712-.6715729-1.5-1.5-1.5-.2761424 0-.5-.22385763-.5-.5s.2238576-.5.5-.5c1.3807119 0 2.5 1.11928813 2.5 2.5z"}"></path></svg>`
      })}`
    })}`
  })}
    ${validate_component(Row, "Row").$$render($$result, {}, {}, {
    default: () => `${validate_component(Column, "Column").$$render($$result, {}, {}, {default: () => `Draw Tools`})}`
  })}</div>
</main>`;
});
var DrawButtons$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": DrawButtons
});
const EditButtons = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_add_mode;
  let $selected, $$unsubscribe_selected;
  $$unsubscribe_add_mode = subscribe(add_mode, (value) => value);
  $$unsubscribe_selected = subscribe(selected, (value) => $selected = value);
  let disabled = "false";
  function init2() {
    draw_type.subscribe((e) => {
      disabled = e === "click";
    });
  }
  onMount$1(init2);
  $$unsubscribe_add_mode();
  $$unsubscribe_selected();
  return `<main><div>${validate_component(Row, "Row").$$render($$result, {}, {}, {
    default: () => `${validate_component(Column, "Column").$$render($$result, {}, {}, {
      default: () => `${validate_component(Button, "Button").$$render($$result, {
        style: "margin-left:0px",
        disabled,
        class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
      }, {}, {
        default: () => `${`<span class="${"bx--assistive-text"}">Additive Selection</span>
            <svg xmlns="${"http://www.w3.org/2000/svg"}" id="${"icon"}" width="${"32"}" height="${"32"}" viewBox="${"0 0 32 32"}"><defs><style>.cls-1 {
                    fill: none;
                  }
                </style></defs><path d="${"M28,10H22V4a2.0025,2.0025,0,0,0-2-2H4A2.0025,2.0025,0,0,0,2,4V20a2.0025,2.0025,0,0,0,2,2h6v6a2.0025,2.0025,0,0,0,2,2H28a2.0025,2.0025,0,0,0,2-2V12A2.0025,2.0025,0,0,0,28,10ZM4,20V4H20v6H12a2.0025,2.0025,0,0,0-2,2v8Zm8,8V22h8a2.0025,2.0025,0,0,0,2-2V12h6V28Z"}"></path><rect id="${"_Transparent_Rectangle_"}" data-name="${"<Transparent Rectangle>"}" class="${"cls-1"}" width="${"32"}" height="${"32"}"></rect></svg>`}`
      })}

        ${validate_component(Button, "Button").$$render($$result, {
        disabled: $selected.length < 2,
        style: "margin-left:0px",
        class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
      }, {}, {
        default: () => `<span class="${"bx--assistive-text"}">Undo</span>
          <svg xmlns="${"http://www.w3.org/2000/svg"}" id="${"icon"}" viewBox="${"0 0 32 32"}"><defs><style>.cls-1 {
                  fill: none;
                }
              </style></defs><title>reset</title><path d="${"M18,28A12,12,0,1,0,6,16v6.2L2.4,18.6,1,20l6,6,6-6-1.4-1.4L8,22.2V16H8A10,10,0,1,1,18,26Z"}"></path><rect id="${"_Transparent_Rectangle_"}" data-name="${"<Transparent Rectangle>"}" class="${"cls-1"}" width="${"32"}" height="${"32"}"></rect></svg>`
      })}`
    })}`
  })}
    ${validate_component(Row, "Row").$$render($$result, {}, {}, {
    default: () => `${validate_component(Column, "Column").$$render($$result, {}, {}, {default: () => `Edit Selection`})}`
  })}</div>
</main>`;
});
var EditButtons$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": EditButtons
});
const ProgressButtons = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $selected, $$unsubscribe_selected;
  let $$unsubscribe_query;
  $$unsubscribe_selected = subscribe(selected, (value) => $selected = value);
  $$unsubscribe_query = subscribe(query, (value) => value);
  let {disabled = false} = $$props;
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
    $$bindings.disabled(disabled);
  $$unsubscribe_selected();
  $$unsubscribe_query();
  return `<main><div>${validate_component(Row, "Row").$$render($$result, {}, {}, {
    default: () => `${validate_component(Column, "Column").$$render($$result, {style: "flex-grow:0!important;"}, {}, {
      default: () => `${validate_component(Button, "Button").$$render($$result, {
        style: "margin-left:0px",
        disabled: $selected.length < 2,
        class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
      }, {}, {
        default: () => `<span class="${"bx--assistive-text"}">Save</span>
        <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" xmlns="${"http://www.w3.org/2000/svg"}" fill="${"currentColor"}" width="${"32"}" height="${"32"}" viewBox="${"0 0 32 32"}" aria-hidden="${"true"}"><path d="${"M30 25L28.586 23.586 26 26.172 26 18 24 18 24 26.172 21.414 23.586 20 25 25 30 30 25zM19 14H23V16H19zM19 10H26V12H19zM9 18h6a3 3 0 013 3v2H16V21a1 1 0 00-1-1H9a1 1 0 00-1 1v2H6V21A3 3 0 019 18zM16 13a4 4 0 10-4 4A4 4 0 0016 13zm-2 0a2 2 0 11-2-2A2 2 0 0114 13z"}"></path><path d="${"M18,26H4V6H28V16h2V6a2,2,0,0,0-2-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H18Z"}"></path><title>Download study</title></svg>`
      })}     

      
      
      ${validate_component(Button, "Button").$$render($$result, {
        style: "margin-left:0px",
        class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
      }, {}, {
        default: () => `<span class="${"bx--assistive-text"}">Build</span>
        <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" xmlns="${"http://www.w3.org/2000/svg"}" fill="${"currentColor"}" width="${"32"}" height="${"32"}" viewBox="${"0 0 32 32"}" aria-hidden="${"true"}"><path d="${"M18 13L16.59 14.41 19.17 17 10 17 10 19 19.17 19 16.59 21.59 18 23 23 18 18 13z"}"></path><path d="${"M11.1716,6l3.4142,3.4142L15.1716,10H28V26H4V6h7.1716m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V10a2,2,0,0,0-2-2H16L12.5858,4.5858A2,2,0,0,0,11.1716,4Z"}"></path><title>Folder move to</title></svg>`
      })}     
        

      ${validate_component(Button, "Button").$$render($$result, {
        style: "margin-left:0px",
        class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
      }, {}, {
        default: () => `<span class="${"bx--assistive-text"}">Upload</span>
      <svg focusable="${"false"}" preserveAspectRatio="${"xMidYMid meet"}" xmlns="${"http://www.w3.org/2000/svg"}" fill="${"currentColor"}" width="${"32"}" height="${"32"}" viewBox="${"0 0 32 32"}" aria-hidden="${"true"}"><path d="${"M6 18L7.41 19.41 15 11.83 15 30 17 30 17 11.83 24.59 19.41 26 18 16 8 6 18zM6 8V4H26V8h2V4a2 2 0 00-2-2H6A2 2 0 004 4V8z"}"></path><title>Upload</title></svg>`
      })}

    ${validate_component(Button, "Button").$$render($$result, {
        style: "margin-left:0px",
        class: "bx--btn bx--btn--secondary bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center bx--btn--sm icon"
      }, {}, {
        default: () => `<span class="${"bx--assistive-text"}">Clear</span>
    <svg xmlns="${"http://www.w3.org/2000/svg"}" width="${"24"}" height="${"24"}" viewBox="${"0 0 24 24"}"><path fill-rule="${"evenodd"}" d="${"M16 1.75V3h5.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H8V1.75C8 .784 8.784 0 9.75 0h4.5C15.216 0 16 .784 16 1.75zm-6.5 0a.25.25 0 01.25-.25h4.5a.25.25 0 01.25.25V3h-5V1.75z"}"></path><path d="${"M4.997 6.178a.75.75 0 10-1.493.144L4.916 20.92a1.75 1.75 0 001.742 1.58h10.684a1.75 1.75 0 001.742-1.581l1.413-14.597a.75.75 0 00-1.494-.144l-1.412 14.596a.25.25 0 01-.249.226H6.658a.25.25 0 01-.249-.226L4.997 6.178z"}"></path><path d="${"M9.206 7.501a.75.75 0 01.793.705l.5 8.5A.75.75 0 119 16.794l-.5-8.5a.75.75 0 01.705-.793zm6.293.793A.75.75 0 1014 8.206l-.5 8.5a.75.75 0 001.498.088l.5-8.5z"}"></path></svg>`
      })}`
    })}`
  })}
         ${validate_component(Row, "Row").$$render($$result, {}, {}, {
    default: () => `${validate_component(Column, "Column").$$render($$result, {}, {}, {default: () => `IO Tools`})}`
  })}</div>
        </main>`;
});
var ProgressButtons$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": ProgressButtons
});
var InfoBox_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\n.bx--accordion__content p{\n  width:100%\n}\n\n.info{\n  width:30%;\n  max-width:600px;\n  min-width:400px;\n  background-color:#f5f5f5;\n  border-radius:0.25rem;\n  padding:.8rem;\n  margin:1rem;\n  border:1px solid rgba(60, 58, 58, 0.454)\n}\n\n/* purgecss end ignore */";
const css$3 = {
  code: ".bx--accordion__content p{width:100%\n  }.info{width:30%;max-width:600px;min-width:400px;background-color:#f5f5f5;border-radius:0.25rem;padding:.8rem;margin:1rem;border:1px solid rgba(60, 58, 58, 0.454)}",
  map: `{"version":3,"file":"InfoBox.svelte","sources":["InfoBox.svelte"],"sourcesContent":["<script>\\n    import {Accordion,AccordionItem,Search} from 'carbon-components-svelte';\\n\\n    export let title = 'Custom Profile (Info)'\\n    export let text = 'Welcome to the custom drawing tool. \\\\n To begin drawing, click on the map and zoom in, or use the search bar below to locate area of interest. ';\\n    export let subtitle = ' '\\n    export let open = true\\n\\n    \\n\\n</script>\\n\\n<Accordion class='info'>\\n    <AccordionItem open={open}>\\n      <svelte:fragment slot=\\"title\\">\\n      <h4>{title}</h4>\\n      <h6>{subtitle}</h6>\\n      </svelte:fragment>\\n        \\n        <p>{text}</p>\\n    \\n<!--  -->\\n    \\n    </AccordionItem>\\n    <slot></slot>\\n  \\n</Accordion>\\n\\n<style>\\n  :global(.bx--accordion__content p){\\n      width:100%\\n  }\\n\\n  :global(.info){\\n    width:30%;\\n    max-width: 600px;\\n    min-width: 400px;\\n    background-color: #f5f5f5;\\n    border-radius: 0.25rem;\\n    padding: .8rem;\\n    margin: 1rem;\\n    border: 1px solid rgba(60, 58, 58, 0.454);\\n  }\\n</style>"],"names":[],"mappings":"AA6BU,yBAAyB,AAAC,CAAC,AAC/B,MAAM,IAAI;EACd,CAAC,AAEO,KAAK,AAAC,CAAC,AACb,MAAM,GAAG,CACT,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,OAAO,CACtB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,AAC3C,CAAC"}`
};
const InfoBox = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {title = "Custom Profile (Info)"} = $$props;
  let {text = "Welcome to the custom drawing tool. \n To begin drawing, click on the map and zoom in, or use the search bar below to locate area of interest. "} = $$props;
  let {subtitle = " "} = $$props;
  let {open = true} = $$props;
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.subtitle === void 0 && $$bindings.subtitle && subtitle !== void 0)
    $$bindings.subtitle(subtitle);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  $$result.css.add(css$3);
  return `${validate_component(Accordion, "Accordion").$$render($$result, {class: "info"}, {}, {
    default: () => `${validate_component(AccordionItem, "AccordionItem").$$render($$result, {open}, {}, {
      title: () => `<h4>${escape(title)}</h4>
      <h6>${escape(subtitle)}</h6>
      `,
      default: () => `<p>${escape(text)}</p>
    
`
    })}
    ${slots.default ? slots.default({}) : ``}`
  })}`;
});
var InfoBox$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": InfoBox
});
const PostcodeSearch = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $mapobject, $$unsubscribe_mapobject;
  $$unsubscribe_mapobject = subscribe(mapobject, (value) => $mapobject = value);
  $$unsubscribe_mapobject();
  return `<main><div>${validate_component(Row, "Row").$$render($$result, {}, {}, {
    default: () => `${validate_component(Search, "Search").$$render($$result, {
      closeButtonLabelText: "Clear search input",
      defaultValue: "",
      autocomplete: "on",
      id: "search-1",
      labelText: "Postcode Search",
      onChange(x) {
        console.log(x);
        $mapobject.setCenter(x);
      },
      onKeyDown: function noRefCheck(x) {
        return [1, 2, 3];
      },
      size: "sm",
      style: "max-width:100px"
    }, {}, {})}`
  })}
         ${validate_component(Row, "Row").$$render($$result, {}, {}, {
    default: () => `${validate_component(Column, "Column").$$render($$result, {}, {}, {default: () => `.`})}`
  })}</div>
</main>`;
});
var PostcodeSearch$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": PostcodeSearch
});
var ItemAccordion_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\n.bx--accordion__content p{\n  width:100%\n}\n\n/* purgecss end ignore */";
const css$2 = {
  code: ".bx--accordion__content p{width:100%\n  }",
  map: `{"version":3,"file":"ItemAccordion.svelte","sources":["ItemAccordion.svelte"],"sourcesContent":["<script>\\n    import {AccordionItem} from 'carbon-components-svelte';\\n\\n    export let title = 'Custom Profile (Info)'\\n    \\n    export let subtitle = ' '\\n    export let open = true\\n\\n    \\n\\n</script>\\n\\n    <AccordionItem open={open}>\\n      <svelte:fragment slot=\\"title\\">\\n      <h4>{title}</h4>\\n      <h7><b>{subtitle}</b></h7>\\n      </svelte:fragment>\\n    <slot style='width:100%'></slot>\\n    </AccordionItem>\\n    \\n  \\n\\n\\n<style>\\n  :global(.bx--accordion__content p){\\n      width:100%\\n  }\\n\\n  \\n</style>"],"names":[],"mappings":"AAwBU,yBAAyB,AAAC,CAAC,AAC/B,MAAM,IAAI;EACd,CAAC"}`
};
const ItemAccordion = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {title = "Custom Profile (Info)"} = $$props;
  let {subtitle = " "} = $$props;
  let {open = true} = $$props;
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.subtitle === void 0 && $$bindings.subtitle && subtitle !== void 0)
    $$bindings.subtitle(subtitle);
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  $$result.css.add(css$2);
  return `${validate_component(AccordionItem, "AccordionItem").$$render($$result, {open}, {}, {
    title: () => `<h4>${escape(title)}</h4>
      <h7><b>${escape(subtitle)}</b></h7>
      `,
    default: () => `${slots.default ? slots.default({style: "width:100%"}) : ``}`
  })}`;
});
var ItemAccordion$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": ItemAccordion
});
var AreaMap_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\nmain.svelte-2r8wq7{\n  position:absolute;\n  top:0;\n  left:0;\n  margin:auto\n}\n\n/* purgecss end ignore */";
const css$1 = {
  code: "main.svelte-2r8wq7{position:absolute;top:0;left:0;margin:auto}",
  map: `{"version":3,"file":"AreaMap.svelte","sources":["AreaMap.svelte"],"sourcesContent":["<script>\\n  // imports\\n  import maplibregl from 'maplibre-gl';\\n  import {createEventDispatcher, onMount} from 'svelte';\\n  import {writable, get} from 'svelte/store';\\n  import {init_draw} from './MapDraw.js';\\n  const dispatch = createEventDispatcher();\\n  import {\\n    // select,\\n    mapsource,\\n    maplayer,\\n    mapfunctions,\\n    mapobject,\\n    draw_type,\\n    // datalayers,\\n    mapstyle,\\n    minzoom,\\n    maxzoom,\\n    location,\\n    maxbounds,\\n    selected,\\n    draw_enabled,\\n\\n    // level,\\n    // zoomed,\\n    //init_draw,\\n  } from './mapstore.js';\\n\\n  var loading = true;\\n  const mapboxgl = maplibregl;\\n  //styling\\n  // import 'mapbox-gl/dist/mapbox-gl-draw.css'\\n  import './css/mapbox-gl.css';\\n\\n  let webgl_canvas;\\n\\n  export let drawing_tools = false;\\n  export let width = '100vw';\\n  export let height = '100vh';\\n\\n  let draw;\\n\\n  /// MAP creation\\n  async function init() {\\n    console.warn(webgl_canvas);\\n\\n    $mapobject = new mapboxgl.Map({\\n      container: 'mapcontainer',\\n      style: mapstyle,\\n      minZoom: minzoom,\\n      maxZoom: maxzoom,\\n      maxBounds: maxbounds,\\n      pitch: 10, // 30,\\n      center: [0, 52],\\n      zoom: 4,\\n      hash: true, // set options in hash string\\n    });\\n\\n    // scale bar\\n    $mapobject.addControl(\\n      new mapboxgl.ScaleControl({\\n        position: 'bottom-left',\\n      })\\n    );\\n\\n    // navigation\\n    $mapobject.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\\n\\n    //disable double click and rotation\\n    $mapobject.doubleClickZoom.disable();\\n    $mapobject.dragRotate.disable();\\n\\n    // // correct error - ignore 403 missing tiles\\n    $mapobject.on('error', (e) => {\\n      if (\\n        e.error.status != 403 &&\\n        e.error.message != 'Failed to fetch' &&\\n        !/CORS/.test(e.error.message)\\n      ) {\\n        console.error('--', e.error.status, e.error.message);\\n        return e;\\n      }\\n    });\\n\\n    $mapobject.on('load', SetLayers);\\n  }\\n\\n  /// Set all Mapbox Parameters ///\\n  export async function SetLayers() {\\n    // set mapbox layers\\n    console.log('set layers');\\n\\n    mapsource.subscribe(async () => {\\n      // set the sources\\n      for (const [key, value] of Object.entries($mapsource)) {\\n        if ($mapobject.getSource(key)) $mapobject.removeSource(key);\\n        // if (value.hasOwnProperty('data')) value.data = await value.data; // for async loads\\n        if (!$mapobject.getSource(key)) $mapobject.addSource(key, value); // as it may nto be removable\\n      }\\n    });\\n\\n    maplayer.subscribe(async () => {\\n      // set the layers\\n      for (const value of $maplayer) {\\n        console.log('layer', value);\\n        if ($mapobject.getLayer(value.id)) $mapobject.removeLayer(value.id);\\n        $mapobject.addLayer(value);\\n      }\\n    });\\n\\n    mapfunctions.subscribe(async () => {\\n      // console.warn('fnreload',$mapfunctions)\\n      // set the functions\\n      for (const e of $mapfunctions) {\\n        // $mapobject.off(e.event, e.layer, e.callback);\\n        if (!e.off) console.log('adding', e.event, e.layer);\\n        $mapobject.on(e.event, e.layer, e.callback);\\n      }\\n    });\\n\\n    if (drawing_tools) await init_draw();\\n\\n    // move mapobject to location\\n    $mapobject.fitBounds(location.bounds, {\\n      padding: 20,\\n    });\\n  \\n\\n  draw_type.subscribe(() => {\\n    console.warn('------dt-------', $draw_type);\\n    if (draw) {\\n      clean();\\n\\n      if (e.target.checked) {\\n        map[handler].enable();\\n      } else {\\n        map[handler].disable();\\n      }\\n    }\\n  });\\n\\n\\n\\n  loading=false\\n  console.warn('---loaded---');\\n  }\\n\\n\\n  /// main\\n  onMount(init);\\n</script>\\n\\n<!-- Script autogenerated by Svelte-Jinja (author: Dan Ellis) -->\\n<main>\\n  <div\\n    class=\\"mapboxgl-canvas\\"\\n    tabindex=\\"0\\"\\n    aria-label=\\"Map\\"\\n    id=\\"mapcontainer\\"\\n    style=\\"width: {width}; height: {height}; opacity:{loading?0.4:1} \\"\\n    bind:this={webgl_canvas}\\n  />\\n</main>\\n\\n<style lang=\\"scss\\">\\n  main {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    margin: auto;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAqKE,IAAI,cAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,AACd,CAAC"}`
};
const AreaMap = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $mapobject, $$unsubscribe_mapobject;
  let $mapsource, $$unsubscribe_mapsource;
  let $maplayer, $$unsubscribe_maplayer;
  let $mapfunctions, $$unsubscribe_mapfunctions;
  let $draw_type, $$unsubscribe_draw_type;
  $$unsubscribe_mapobject = subscribe(mapobject, (value) => $mapobject = value);
  $$unsubscribe_mapsource = subscribe(mapsource, (value) => $mapsource = value);
  $$unsubscribe_maplayer = subscribe(maplayer, (value) => $maplayer = value);
  $$unsubscribe_mapfunctions = subscribe(mapfunctions, (value) => $mapfunctions = value);
  $$unsubscribe_draw_type = subscribe(draw_type, (value) => $draw_type = value);
  createEventDispatcher();
  var loading = true;
  const mapboxgl = maplibregl;
  let webgl_canvas;
  let {drawing_tools = false} = $$props;
  let {width = "100vw"} = $$props;
  let {height = "100vh"} = $$props;
  async function init2() {
    console.warn(webgl_canvas);
    set_store_value(mapobject, $mapobject = new mapboxgl.Map({
      container: "mapcontainer",
      style: mapstyle,
      minZoom: minzoom,
      maxZoom: maxzoom,
      maxBounds: maxbounds,
      pitch: 10,
      center: [0, 52],
      zoom: 4,
      hash: true
    }), $mapobject);
    $mapobject.addControl(new mapboxgl.ScaleControl({position: "bottom-left"}));
    $mapobject.addControl(new mapboxgl.NavigationControl(), "bottom-right");
    $mapobject.doubleClickZoom.disable();
    $mapobject.dragRotate.disable();
    $mapobject.on("error", (e) => {
      if (e.error.status != 403 && e.error.message != "Failed to fetch" && !/CORS/.test(e.error.message)) {
        console.error("--", e.error.status, e.error.message);
        return e;
      }
    });
    $mapobject.on("load", SetLayers);
  }
  async function SetLayers() {
    console.log("set layers");
    mapsource.subscribe(async () => {
      for (const [key, value] of Object.entries($mapsource)) {
        if ($mapobject.getSource(key))
          $mapobject.removeSource(key);
        if (!$mapobject.getSource(key))
          $mapobject.addSource(key, value);
      }
    });
    maplayer.subscribe(async () => {
      for (const value of $maplayer) {
        console.log("layer", value);
        if ($mapobject.getLayer(value.id))
          $mapobject.removeLayer(value.id);
        $mapobject.addLayer(value);
      }
    });
    mapfunctions.subscribe(async () => {
      for (const e of $mapfunctions) {
        if (!e.off)
          console.log("adding", e.event, e.layer);
        $mapobject.on(e.event, e.layer, e.callback);
      }
    });
    if (drawing_tools)
      await init_draw();
    $mapobject.fitBounds(location.bounds, {padding: 20});
    draw_type.subscribe(() => {
      console.warn("------dt-------", $draw_type);
    });
    loading = false;
    console.warn("---loaded---");
  }
  onMount(init2);
  if ($$props.drawing_tools === void 0 && $$bindings.drawing_tools && drawing_tools !== void 0)
    $$bindings.drawing_tools(drawing_tools);
  if ($$props.width === void 0 && $$bindings.width && width !== void 0)
    $$bindings.width(width);
  if ($$props.height === void 0 && $$bindings.height && height !== void 0)
    $$bindings.height(height);
  if ($$props.SetLayers === void 0 && $$bindings.SetLayers && SetLayers !== void 0)
    $$bindings.SetLayers(SetLayers);
  $$result.css.add(css$1);
  $$unsubscribe_mapobject();
  $$unsubscribe_mapsource();
  $$unsubscribe_maplayer();
  $$unsubscribe_mapfunctions();
  $$unsubscribe_draw_type();
  return `
<main class="${"svelte-2r8wq7"}"><div class="${"mapboxgl-canvas"}" tabindex="${"0"}" aria-label="${"Map"}" id="${"mapcontainer"}" style="${"width: " + escape(width) + "; height: " + escape(height) + "; opacity:" + escape(loading ? 0.4 : 1) + " "}"${add_attribute("this", webgl_canvas, 1)}></div>
</main>`;
});
var AreaMap$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": AreaMap
});
var index_svelte_svelte_type_style_lang = "/* purgecss start ignore */\n\n:root{\n  --header-2-height:clamp(2rem, 4vh, 60px);\n  --header-1-height:clamp(1rem, 5vh, 40px);\n  --bar:#343a45\n}\n\n.icon{\n  border:1px solid rgb(113, 113, 113);\n  aspect-ratio:1/1;\n  height:auto;\n  width:var(--header-2-height) !important\n}\n\nheader.svelte-10r4fzz{\n  display:block;\n  position:fixed;\n  width:100vw;\n  margin:0 !important\n}\n\n.bx--grid{\n  left:0;\n  right:0;\n  margin-left:0;\n  margin-right:0px;\n  padding-left:0px;\n  padding-right:0px;\n  width:100vw\n}\n\n#head1{\n  width:100vw;\n  height:var(--header-1-height) !important;\n  background-color:whitesmoke;\n  margin:0\n}\n\n#head2{\n  left:0;\n  right:0;\n  margin-left:15px;\n  margin-right:15px;\n  padding-left:0px;\n  padding-right:30px;\n  width:100%;\n  background-color:var(--bar);\n  margin-bottom:1.2rem\n}\n\n.logo.svelte-10r4fzz{\n  height:calc(var(--header-1-height) * 0.7) !important;\n  width:auto\n}\n\n.bx--col{\n  padding:0 !important;\n  display:flex;\n  float:right;\n  right:0;\n  margin:auto;\n  flex-grow:3 !important;\n  text-align:right;\n  justify-content:space-between\n}\n\nsmall{\n  font:revert;\n  font-size:revert\n}\n\n.bx--btn--secondary{\n  background-color:var(--bar);\n  filter:brightness(0.85)\n}\n\nheader{\n  height:100px\n}\n\n/* purgecss end ignore */";
const css = {
  code: ":root{--header-2-height:clamp(2rem, 4vh, 60px);--header-1-height:clamp(1rem, 5vh, 40px);--bar:#343a45}.icon{border:1px solid rgb(113, 113, 113);aspect-ratio:1/1;height:auto;width:var(--header-2-height) !important}header.svelte-10r4fzz{display:block;position:fixed;width:100vw;margin:0 !important}.bx--grid{left:0;right:0;margin-left:0;margin-right:0px;padding-left:0px;padding-right:0px;width:100vw}#head1{width:100vw;height:var(--header-1-height) !important;background-color:whitesmoke;margin:0}#head2{left:0;right:0;margin-left:15px;margin-right:15px;padding-left:0px;padding-right:30px;width:100%;background-color:var(--bar);margin-bottom:1.2rem}.logo.svelte-10r4fzz{height:calc(var(--header-1-height) * 0.7) !important;width:auto}.bx--col{padding:0 !important;display:flex;float:right;right:0;margin:auto;flex-grow:3 !important;text-align:right;justify-content:space-between}small{font:revert;font-size:revert}.bx--btn--secondary{background-color:var(--bar);filter:brightness(0.85)}header{height:100px}",
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script>\\n  // import './css/style.css';\\n  import 'carbon-components-svelte/css/g10.css';\\n  import {\\n    Grid,\\n    Row,\\n    Column,\\n    Breadcrumb,\\n    BreadcrumbItem,\\n    ToastNotification,\\n  } from 'carbon-components-svelte';\\n  import {Slider} from 'carbon-components-svelte';\\n  import DrawButtons from './Toolbar/DrawButtons.svelte';\\n  import EditButtons from './Toolbar/EditButtons.svelte';\\n  import ProgressButtons from './Toolbar/ProgressButtons.svelte';\\n  import InfoBox from './Toolbar/InfoBox.svelte';\\n  import PostcodeSearch from './Toolbar/PostcodeSearch.svelte';\\n  import ItemAccordion from './Toolbar/ItemAccordion.svelte';\\n\\n  let add_mode = true;\\n\\n  import './css/mapbox-gl.css';\\n  let webgl_canvas;\\n  export let width = '100%';\\n  export let height = '100%';\\n  //   let pending = new Set([]);\\n  let error = false;\\n  let speak = false;\\n\\n  // import { default as mapboxgl } from \\"./mapbox-gl.js\\";\\n  import {default as AreaMap} from './AreaMap.svelte';\\n  // import mapboxgl, {Popup} from 'mapbox-gl';\\n  import {onMount} from 'svelte';\\n  // import {writable, get} from 'svelte/store';\\n  // import {csv} from 'd3-fetch';\\n  import {\\n    // select,\\n    mapsource,\\n    maplayer,\\n    mapfunctions,\\n    mapobject,\\n    mapstyle,\\n    minzoom,\\n    maxzoom,\\n    location,\\n    maxbounds,\\n    draw_type,\\n    draw_enabled,\\n    radiusInKm,\\n    selected,\\n    query,\\n    // level,\\n    // zoomed,\\n  } from './mapstore.js';\\n  import {simplify_query} from './MapDraw.js';\\n  // import { ZoomHistory } from 'maplibre-gl';\\n\\n  async function init() {\\n    console.clear();\\n    console.warn(webgl_canvas);\\n\\n    console.log('---' + window.location.host.split(':')[0] + '---');\\n    // map setup and vars\\n    $mapsource = {\\n      area: {\\n        type: 'vector',\\n        tiles: [\\n          // \`\${window.location.origin}/cors_endpoint/{z}/{x}/{y}.pbf\`\\n          \`http://localhost:7113/{z}/{x}/{y}.pbf\`,\\n          // \`\${window.location.origin}/LSOA/{z}/{x}/{y}.pbf\`,\\n          // \`https://wolfiex.github.io/ONS_Maptiles/LSOA/{z}/{x}/{y}.pbf\`,\\n        ],\\n      },\\n    };\\n\\n    console.warn('mapsource', $mapsource);\\n\\n    $maplayer = [\\n      {\\n        id: 'bounds',\\n        source: 'area',\\n        'source-layer': 'geodraw',\\n        // tileSize: 256,\\n        type: 'fill',\\n        paint: {\\n          'fill-color': 'transparent',\\n          'fill-opacity': 0.7,\\n          'fill-outline-color': 'steelblue',\\n        },\\n      },\\n      {\\n        id: 'centroids',\\n        source: 'area',\\n        'source-layer': 'centroids',\\n        type: 'circle', //background?/\\n        paint: {\\n          'circle-radius': 0.6,\\n          'circle-color': 'red',\\n\\n          'circle-opacity': 0.8,\\n        },\\n      },\\n    ];\\n\\n    if ('SpeechSynthesisUtterance' in window) {\\n      var msg = new SpeechSynthesisUtterance();\\n      console.error(\\n        'speech tools enabled - \\"context menu\\". Use two finger click on mac trackpad to trigger'\\n      );\\n    }\\n\\n    $mapfunctions = [\\n      {\\n        event: 'contextmenu',\\n        layer: 'bounds',\\n        callback: (e) => {\\n          if (speak) {\\n            console.log(e.features[0].properties);\\n            var props = e.features[0].properties;\\n            msg.text = props.name;\\n            if (!window.speechSynthesis.speaking) {\\n              window.speechSynthesis.speak(msg);\\n            }\\n          }\\n        },\\n      },\\n    ];\\n\\n    function recolour() {\\n      query.set(simplify_query()); // this is a promise\\n\\n      const items = $selected[$selected.length - 1];\\n\\n      console.warn('---recolour', ...items.oa);\\n      $mapobject.setPaintProperty('bounds', 'fill-color', [\\n        'match',\\n        ['get', 'oa'],\\n        ['literal', ...items.oa],\\n        'orange',\\n        // [\\n        // \\t\\"match\\",\\n        // \\t[\\"get\\", areatype],\\n        // \\t[\\"literal\\", ...$selected],\\n        // \\t\\"green\\",\\n        // \\t\\"transparent\\",\\n        // ],\\n        'transparent',\\n      ]);\\n    }\\n\\n    // wait until the data has loaded\\n    $mapobject.on('load', () => {\\n      selected.subscribe(recolour);\\n    });\\n  } //endinit\\n\\n  onMount(init);\\n</script>\\n\\n<!-- on:coordinate_change={update_area} /> -->\\n<main class=\\"w-screen min-h-screen flex flex-col\\">\\n  <div id=\\"map\\">\\n    <AreaMap drawing_tools={true} />\\n  </div>\\n  <header>\\n    <Grid>\\n      <Row id=\\"head1\\">\\n        <Column\\n          ><img\\n            style=\\"margin-left:10px;margin-top:4px\\"\\n            class=\\"logo\\"\\n            src=\\"https://cdn.ons.gov.uk/assets/images/ons-logo/v2/ons-logo.svg\\"\\n            alt=\\"Office for National Statistics logo - Homepage\\"\\n          />\\n        </Column>\\n        <Column style=\\"float:right;margin-right:2px\\">\\n          <Breadcrumb>\\n            <BreadcrumbItem href=\\"/draw\\">Draw Area</BreadcrumbItem>\\n            <BreadcrumbItem href=\\"/\\">Save + Load Area</BreadcrumbItem>\\n            <BreadcrumbItem href=\\"/\\">Build Profile</BreadcrumbItem>\\n          </Breadcrumb>\\n        </Column>\\n      </Row>\\n      <Row\\n        style=\\"background-color:#13518d;height:calc(.085*var(--header-1-height));margin-bottom:0px;\\"\\n      />\\n\\n      <Row id=\\"head2\\">\\n        <!-- <Column></Column> -->\\n        <Column>\\n          <DrawButtons />\\n        </Column><Column>\\n          <EditButtons />\\n        </Column><Column>\\n          <PostcodeSearch />\\n          <!-- </Column><Column> -->\\n          <ProgressButtons />\\n        </Column>\\n      </Row>\\n    </Grid>\\n\\n    <InfoBox open={$selected.length < 2}>\\n      {#if $draw_enabled}\\n        <ToastNotification\\n          style=\\"width:100%\\"\\n          hideCloseButton\\n          kind=\\"warning\\"\\n          title=\\"Zoom in to begin drawing. \\"\\n          subtitle=\\"The map needs to be at least on zoom level 9 to begin drawing. \\"\\n          caption=\\"\\"\\n        />\\n      {:else if $draw_type === 'radius'}\\n        <ItemAccordion title=\\"Draw Area\\" subtitle=\\"Distance Selection Tool\\">\\n          <Slider\\n            ariaLabelInput=\\"Radius Selection (km)\\"\\n            id=\\"slider\\"\\n            labelText=\\"Radius Selection (km)\\"\\n            max={30}\\n            min={0.2}\\n            step={0.2}\\n            stepMuliplier={4}\\n            value={5}\\n            on:change={function (value) {\\n              console.log('slider value', value.detail);\\n              $radiusInKm = value.detail;\\n            }}\\n          />\\n\\n          <p>\\n            Move the slider below to select the radius you are interested in,\\n            and then click to select an area.\\n          </p>\\n          <br />\\n        </ItemAccordion>\\n      {:else if $draw_type === 'click'}\\n        <ItemAccordion title=\\"Draw Area\\" subtitle=\\"Click Selection\\">\\n          <p>Click on any areas you are interested in.</p>\\n        </ItemAccordion>\\n      {:else if $draw_type === 'poly'}\\n        <ItemAccordion title=\\"Draw Area\\" subtitle=\\"Polygon Selection\\">\\n          <p>\\n            Click on each corner of the shape you want to build, and then back\\n            onto the first vertex to select.\\n          </p>\\n        </ItemAccordion>\\n      {/if}\\n\\n      {#await $query then value}\\n        {#if value.error != null}\\n          <ToastNotification\\n            style=\\"width:100%\\"\\n            hideCloseButton\\n            kind=\\"error\\"\\n            subtitle={value.error_title}\\n            caption={value.error}\\n          />\\n        {:else if value.oa}\\n          <ItemAccordion title=\\"\\" subtitle=\\"Compressed Selection\\">\\n            <small>\\n              <b> MSOA: </b> <span>{value.msoa.length}</span> <br />\\n              <b> LSOA: </b> <span>{value.lsoa.length}</span> <br />\\n              <b> OA: </b> <span>{value.oa.length}</span> <br />\\n              parent tile: {value.tile}; # original output areas {value.original}\\n            </small>\\n          </ItemAccordion>\\n        {/if}\\n      {/await}\\n    </InfoBox>\\n  </header>\\n</main>\\n\\n<style>\\n  :root {\\n    --header-2-height: clamp(2rem, 4vh, 60px);\\n    --header-1-height: clamp(1rem, 5vh, 40px);\\n    --bar: #343a45;\\n    /* --second-color: #ff7; */\\n  }\\n  #toggle {\\n    height: calc(var(--header-2-height) / 2) !important;\\n  }\\n\\n  :global(.icon) {\\n    border: 1px solid rgb(113, 113, 113);\\n    /* margin-left:-1.5px; */\\n    aspect-ratio: 1/1;\\n    height: auto;\\n    width: var(--header-2-height) !important;\\n  }\\n  header {\\n    /* position:absolute; */\\n    display: block;\\n    position: fixed;\\n    width: 100vw;\\n    margin: 0 !important;\\n  }\\n  :global(.bx--grid) {\\n    left: 0;\\n    right: 0;\\n    margin-left: 0;\\n    margin-right: 0px;\\n    padding-left: 0px;\\n    padding-right: 0px;\\n    width: 100vw;\\n  }\\n  :global(#head1) {\\n    width: 100vw;\\n    height: var(--header-1-height) !important;\\n    background-color: whitesmoke;\\n    margin: 0;\\n  }\\n  :global(#head2) {\\n    left: 0;\\n    right: 0;\\n    margin-left: 15px;\\n    margin-right: 15px;\\n    padding-left: 0px;\\n    padding-right: 30px;\\n    width: 100%;\\n    /* height: var(--header-2-height) !important; */\\n    background-color: var(--bar);\\n    /* margin: 0; */\\n    margin-bottom: 1.2rem;\\n  }\\n  .logo {\\n    height: calc(var(--header-1-height) * 0.7) !important;\\n    width: auto;\\n  }\\n\\n  :global(.bx--col) {\\n    /* margin:auto; */\\n    padding: 0 !important;\\n    display: flex;\\n    float: right;\\n    right: 0;\\n    margin: auto;\\n    flex-grow: 3 !important;\\n    text-align: right;\\n    justify-content: space-between;\\n  }\\n\\n  :global(small) {\\n    font: revert;\\n    font-size: revert;\\n  }\\n  :global(.bx--btn--secondary) {\\n    background-color: var(--bar);\\n    filter: brightness(0.85);\\n  }\\n\\n  :global(header){\\n    height: 100px;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAgRE,KAAK,AAAC,CAAC,AACL,iBAAiB,CAAE,sBAAsB,CACzC,iBAAiB,CAAE,sBAAsB,CACzC,KAAK,CAAE,OAAO,AAEhB,CAAC,AAKO,KAAK,AAAE,CAAC,AACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAEpC,YAAY,CAAE,CAAC,CAAC,CAAC,CACjB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,iBAAiB,CAAC,CAAC,UAAU,AAC1C,CAAC,AACD,MAAM,eAAC,CAAC,AAEN,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,CAAC,CAAC,UAAU,AACtB,CAAC,AACO,SAAS,AAAE,CAAC,AAClB,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,WAAW,CAAE,CAAC,CACd,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,KAAK,AACd,CAAC,AACO,MAAM,AAAE,CAAC,AACf,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,iBAAiB,CAAC,CAAC,UAAU,CACzC,gBAAgB,CAAE,UAAU,CAC5B,MAAM,CAAE,CAAC,AACX,CAAC,AACO,MAAM,AAAE,CAAC,AACf,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,IAAI,CAEX,gBAAgB,CAAE,IAAI,KAAK,CAAC,CAE5B,aAAa,CAAE,MAAM,AACvB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,MAAM,CAAE,KAAK,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,CACrD,KAAK,CAAE,IAAI,AACb,CAAC,AAEO,QAAQ,AAAE,CAAC,AAEjB,OAAO,CAAE,CAAC,CAAC,UAAU,CACrB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,CACZ,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,CAAC,CAAC,UAAU,CACvB,UAAU,CAAE,KAAK,CACjB,eAAe,CAAE,aAAa,AAChC,CAAC,AAEO,KAAK,AAAE,CAAC,AACd,IAAI,CAAE,MAAM,CACZ,SAAS,CAAE,MAAM,AACnB,CAAC,AACO,mBAAmB,AAAE,CAAC,AAC5B,gBAAgB,CAAE,IAAI,KAAK,CAAC,CAC5B,MAAM,CAAE,WAAW,IAAI,CAAC,AAC1B,CAAC,AAEO,MAAM,AAAC,CAAC,AACd,MAAM,CAAE,KAAK,AACf,CAAC"}`
};
const Draw = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $mapsource, $$unsubscribe_mapsource;
  let $maplayer, $$unsubscribe_maplayer;
  let $mapfunctions, $$unsubscribe_mapfunctions;
  let $selected, $$unsubscribe_selected;
  let $mapobject, $$unsubscribe_mapobject;
  let $draw_enabled, $$unsubscribe_draw_enabled;
  let $draw_type, $$unsubscribe_draw_type;
  let $$unsubscribe_radiusInKm;
  let $query, $$unsubscribe_query;
  $$unsubscribe_mapsource = subscribe(mapsource, (value) => $mapsource = value);
  $$unsubscribe_maplayer = subscribe(maplayer, (value) => $maplayer = value);
  $$unsubscribe_mapfunctions = subscribe(mapfunctions, (value) => $mapfunctions = value);
  $$unsubscribe_selected = subscribe(selected, (value) => $selected = value);
  $$unsubscribe_mapobject = subscribe(mapobject, (value) => $mapobject = value);
  $$unsubscribe_draw_enabled = subscribe(draw_enabled, (value) => $draw_enabled = value);
  $$unsubscribe_draw_type = subscribe(draw_type, (value) => $draw_type = value);
  $$unsubscribe_radiusInKm = subscribe(radiusInKm, (value) => value);
  $$unsubscribe_query = subscribe(query, (value) => $query = value);
  let webgl_canvas;
  let {width = "100%"} = $$props;
  let {height = "100%"} = $$props;
  async function init2() {
    console.clear();
    console.warn(webgl_canvas);
    console.log("---" + window.location.host.split(":")[0] + "---");
    set_store_value(mapsource, $mapsource = {
      area: {
        type: "vector",
        tiles: [
          `http://localhost:7113/{z}/{x}/{y}.pbf`
        ]
      }
    }, $mapsource);
    console.warn("mapsource", $mapsource);
    set_store_value(maplayer, $maplayer = [
      {
        id: "bounds",
        source: "area",
        "source-layer": "geodraw",
        type: "fill",
        paint: {
          "fill-color": "transparent",
          "fill-opacity": 0.7,
          "fill-outline-color": "steelblue"
        }
      },
      {
        id: "centroids",
        source: "area",
        "source-layer": "centroids",
        type: "circle",
        paint: {
          "circle-radius": 0.6,
          "circle-color": "red",
          "circle-opacity": 0.8
        }
      }
    ], $maplayer);
    if ("SpeechSynthesisUtterance" in window) {
      new SpeechSynthesisUtterance();
      console.error('speech tools enabled - "context menu". Use two finger click on mac trackpad to trigger');
    }
    set_store_value(mapfunctions, $mapfunctions = [
      {
        event: "contextmenu",
        layer: "bounds",
        callback: (e) => {
        }
      }
    ], $mapfunctions);
    function recolour() {
      query.set(simplify_query());
      const items = $selected[$selected.length - 1];
      console.warn("---recolour", ...items.oa);
      $mapobject.setPaintProperty("bounds", "fill-color", [
        "match",
        ["get", "oa"],
        ["literal", ...items.oa],
        "orange",
        "transparent"
      ]);
    }
    $mapobject.on("load", () => {
      selected.subscribe(recolour);
    });
  }
  onMount(init2);
  if ($$props.width === void 0 && $$bindings.width && width !== void 0)
    $$bindings.width(width);
  if ($$props.height === void 0 && $$bindings.height && height !== void 0)
    $$bindings.height(height);
  $$result.css.add(css);
  $$unsubscribe_mapsource();
  $$unsubscribe_maplayer();
  $$unsubscribe_mapfunctions();
  $$unsubscribe_selected();
  $$unsubscribe_mapobject();
  $$unsubscribe_draw_enabled();
  $$unsubscribe_draw_type();
  $$unsubscribe_radiusInKm();
  $$unsubscribe_query();
  return `
<main class="${"w-screen min-h-screen flex flex-col svelte-10r4fzz"}"><div id="${"map"}" class="${"svelte-10r4fzz"}">${validate_component(AreaMap, "AreaMap").$$render($$result, {drawing_tools: true}, {}, {})}</div>
  <header class="${"svelte-10r4fzz"}">${validate_component(Grid, "Grid").$$render($$result, {}, {}, {
    default: () => `${validate_component(Row, "Row").$$render($$result, {id: "head1"}, {}, {
      default: () => `${validate_component(Column, "Column").$$render($$result, {}, {}, {
        default: () => `<img style="${"margin-left:10px;margin-top:4px"}" class="${"logo svelte-10r4fzz"}" src="${"https://cdn.ons.gov.uk/assets/images/ons-logo/v2/ons-logo.svg"}" alt="${"Office for National Statistics logo - Homepage"}">`
      })}
        ${validate_component(Column, "Column").$$render($$result, {style: "float:right;margin-right:2px"}, {}, {
        default: () => `${validate_component(Breadcrumb, "Breadcrumb").$$render($$result, {}, {}, {
          default: () => `${validate_component(BreadcrumbItem, "BreadcrumbItem").$$render($$result, {href: "/draw"}, {}, {default: () => `Draw Area`})}
            ${validate_component(BreadcrumbItem, "BreadcrumbItem").$$render($$result, {href: "/"}, {}, {default: () => `Save + Load Area`})}
            ${validate_component(BreadcrumbItem, "BreadcrumbItem").$$render($$result, {href: "/"}, {}, {default: () => `Build Profile`})}`
        })}`
      })}`
    })}
      ${validate_component(Row, "Row").$$render($$result, {
      style: "background-color:#13518d;height:calc(.085*var(--header-1-height));margin-bottom:0px;"
    }, {}, {})}

      ${validate_component(Row, "Row").$$render($$result, {id: "head2"}, {}, {
      default: () => `
        ${validate_component(Column, "Column").$$render($$result, {}, {}, {
        default: () => `${validate_component(DrawButtons, "DrawButtons").$$render($$result, {}, {}, {})}`
      })}${validate_component(Column, "Column").$$render($$result, {}, {}, {
        default: () => `${validate_component(EditButtons, "EditButtons").$$render($$result, {}, {}, {})}`
      })}${validate_component(Column, "Column").$$render($$result, {}, {}, {
        default: () => `${validate_component(PostcodeSearch, "PostcodeSearch").$$render($$result, {}, {}, {})}
          
          ${validate_component(ProgressButtons, "ProgressButtons").$$render($$result, {}, {}, {})}`
      })}`
    })}`
  })}

    ${validate_component(InfoBox, "InfoBox").$$render($$result, {open: $selected.length < 2}, {}, {
    default: () => `${$draw_enabled ? `${validate_component(ToastNotification, "ToastNotification").$$render($$result, {
      style: "width:100%",
      hideCloseButton: true,
      kind: "warning",
      title: "Zoom in to begin drawing. ",
      subtitle: "The map needs to be at least on zoom level 9 to begin drawing. ",
      caption: ""
    }, {}, {})}` : `${$draw_type === "radius" ? `${validate_component(ItemAccordion, "ItemAccordion").$$render($$result, {
      title: "Draw Area",
      subtitle: "Distance Selection Tool"
    }, {}, {
      default: () => `${validate_component(Slider, "Slider").$$render($$result, {
        ariaLabelInput: "Radius Selection (km)",
        id: "slider",
        labelText: "Radius Selection (km)",
        max: 30,
        min: 0.2,
        step: 0.2,
        stepMuliplier: 4,
        value: 5
      }, {}, {})}

          <p class="${"svelte-10r4fzz"}">Move the slider below to select the radius you are interested in,
            and then click to select an area.
          </p>
          <br class="${"svelte-10r4fzz"}">`
    })}` : `${$draw_type === "click" ? `${validate_component(ItemAccordion, "ItemAccordion").$$render($$result, {
      title: "Draw Area",
      subtitle: "Click Selection"
    }, {}, {
      default: () => `<p class="${"svelte-10r4fzz"}">Click on any areas you are interested in.</p>`
    })}` : `${$draw_type === "poly" ? `${validate_component(ItemAccordion, "ItemAccordion").$$render($$result, {
      title: "Draw Area",
      subtitle: "Polygon Selection"
    }, {}, {
      default: () => `<p class="${"svelte-10r4fzz"}">Click on each corner of the shape you want to build, and then back
            onto the first vertex to select.
          </p>`
    })}` : ``}`}`}`}

      ${function(__value) {
      if (is_promise(__value))
        return ``;
      return function(value) {
        return `
        ${value.error != null ? `${validate_component(ToastNotification, "ToastNotification").$$render($$result, {
          style: "width:100%",
          hideCloseButton: true,
          kind: "error",
          subtitle: value.error_title,
          caption: value.error
        }, {}, {})}` : `${value.oa ? `${validate_component(ItemAccordion, "ItemAccordion").$$render($$result, {
          title: "",
          subtitle: "Compressed Selection"
        }, {}, {
          default: () => `<small class="${"svelte-10r4fzz"}"><b class="${"svelte-10r4fzz"}">MSOA: </b> <span class="${"svelte-10r4fzz"}">${escape(value.msoa.length)}</span> <br class="${"svelte-10r4fzz"}">
              <b class="${"svelte-10r4fzz"}">LSOA: </b> <span class="${"svelte-10r4fzz"}">${escape(value.lsoa.length)}</span> <br class="${"svelte-10r4fzz"}">
              <b class="${"svelte-10r4fzz"}">OA: </b> <span class="${"svelte-10r4fzz"}">${escape(value.oa.length)}</span> <br class="${"svelte-10r4fzz"}">
              parent tile: ${escape(value.tile)}; # original output areas ${escape(value.original)}</small>`
        })}` : ``}`}
      `;
      }(__value);
    }($query)}`
  })}</header>
</main>`;
});
var index = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Draw
});
function rangePlugin(config = {}) {
  return function(fp) {
    let dateFormat = "", secondInput, _secondInputFocused, _prevDates;
    const createSecondInput = () => {
      if (config.input) {
        secondInput = config.input instanceof Element ? config.input : window.document.querySelector(config.input);
        if (!secondInput) {
          fp.config.errorHandler(new Error("Invalid input element specified"));
          return;
        }
        if (fp.config.wrap) {
          secondInput = secondInput.querySelector("[data-input]");
        }
      } else {
        secondInput = fp._input.cloneNode();
        secondInput.removeAttribute("id");
        secondInput._flatpickr = void 0;
      }
      if (secondInput.value) {
        const parsedDate = fp.parseDate(secondInput.value);
        if (parsedDate)
          fp.selectedDates.push(parsedDate);
      }
      secondInput.setAttribute("data-fp-omit", "");
      if (fp.config.clickOpens) {
        fp._bind(secondInput, ["focus", "click"], () => {
          if (fp.selectedDates[1]) {
            fp.latestSelectedDateObj = fp.selectedDates[1];
            fp._setHoursFromDate(fp.selectedDates[1]);
            fp.jumpToDate(fp.selectedDates[1]);
          }
          _secondInputFocused = true;
          fp.isOpen = false;
          fp.open(void 0, config.position === "left" ? fp._input : secondInput);
        });
        fp._bind(fp._input, ["focus", "click"], (e) => {
          e.preventDefault();
          fp.isOpen = false;
          fp.open();
        });
      }
      if (fp.config.allowInput)
        fp._bind(secondInput, "keydown", (e) => {
          if (e.key === "Enter") {
            fp.setDate([fp.selectedDates[0], secondInput.value], true, dateFormat);
            secondInput.click();
          }
        });
      if (!config.input)
        fp._input.parentNode && fp._input.parentNode.insertBefore(secondInput, fp._input.nextSibling);
    };
    const plugin = {
      onParseConfig() {
        fp.config.mode = "range";
        dateFormat = fp.config.altInput ? fp.config.altFormat : fp.config.dateFormat;
      },
      onReady() {
        createSecondInput();
        fp.config.ignoredFocusElements.push(secondInput);
        if (fp.config.allowInput) {
          fp._input.removeAttribute("readonly");
          secondInput.removeAttribute("readonly");
        } else {
          secondInput.setAttribute("readonly", "readonly");
        }
        fp._bind(fp._input, "focus", () => {
          fp.latestSelectedDateObj = fp.selectedDates[0];
          fp._setHoursFromDate(fp.selectedDates[0]);
          _secondInputFocused = false;
          fp.jumpToDate(fp.selectedDates[0]);
        });
        if (fp.config.allowInput)
          fp._bind(fp._input, "keydown", (e) => {
            if (e.key === "Enter")
              fp.setDate([fp._input.value, fp.selectedDates[1]], true, dateFormat);
          });
        fp.setDate(fp.selectedDates, false);
        plugin.onValueUpdate(fp.selectedDates);
        fp.loadedPlugins.push("range");
      },
      onPreCalendarPosition() {
        if (_secondInputFocused) {
          fp._positionElement = secondInput;
          setTimeout(() => {
            fp._positionElement = fp._input;
          }, 0);
        }
      },
      onChange() {
        if (!fp.selectedDates.length) {
          setTimeout(() => {
            if (fp.selectedDates.length)
              return;
            secondInput.value = "";
            _prevDates = [];
          }, 10);
        }
        if (_secondInputFocused) {
          setTimeout(() => {
            secondInput.focus();
          }, 0);
        }
      },
      onDestroy() {
        if (!config.input)
          secondInput.parentNode && secondInput.parentNode.removeChild(secondInput);
      },
      onValueUpdate(selDates) {
        if (!secondInput)
          return;
        _prevDates = !_prevDates || selDates.length >= _prevDates.length ? [...selDates] : _prevDates;
        if (_prevDates.length > selDates.length) {
          const newSelectedDate = selDates[0];
          const newDates = _secondInputFocused ? [_prevDates[0], newSelectedDate] : [newSelectedDate, _prevDates[1]];
          fp.setDate(newDates, false);
          _prevDates = [...newDates];
        }
        [
          fp._input.value = "",
          secondInput.value = ""
        ] = fp.selectedDates.map((d2) => fp.formatDate(d2, dateFormat));
      }
    };
    return plugin;
  };
}
var rangePlugin$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": rangePlugin
});
export {init, render};
